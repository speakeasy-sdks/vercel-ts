/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.
 */
export type Pagination = {
    /**
     * Amount of items in the current page.
     */
    count: number;
    /**
     * Timestamp that must be used to request the next page.
     */
    next: number | null;
    /**
     * Timestamp that must be used to request the previous page.
     */
    prev: number | null;
};

/** @internal */
export namespace Pagination$ {
    export const inboundSchema: z.ZodType<Pagination, z.ZodTypeDef, unknown> = z.object({
        count: z.number(),
        next: z.nullable(z.number()),
        prev: z.nullable(z.number()),
    });

    export type Outbound = {
        count: number;
        next: number | null;
        prev: number | null;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Pagination> = z.object({
        count: z.number(),
        next: z.nullable(z.number()),
        prev: z.nullable(z.number()),
    });
}
