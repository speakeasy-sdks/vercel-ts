/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../types/enums.js";
import * as z from "zod";

export const Reason = {
    SubscriptionCanceled: "SUBSCRIPTION_CANCELED",
    SubscriptionExpired: "SUBSCRIPTION_EXPIRED",
    UnpaidInvoice: "UNPAID_INVOICE",
    EnterpriseTrialEnded: "ENTERPRISE_TRIAL_ENDED",
    FairUseLimitsExceeded: "FAIR_USE_LIMITS_EXCEEDED",
    BlockedForPlatformAbuse: "BLOCKED_FOR_PLATFORM_ABUSE",
} as const;
export type Reason = ClosedEnum<typeof Reason>;

export const BlockedDueToOverageType = {
    AnalyticsUsage: "analyticsUsage",
    Artifacts: "artifacts",
    Bandwidth: "bandwidth",
    BlobStores: "blobStores",
    BlobTotalAdvancedRequests: "blobTotalAdvancedRequests",
    BlobTotalAvgSizeInBytes: "blobTotalAvgSizeInBytes",
    BlobTotalGetResponseObjectSizeInBytes: "blobTotalGetResponseObjectSizeInBytes",
    BlobTotalSimpleRequests: "blobTotalSimpleRequests",
    BuildMinute: "buildMinute",
    DataCacheRead: "dataCacheRead",
    DataCacheRevalidation: "dataCacheRevalidation",
    DataCacheWrite: "dataCacheWrite",
    EdgeConfigRead: "edgeConfigRead",
    EdgeConfigWrite: "edgeConfigWrite",
    EdgeFunctionExecutionUnits: "edgeFunctionExecutionUnits",
    EdgeMiddlewareInvocations: "edgeMiddlewareInvocations",
    EdgeRequest: "edgeRequest",
    EdgeRequestAdditionalCpuDuration: "edgeRequestAdditionalCpuDuration",
    FastDataTransfer: "fastDataTransfer",
    FastOriginTransfer: "fastOriginTransfer",
    FunctionDuration: "functionDuration",
    FunctionInvocation: "functionInvocation",
    LogDrainsVolume: "logDrainsVolume",
    MonitoringMetric: "monitoringMetric",
    PostgresComputeTime: "postgresComputeTime",
    PostgresDataStorage: "postgresDataStorage",
    PostgresDataTransfer: "postgresDataTransfer",
    PostgresDatabase: "postgresDatabase",
    PostgresWrittenData: "postgresWrittenData",
    ServerlessFunctionExecution: "serverlessFunctionExecution",
    SourceImages: "sourceImages",
    StorageRedisTotalBandwidthInBytes: "storageRedisTotalBandwidthInBytes",
    StorageRedisTotalCommands: "storageRedisTotalCommands",
    StorageRedisTotalDailyAvgStorageInBytes: "storageRedisTotalDailyAvgStorageInBytes",
    StorageRedisTotalDatabases: "storageRedisTotalDatabases",
    WafOwaspExcessBytes: "wafOwaspExcessBytes",
    WafOwaspRequests: "wafOwaspRequests",
    WebAnalyticsEvent: "webAnalyticsEvent",
} as const;
export type BlockedDueToOverageType = ClosedEnum<typeof BlockedDueToOverageType>;

/**
 * When the User account has been "soft blocked", this property will contain the date when the restriction was enacted, and the identifier for why.
 */
export type SoftBlock = {
    blockedAt: number;
    reason: Reason;
    blockedDueToOverageType?: BlockedDueToOverageType | undefined;
};

export const Currency = {
    Usd: "usd",
    Eur: "eur",
} as const;
export type Currency = ClosedEnum<typeof Currency>;

export type Period = {
    start: number;
    end: number;
};

export type Contract = {
    start: number;
    end: number;
};

export const Plan = {
    Pro: "pro",
    Enterprise: "enterprise",
    Hobby: "hobby",
} as const;
export type Plan = ClosedEnum<typeof Plan>;

export const Platform = {
    Stripe: "stripe",
    StripeTestMode: "stripeTestMode",
} as const;
export type Platform = ClosedEnum<typeof Platform>;

export const ProgramType = {
    Startup: "startup",
    Agency: "agency",
} as const;
export type ProgramType = ClosedEnum<typeof ProgramType>;

export type Trial = {
    start: number;
    end: number;
};

export type Tax = {
    type: string;
    id: string;
};

export type Address = {
    line1?: string | undefined;
    line2?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    state?: string | undefined;
};

export const AuthUserBillingInvoiceItemsConcurrentBuildsInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsConcurrentBuildsInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsConcurrentBuildsInterval
>;

export type AuthUserBillingInvoiceItemsConcurrentBuildsFrequency = {
    interval: AuthUserBillingInvoiceItemsConcurrentBuildsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type ConcurrentBuilds = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsConcurrentBuildsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserInterval = {
    Month: "month",
} as const;
export type AuthUserInterval = ClosedEnum<typeof AuthUserInterval>;

export type AuthUserFrequency = {
    interval: AuthUserInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type AuthUserWebAnalytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInterval = ClosedEnum<typeof AuthUserBillingInterval>;

export type AuthUserBillingFrequency = {
    interval: AuthUserBillingInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Pro = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsInterval
>;

export type AuthUserBillingInvoiceItemsFrequency = {
    interval: AuthUserBillingInvoiceItemsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Enterprise = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsAnalyticsInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsAnalyticsInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsAnalyticsInterval
>;

export type AuthUserBillingInvoiceItemsAnalyticsFrequency = {
    interval: AuthUserBillingInvoiceItemsAnalyticsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Analytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsAnalyticsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval
>;

export type AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency = {
    interval: AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type DeveloperExperiencePlatform = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval
>;

export type AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency = {
    interval: AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type IncludedAllocationMiu = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval
>;

export type AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency = {
    interval: AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type ManagedInfrastructureCommitment = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsMonitoringInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsMonitoringInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsMonitoringInterval
>;

export type AuthUserBillingInvoiceItemsMonitoringFrequency = {
    interval: AuthUserBillingInvoiceItemsMonitoringInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Monitoring = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsMonitoringFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsPasswordProtectionInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsPasswordProtectionInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsPasswordProtectionInterval
>;

export type AuthUserBillingInvoiceItemsPasswordProtectionFrequency = {
    interval: AuthUserBillingInvoiceItemsPasswordProtectionInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type PasswordProtection = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsPasswordProtectionFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval
>;

export type AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency = {
    interval: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type PreviewDeploymentSuffix = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsSamlInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsSamlInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsSamlInterval
>;

export type AuthUserBillingInvoiceItemsSamlFrequency = {
    interval: AuthUserBillingInvoiceItemsSamlInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type AuthUserSaml = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsSamlFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsTeamSeatsInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsTeamSeatsInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsTeamSeatsInterval
>;

export type AuthUserBillingInvoiceItemsTeamSeatsFrequency = {
    interval: AuthUserBillingInvoiceItemsTeamSeatsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type TeamSeats = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsTeamSeatsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export const AuthUserBillingInvoiceItemsVercelMarketplaceInterval = {
    Month: "month",
} as const;
export type AuthUserBillingInvoiceItemsVercelMarketplaceInterval = ClosedEnum<
    typeof AuthUserBillingInvoiceItemsVercelMarketplaceInterval
>;

export type AuthUserBillingInvoiceItemsVercelMarketplaceFrequency = {
    interval: AuthUserBillingInvoiceItemsVercelMarketplaceInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type VercelMarketplace = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    /**
     * The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.
     */
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsVercelMarketplaceFrequency | undefined;
    maxQuantity?: number | undefined;
};

export type Matrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type AnalyticsUsage = {
    matrix?: Matrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type ArtifactsModel = {
    matrix?: AuthUserMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type Bandwidth = {
    matrix?: AuthUserBillingMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobStores = {
    matrix?: AuthUserBillingInvoiceItemsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalAdvancedRequests = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalAvgSizeInBytes = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalGetResponseObjectSizeInBytes = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalSimpleRequests = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBuildMinuteMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BuildMinute = {
    matrix?: AuthUserBillingInvoiceItemsBuildMinuteMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsDataCacheReadMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type DataCacheRead = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheReadMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type DataCacheRevalidation = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsDataCacheWriteMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type DataCacheWrite = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheWriteMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeConfigReadMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeConfigRead = {
    matrix?: AuthUserBillingInvoiceItemsEdgeConfigReadMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeConfigWrite = {
    matrix?: AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeFunctionExecutionUnits = {
    matrix?: AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeMiddlewareInvocations = {
    matrix?: AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeRequestMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeRequest = {
    matrix?: AuthUserBillingInvoiceItemsEdgeRequestMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeRequestAdditionalCpuDuration = {
    matrix?: AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFastDataTransferMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FastDataTransfer = {
    matrix?: AuthUserBillingInvoiceItemsFastDataTransferMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFastOriginTransferMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FastOriginTransfer = {
    matrix?: AuthUserBillingInvoiceItemsFastOriginTransferMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFunctionDurationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FunctionDuration = {
    matrix?: AuthUserBillingInvoiceItemsFunctionDurationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFunctionInvocationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FunctionInvocation = {
    matrix?: AuthUserBillingInvoiceItemsFunctionInvocationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type LogDrainsVolume = {
    matrix?: AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsMonitoringMetricMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type MonitoringMetric = {
    matrix?: AuthUserBillingInvoiceItemsMonitoringMetricMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresComputeTime = {
    matrix?: AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresDataStorageMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresDataStorage = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDataStorageMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresDataTransferMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresDataTransfer = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDataTransferMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresDatabaseMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresDatabase = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDatabaseMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresWrittenData = {
    matrix?: AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type ServerlessFunctionExecution = {
    matrix?: AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsSourceImagesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type SourceImages = {
    matrix?: AuthUserBillingInvoiceItemsSourceImagesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalBandwidthInBytes = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalCommands = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalDailyAvgStorageInBytes = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalDatabases = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type WafOwaspExcessBytes = {
    matrix?: AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type WafOwaspRequests = {
    matrix?: AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type WebAnalyticsEvent = {
    matrix?: AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type InvoiceItems = {
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    concurrentBuilds?: ConcurrentBuilds | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    webAnalytics?: AuthUserWebAnalytics | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    pro?: Pro | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    enterprise?: Enterprise | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    analytics?: Analytics | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    developerExperiencePlatform?: DeveloperExperiencePlatform | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    includedAllocationMiu?: IncludedAllocationMiu | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    managedInfrastructureCommitment?: ManagedInfrastructureCommitment | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    monitoring?: Monitoring | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    passwordProtection?: PasswordProtection | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    previewDeploymentSuffix?: PreviewDeploymentSuffix | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    saml?: AuthUserSaml | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    teamSeats?: TeamSeats | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    vercelMarketplace?: VercelMarketplace | undefined;
    analyticsUsage?: AnalyticsUsage | undefined;
    artifacts?: ArtifactsModel | undefined;
    bandwidth?: Bandwidth | undefined;
    blobStores?: BlobStores | undefined;
    blobTotalAdvancedRequests?: BlobTotalAdvancedRequests | undefined;
    blobTotalAvgSizeInBytes?: BlobTotalAvgSizeInBytes | undefined;
    blobTotalGetResponseObjectSizeInBytes?: BlobTotalGetResponseObjectSizeInBytes | undefined;
    blobTotalSimpleRequests?: BlobTotalSimpleRequests | undefined;
    buildMinute?: BuildMinute | undefined;
    dataCacheRead?: DataCacheRead | undefined;
    dataCacheRevalidation?: DataCacheRevalidation | undefined;
    dataCacheWrite?: DataCacheWrite | undefined;
    edgeConfigRead?: EdgeConfigRead | undefined;
    edgeConfigWrite?: EdgeConfigWrite | undefined;
    edgeFunctionExecutionUnits?: EdgeFunctionExecutionUnits | undefined;
    edgeMiddlewareInvocations?: EdgeMiddlewareInvocations | undefined;
    edgeRequest?: EdgeRequest | undefined;
    edgeRequestAdditionalCpuDuration?: EdgeRequestAdditionalCpuDuration | undefined;
    fastDataTransfer?: FastDataTransfer | undefined;
    fastOriginTransfer?: FastOriginTransfer | undefined;
    functionDuration?: FunctionDuration | undefined;
    functionInvocation?: FunctionInvocation | undefined;
    logDrainsVolume?: LogDrainsVolume | undefined;
    monitoringMetric?: MonitoringMetric | undefined;
    postgresComputeTime?: PostgresComputeTime | undefined;
    postgresDataStorage?: PostgresDataStorage | undefined;
    postgresDataTransfer?: PostgresDataTransfer | undefined;
    postgresDatabase?: PostgresDatabase | undefined;
    postgresWrittenData?: PostgresWrittenData | undefined;
    serverlessFunctionExecution?: ServerlessFunctionExecution | undefined;
    sourceImages?: SourceImages | undefined;
    storageRedisTotalBandwidthInBytes?: StorageRedisTotalBandwidthInBytes | undefined;
    storageRedisTotalCommands?: StorageRedisTotalCommands | undefined;
    storageRedisTotalDailyAvgStorageInBytes?: StorageRedisTotalDailyAvgStorageInBytes | undefined;
    storageRedisTotalDatabases?: StorageRedisTotalDatabases | undefined;
    wafOwaspExcessBytes?: WafOwaspExcessBytes | undefined;
    wafOwaspRequests?: WafOwaspRequests | undefined;
    webAnalyticsEvent?: WebAnalyticsEvent | undefined;
};

export type InvoiceSettings = {
    footer?: string | undefined;
};

export type AuthUserTrial = {
    start: number;
    end: number;
};

export type AuthUserPeriod = {
    start: number;
    end: number;
};

export const Interval = {
    Month: "month",
    Day: "day",
    Week: "week",
    Year: "year",
} as const;
export type Interval = ClosedEnum<typeof Interval>;

export type Frequency = {
    interval: Interval;
    intervalCount: number;
};

export const Duration = {
    Forever: "forever",
    Repeating: "repeating",
    Once: "once",
} as const;
export type Duration = ClosedEnum<typeof Duration>;

export type Coupon = {
    id: string;
    name: string | null;
    amountOff: number | null;
    percentageOff: number | null;
    durationInMonths: number | null;
    duration: Duration;
};

export type Discount = {
    id: string;
    coupon: Coupon;
};

export type Items = {
    id: string;
    priceId: string;
    productId: string;
    amount: number;
    quantity: number;
};

export type Subscriptions = {
    id: string;
    trial: AuthUserTrial | null;
    period: AuthUserPeriod;
    frequency: Frequency;
    discount: Discount | null;
    items: Array<Items>;
};

export type Controls = {
    analyticsSampleRateInPercent?: number | null | undefined;
    analyticsSpendLimitInDollars?: number | null | undefined;
};

export const Status = {
    Active: "active",
    Trialing: "trialing",
    Overdue: "overdue",
    Expired: "expired",
    Canceled: "canceled",
} as const;
export type Status = ClosedEnum<typeof Status>;

export const PricingExperiment = {
    August2022: "august-2022",
} as const;
export type PricingExperiment = ClosedEnum<typeof PricingExperiment>;

export type AwsMarketplace = {
    productCode: string;
    offerId?: string | undefined;
    customerId: string;
};

/**
 * An object containing billing infomation associated with the User account.
 */
export type Billing = {
    currency?: Currency | undefined;
    cancelation?: number | null | undefined;
    period: Period | null;
    contract?: Contract | null | undefined;
    plan: Plan;
    planIteration?: string | undefined;
    platform?: Platform | undefined;
    orbCustomerId?: string | undefined;
    syncedAt?: number | undefined;
    programType?: ProgramType | undefined;
    trial?: Trial | null | undefined;
    email?: string | null | undefined;
    tax?: Tax | null | undefined;
    language?: string | null | undefined;
    address?: Address | null | undefined;
    name?: string | null | undefined;
    invoiceItems?: InvoiceItems | null | undefined;
    invoiceSettings?: InvoiceSettings | undefined;
    subscriptions?: Array<Subscriptions> | null | undefined;
    controls?: Controls | null | undefined;
    purchaseOrder?: string | null | undefined;
    status?: Status | undefined;
    pricingExperiment?: PricingExperiment | undefined;
    orbMigrationScheduledAt?: number | null | undefined;
    forceOrbMigration?: boolean | null | undefined;
    awsMarketplace?: AwsMarketplace | null | undefined;
    reseller?: string | undefined;
};

/**
 * An object containing infomation related to the amount of platform resources may be allocated to the User account.
 */
export type ResourceConfig = {
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    blobStores?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    nodeType?: string | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    concurrentBuilds?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    awsAccountType?: string | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    awsAccountIds?: Array<string> | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cfZoneName?: string | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    imageOptimizationType?: string | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeConfigs?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeConfigSize?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeFunctionMaxSizeBytes?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeFunctionExecutionTimeoutMs?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    serverlessFunctionDefaultMaxExecutionTime?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    kvDatabases?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    postgresDatabases?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    integrationStores?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cronJobs?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cronJobsPerProject?: number | undefined;
};

export const ViewPreference = {
    List: "list",
    Cards: "cards",
} as const;
export type ViewPreference = ClosedEnum<typeof ViewPreference>;

export const FavoritesViewPreference = {
    Open: "open",
    Closed: "closed",
} as const;
export type FavoritesViewPreference = ClosedEnum<typeof FavoritesViewPreference>;

export const RecentsViewPreference = {
    Open: "open",
    Closed: "closed",
} as const;
export type RecentsViewPreference = ClosedEnum<typeof RecentsViewPreference>;

/**
 * set of dashboard view preferences (cards or list) per scopeId
 */
export type ActiveDashboardViews = {
    scopeId: string;
    viewPreference?: ViewPreference | undefined;
    favoritesViewPreference?: FavoritesViewPreference | undefined;
    recentsViewPreference?: RecentsViewPreference | undefined;
};

export type ImportFlowGitNamespace = string | number;

export type ImportFlowGitNamespaceId = string | number;

export const ImportFlowGitProvider = {
    Github: "github",
    Gitlab: "gitlab",
    Bitbucket: "bitbucket",
} as const;
export type ImportFlowGitProvider = ClosedEnum<typeof ImportFlowGitProvider>;

export type GitNamespaceId = string | number;

export type PreferredScopesAndGitNamespaces = {
    scopeId: string;
    gitNamespaceId: string | number | null;
};

export type Dismissals = {
    scopeId: string;
    createdAt: number;
};

/**
 * A record of when, under a certain scopeId, a toast was dismissed
 */
export type DismissedToasts = {
    name: string;
    dismissals: Array<Dismissals>;
};

/**
 * A list of projects and spaces across teams that a user has marked as a favorite.
 */
export type Two = {
    spaceId: string;
    scopeSlug: string;
    scopeId: string;
};

/**
 * A list of projects and spaces across teams that a user has marked as a favorite.
 */
export type One = {
    projectId: string;
    scopeSlug: string;
    scopeId: string;
};

export type FavoriteProjectsAndSpaces = One | Two;

/**
 * remote caching settings
 */
export type RemoteCaching = {
    enabled?: boolean | undefined;
};

/**
 * data cache settings
 */
export type DataCache = {
    excessBillingEnabled?: boolean | undefined;
};

export type WebAnalytics = {
    blockedFrom?: number | undefined;
    blockedUntil?: number | undefined;
    isCurrentlyBlocked: boolean;
};

/**
 * Feature blocks for the user
 */
export type FeatureBlocks = {
    webAnalytics?: WebAnalytics | undefined;
};

export type NorthstarMigration = {
    /**
     * The ID of the team we created for this user.
     */
    teamId: string;
    /**
     * The number of projects migrated for this user.
     */
    projects: number;
    /**
     * The number of stores migrated for this user.
     */
    stores: number;
    /**
     * The number of integration configurations migrated for this user.
     */
    integrationConfigurations: number;
    /**
     * The number of integration clients migrated for this user.
     */
    integrationClients: number;
    /**
     * The migration start time timestamp for this user.
     */
    startTime: number;
    /**
     * The migration end time timestamp for this user.
     */
    endTime: number;
};

/**
 * The user's version. Will either be unset or `northstar`.
 */
export const Version = {
    Northstar: "northstar",
} as const;
/**
 * The user's version. Will either be unset or `northstar`.
 */
export type Version = ClosedEnum<typeof Version>;

/**
 * Data for the currently authenticated User.
 */
export type AuthUser = {
    /**
     * UNIX timestamp (in milliseconds) when the User account was created.
     */
    createdAt: number;
    /**
     * When the User account has been "soft blocked", this property will contain the date when the restriction was enacted, and the identifier for why.
     */
    softBlock: SoftBlock | null;
    /**
     * An object containing billing infomation associated with the User account.
     */
    billing: Billing | null;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    resourceConfig: ResourceConfig;
    /**
     * Prefix that will be used in the URL of "Preview" deployments created by the User account.
     */
    stagingPrefix: string;
    /**
     * set of dashboard view preferences (cards or list) per scopeId
     */
    activeDashboardViews?: Array<ActiveDashboardViews> | undefined;
    importFlowGitNamespace?: string | number | null | undefined;
    importFlowGitNamespaceId?: string | number | null | undefined;
    importFlowGitProvider?: ImportFlowGitProvider | undefined;
    preferredScopesAndGitNamespaces?: Array<PreferredScopesAndGitNamespaces> | undefined;
    /**
     * A record of when, under a certain scopeId, a toast was dismissed
     */
    dismissedToasts?: Array<DismissedToasts> | undefined;
    /**
     * A list of projects and spaces across teams that a user has marked as a favorite.
     */
    favoriteProjectsAndSpaces?: Array<One | Two> | undefined;
    /**
     * Whether the user has a trial available for a paid plan subscription.
     */
    hasTrialAvailable: boolean;
    /**
     * remote caching settings
     */
    remoteCaching?: RemoteCaching | undefined;
    /**
     * data cache settings
     */
    dataCache?: DataCache | undefined;
    /**
     * Feature blocks for the user
     */
    featureBlocks?: FeatureBlocks | undefined;
    northstarMigration?: NorthstarMigration | undefined;
    /**
     * The User's unique identifier.
     */
    id: string;
    /**
     * Email address associated with the User account.
     */
    email: string;
    /**
     * Name associated with the User account, or `null` if none has been provided.
     */
    name: string | null;
    /**
     * Unique username associated with the User account.
     */
    username: string;
    /**
     * SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
     */
    avatar: string | null;
    /**
     * The user's default team. Only applies if the user's `version` is `'northstar'`.
     */
    defaultTeamId: string | null;
    /**
     * The user's version. Will either be unset or `northstar`.
     */
    version: Version | null;
};

/** @internal */
export const Reason$inboundSchema: z.ZodNativeEnum<typeof Reason> = z.nativeEnum(Reason);

/** @internal */
export const Reason$outboundSchema: z.ZodNativeEnum<typeof Reason> = Reason$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Reason$ {
    /** @deprecated use `Reason$inboundSchema` instead. */
    export const inboundSchema = Reason$inboundSchema;
    /** @deprecated use `Reason$outboundSchema` instead. */
    export const outboundSchema = Reason$outboundSchema;
}

/** @internal */
export const BlockedDueToOverageType$inboundSchema: z.ZodNativeEnum<
    typeof BlockedDueToOverageType
> = z.nativeEnum(BlockedDueToOverageType);

/** @internal */
export const BlockedDueToOverageType$outboundSchema: z.ZodNativeEnum<
    typeof BlockedDueToOverageType
> = BlockedDueToOverageType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlockedDueToOverageType$ {
    /** @deprecated use `BlockedDueToOverageType$inboundSchema` instead. */
    export const inboundSchema = BlockedDueToOverageType$inboundSchema;
    /** @deprecated use `BlockedDueToOverageType$outboundSchema` instead. */
    export const outboundSchema = BlockedDueToOverageType$outboundSchema;
}

/** @internal */
export const SoftBlock$inboundSchema: z.ZodType<SoftBlock, z.ZodTypeDef, unknown> = z.object({
    blockedAt: z.number(),
    reason: Reason$inboundSchema,
    blockedDueToOverageType: BlockedDueToOverageType$inboundSchema.optional(),
});

/** @internal */
export type SoftBlock$Outbound = {
    blockedAt: number;
    reason: string;
    blockedDueToOverageType?: string | undefined;
};

/** @internal */
export const SoftBlock$outboundSchema: z.ZodType<SoftBlock$Outbound, z.ZodTypeDef, SoftBlock> =
    z.object({
        blockedAt: z.number(),
        reason: Reason$outboundSchema,
        blockedDueToOverageType: BlockedDueToOverageType$outboundSchema.optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SoftBlock$ {
    /** @deprecated use `SoftBlock$inboundSchema` instead. */
    export const inboundSchema = SoftBlock$inboundSchema;
    /** @deprecated use `SoftBlock$outboundSchema` instead. */
    export const outboundSchema = SoftBlock$outboundSchema;
    /** @deprecated use `SoftBlock$Outbound` instead. */
    export type Outbound = SoftBlock$Outbound;
}

/** @internal */
export const Currency$inboundSchema: z.ZodNativeEnum<typeof Currency> = z.nativeEnum(Currency);

/** @internal */
export const Currency$outboundSchema: z.ZodNativeEnum<typeof Currency> = Currency$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Currency$ {
    /** @deprecated use `Currency$inboundSchema` instead. */
    export const inboundSchema = Currency$inboundSchema;
    /** @deprecated use `Currency$outboundSchema` instead. */
    export const outboundSchema = Currency$outboundSchema;
}

/** @internal */
export const Period$inboundSchema: z.ZodType<Period, z.ZodTypeDef, unknown> = z.object({
    start: z.number(),
    end: z.number(),
});

/** @internal */
export type Period$Outbound = {
    start: number;
    end: number;
};

/** @internal */
export const Period$outboundSchema: z.ZodType<Period$Outbound, z.ZodTypeDef, Period> = z.object({
    start: z.number(),
    end: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Period$ {
    /** @deprecated use `Period$inboundSchema` instead. */
    export const inboundSchema = Period$inboundSchema;
    /** @deprecated use `Period$outboundSchema` instead. */
    export const outboundSchema = Period$outboundSchema;
    /** @deprecated use `Period$Outbound` instead. */
    export type Outbound = Period$Outbound;
}

/** @internal */
export const Contract$inboundSchema: z.ZodType<Contract, z.ZodTypeDef, unknown> = z.object({
    start: z.number(),
    end: z.number(),
});

/** @internal */
export type Contract$Outbound = {
    start: number;
    end: number;
};

/** @internal */
export const Contract$outboundSchema: z.ZodType<Contract$Outbound, z.ZodTypeDef, Contract> =
    z.object({
        start: z.number(),
        end: z.number(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Contract$ {
    /** @deprecated use `Contract$inboundSchema` instead. */
    export const inboundSchema = Contract$inboundSchema;
    /** @deprecated use `Contract$outboundSchema` instead. */
    export const outboundSchema = Contract$outboundSchema;
    /** @deprecated use `Contract$Outbound` instead. */
    export type Outbound = Contract$Outbound;
}

/** @internal */
export const Plan$inboundSchema: z.ZodNativeEnum<typeof Plan> = z.nativeEnum(Plan);

/** @internal */
export const Plan$outboundSchema: z.ZodNativeEnum<typeof Plan> = Plan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Plan$ {
    /** @deprecated use `Plan$inboundSchema` instead. */
    export const inboundSchema = Plan$inboundSchema;
    /** @deprecated use `Plan$outboundSchema` instead. */
    export const outboundSchema = Plan$outboundSchema;
}

/** @internal */
export const Platform$inboundSchema: z.ZodNativeEnum<typeof Platform> = z.nativeEnum(Platform);

/** @internal */
export const Platform$outboundSchema: z.ZodNativeEnum<typeof Platform> = Platform$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Platform$ {
    /** @deprecated use `Platform$inboundSchema` instead. */
    export const inboundSchema = Platform$inboundSchema;
    /** @deprecated use `Platform$outboundSchema` instead. */
    export const outboundSchema = Platform$outboundSchema;
}

/** @internal */
export const ProgramType$inboundSchema: z.ZodNativeEnum<typeof ProgramType> =
    z.nativeEnum(ProgramType);

/** @internal */
export const ProgramType$outboundSchema: z.ZodNativeEnum<typeof ProgramType> =
    ProgramType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProgramType$ {
    /** @deprecated use `ProgramType$inboundSchema` instead. */
    export const inboundSchema = ProgramType$inboundSchema;
    /** @deprecated use `ProgramType$outboundSchema` instead. */
    export const outboundSchema = ProgramType$outboundSchema;
}

/** @internal */
export const Trial$inboundSchema: z.ZodType<Trial, z.ZodTypeDef, unknown> = z.object({
    start: z.number(),
    end: z.number(),
});

/** @internal */
export type Trial$Outbound = {
    start: number;
    end: number;
};

/** @internal */
export const Trial$outboundSchema: z.ZodType<Trial$Outbound, z.ZodTypeDef, Trial> = z.object({
    start: z.number(),
    end: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Trial$ {
    /** @deprecated use `Trial$inboundSchema` instead. */
    export const inboundSchema = Trial$inboundSchema;
    /** @deprecated use `Trial$outboundSchema` instead. */
    export const outboundSchema = Trial$outboundSchema;
    /** @deprecated use `Trial$Outbound` instead. */
    export type Outbound = Trial$Outbound;
}

/** @internal */
export const Tax$inboundSchema: z.ZodType<Tax, z.ZodTypeDef, unknown> = z.object({
    type: z.string(),
    id: z.string(),
});

/** @internal */
export type Tax$Outbound = {
    type: string;
    id: string;
};

/** @internal */
export const Tax$outboundSchema: z.ZodType<Tax$Outbound, z.ZodTypeDef, Tax> = z.object({
    type: z.string(),
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Tax$ {
    /** @deprecated use `Tax$inboundSchema` instead. */
    export const inboundSchema = Tax$inboundSchema;
    /** @deprecated use `Tax$outboundSchema` instead. */
    export const outboundSchema = Tax$outboundSchema;
    /** @deprecated use `Tax$Outbound` instead. */
    export type Outbound = Tax$Outbound;
}

/** @internal */
export const Address$inboundSchema: z.ZodType<Address, z.ZodTypeDef, unknown> = z.object({
    line1: z.string().optional(),
    line2: z.string().optional(),
    postalCode: z.string().optional(),
    city: z.string().optional(),
    country: z.string().optional(),
    state: z.string().optional(),
});

/** @internal */
export type Address$Outbound = {
    line1?: string | undefined;
    line2?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    state?: string | undefined;
};

/** @internal */
export const Address$outboundSchema: z.ZodType<Address$Outbound, z.ZodTypeDef, Address> = z.object({
    line1: z.string().optional(),
    line2: z.string().optional(),
    postalCode: z.string().optional(),
    city: z.string().optional(),
    country: z.string().optional(),
    state: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Address$ {
    /** @deprecated use `Address$inboundSchema` instead. */
    export const inboundSchema = Address$inboundSchema;
    /** @deprecated use `Address$outboundSchema` instead. */
    export const outboundSchema = Address$outboundSchema;
    /** @deprecated use `Address$Outbound` instead. */
    export type Outbound = Address$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsConcurrentBuildsInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsConcurrentBuildsInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsConcurrentBuildsInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsConcurrentBuildsInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsConcurrentBuildsInterval
> = AuthUserBillingInvoiceItemsConcurrentBuildsInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsConcurrentBuildsInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsConcurrentBuildsInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsConcurrentBuildsInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsConcurrentBuildsInterval$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsConcurrentBuildsInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsConcurrentBuildsFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsConcurrentBuildsInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsConcurrentBuildsFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsConcurrentBuildsInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$Outbound;
}

/** @internal */
export const ConcurrentBuilds$inboundSchema: z.ZodType<ConcurrentBuilds, z.ZodTypeDef, unknown> =
    z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$inboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

/** @internal */
export type ConcurrentBuilds$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const ConcurrentBuilds$outboundSchema: z.ZodType<
    ConcurrentBuilds$Outbound,
    z.ZodTypeDef,
    ConcurrentBuilds
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$outboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConcurrentBuilds$ {
    /** @deprecated use `ConcurrentBuilds$inboundSchema` instead. */
    export const inboundSchema = ConcurrentBuilds$inboundSchema;
    /** @deprecated use `ConcurrentBuilds$outboundSchema` instead. */
    export const outboundSchema = ConcurrentBuilds$outboundSchema;
    /** @deprecated use `ConcurrentBuilds$Outbound` instead. */
    export type Outbound = ConcurrentBuilds$Outbound;
}

/** @internal */
export const AuthUserInterval$inboundSchema: z.ZodNativeEnum<typeof AuthUserInterval> =
    z.nativeEnum(AuthUserInterval);

/** @internal */
export const AuthUserInterval$outboundSchema: z.ZodNativeEnum<typeof AuthUserInterval> =
    AuthUserInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserInterval$ {
    /** @deprecated use `AuthUserInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserInterval$inboundSchema;
    /** @deprecated use `AuthUserInterval$outboundSchema` instead. */
    export const outboundSchema = AuthUserInterval$outboundSchema;
}

/** @internal */
export const AuthUserFrequency$inboundSchema: z.ZodType<AuthUserFrequency, z.ZodTypeDef, unknown> =
    z.object({
        interval: AuthUserInterval$inboundSchema,
        intervalCount: z.number(),
    });

/** @internal */
export type AuthUserFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserFrequency$outboundSchema: z.ZodType<
    AuthUserFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserFrequency
> = z.object({
    interval: AuthUserInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserFrequency$ {
    /** @deprecated use `AuthUserFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserFrequency$inboundSchema;
    /** @deprecated use `AuthUserFrequency$outboundSchema` instead. */
    export const outboundSchema = AuthUserFrequency$outboundSchema;
    /** @deprecated use `AuthUserFrequency$Outbound` instead. */
    export type Outbound = AuthUserFrequency$Outbound;
}

/** @internal */
export const AuthUserWebAnalytics$inboundSchema: z.ZodType<
    AuthUserWebAnalytics,
    z.ZodTypeDef,
    unknown
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserFrequency$inboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type AuthUserWebAnalytics$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const AuthUserWebAnalytics$outboundSchema: z.ZodType<
    AuthUserWebAnalytics$Outbound,
    z.ZodTypeDef,
    AuthUserWebAnalytics
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserFrequency$outboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserWebAnalytics$ {
    /** @deprecated use `AuthUserWebAnalytics$inboundSchema` instead. */
    export const inboundSchema = AuthUserWebAnalytics$inboundSchema;
    /** @deprecated use `AuthUserWebAnalytics$outboundSchema` instead. */
    export const outboundSchema = AuthUserWebAnalytics$outboundSchema;
    /** @deprecated use `AuthUserWebAnalytics$Outbound` instead. */
    export type Outbound = AuthUserWebAnalytics$Outbound;
}

/** @internal */
export const AuthUserBillingInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInterval
> = z.nativeEnum(AuthUserBillingInterval);

/** @internal */
export const AuthUserBillingInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInterval
> = AuthUserBillingInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInterval$ {
    /** @deprecated use `AuthUserBillingInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInterval$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingFrequency$inboundSchema: z.ZodType<
    AuthUserBillingFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingFrequency$outboundSchema: z.ZodType<
    AuthUserBillingFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingFrequency
> = z.object({
    interval: AuthUserBillingInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingFrequency$ {
    /** @deprecated use `AuthUserBillingFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingFrequency$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingFrequency$Outbound;
}

/** @internal */
export const Pro$inboundSchema: z.ZodType<Pro, z.ZodTypeDef, unknown> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserBillingFrequency$inboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type Pro$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const Pro$outboundSchema: z.ZodType<Pro$Outbound, z.ZodTypeDef, Pro> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserBillingFrequency$outboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Pro$ {
    /** @deprecated use `Pro$inboundSchema` instead. */
    export const inboundSchema = Pro$inboundSchema;
    /** @deprecated use `Pro$outboundSchema` instead. */
    export const outboundSchema = Pro$outboundSchema;
    /** @deprecated use `Pro$Outbound` instead. */
    export type Outbound = Pro$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsInterval
> = AuthUserBillingInvoiceItemsInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsInterval$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFrequency$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsFrequency$Outbound;
}

/** @internal */
export const Enterprise$inboundSchema: z.ZodType<Enterprise, z.ZodTypeDef, unknown> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserBillingInvoiceItemsFrequency$inboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type Enterprise$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const Enterprise$outboundSchema: z.ZodType<Enterprise$Outbound, z.ZodTypeDef, Enterprise> =
    z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z.lazy(() => AuthUserBillingInvoiceItemsFrequency$outboundSchema).optional(),
        maxQuantity: z.number().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Enterprise$ {
    /** @deprecated use `Enterprise$inboundSchema` instead. */
    export const inboundSchema = Enterprise$inboundSchema;
    /** @deprecated use `Enterprise$outboundSchema` instead. */
    export const outboundSchema = Enterprise$outboundSchema;
    /** @deprecated use `Enterprise$Outbound` instead. */
    export type Outbound = Enterprise$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsAnalyticsInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsAnalyticsInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsAnalyticsInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsAnalyticsInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsAnalyticsInterval
> = AuthUserBillingInvoiceItemsAnalyticsInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsAnalyticsInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsAnalyticsInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsAnalyticsInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsAnalyticsInterval$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsAnalyticsInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsAnalyticsFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsAnalyticsFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsAnalyticsInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsAnalyticsFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsAnalyticsFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsAnalyticsFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsAnalyticsFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsAnalyticsInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsAnalyticsFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsAnalyticsFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsAnalyticsFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsAnalyticsFrequency$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsAnalyticsFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsAnalyticsFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsAnalyticsFrequency$Outbound;
}

/** @internal */
export const Analytics$inboundSchema: z.ZodType<Analytics, z.ZodTypeDef, unknown> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserBillingInvoiceItemsAnalyticsFrequency$inboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type Analytics$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsAnalyticsFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const Analytics$outboundSchema: z.ZodType<Analytics$Outbound, z.ZodTypeDef, Analytics> =
    z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsAnalyticsFrequency$outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Analytics$ {
    /** @deprecated use `Analytics$inboundSchema` instead. */
    export const inboundSchema = Analytics$inboundSchema;
    /** @deprecated use `Analytics$outboundSchema` instead. */
    export const outboundSchema = Analytics$outboundSchema;
    /** @deprecated use `Analytics$Outbound` instead. */
    export type Outbound = Analytics$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval
> = AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsDeveloperExperiencePlatformInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$Outbound;
}

/** @internal */
export const DeveloperExperiencePlatform$inboundSchema: z.ZodType<
    DeveloperExperiencePlatform,
    z.ZodTypeDef,
    unknown
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$inboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type DeveloperExperiencePlatform$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$Outbound
        | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const DeveloperExperiencePlatform$outboundSchema: z.ZodType<
    DeveloperExperiencePlatform$Outbound,
    z.ZodTypeDef,
    DeveloperExperiencePlatform
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsDeveloperExperiencePlatformFrequency$outboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeveloperExperiencePlatform$ {
    /** @deprecated use `DeveloperExperiencePlatform$inboundSchema` instead. */
    export const inboundSchema = DeveloperExperiencePlatform$inboundSchema;
    /** @deprecated use `DeveloperExperiencePlatform$outboundSchema` instead. */
    export const outboundSchema = DeveloperExperiencePlatform$outboundSchema;
    /** @deprecated use `DeveloperExperiencePlatform$Outbound` instead. */
    export type Outbound = DeveloperExperiencePlatform$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval
> = AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsIncludedAllocationMiuInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$Outbound;
}

/** @internal */
export const IncludedAllocationMiu$inboundSchema: z.ZodType<
    IncludedAllocationMiu,
    z.ZodTypeDef,
    unknown
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$inboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type IncludedAllocationMiu$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const IncludedAllocationMiu$outboundSchema: z.ZodType<
    IncludedAllocationMiu$Outbound,
    z.ZodTypeDef,
    IncludedAllocationMiu
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsIncludedAllocationMiuFrequency$outboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncludedAllocationMiu$ {
    /** @deprecated use `IncludedAllocationMiu$inboundSchema` instead. */
    export const inboundSchema = IncludedAllocationMiu$inboundSchema;
    /** @deprecated use `IncludedAllocationMiu$outboundSchema` instead. */
    export const outboundSchema = IncludedAllocationMiu$outboundSchema;
    /** @deprecated use `IncludedAllocationMiu$Outbound` instead. */
    export type Outbound = IncludedAllocationMiu$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval
> = AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$Outbound` instead. */
    export type Outbound =
        AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$Outbound;
}

/** @internal */
export const ManagedInfrastructureCommitment$inboundSchema: z.ZodType<
    ManagedInfrastructureCommitment,
    z.ZodTypeDef,
    unknown
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(
            () => AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$inboundSchema
        )
        .optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type ManagedInfrastructureCommitment$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$Outbound
        | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const ManagedInfrastructureCommitment$outboundSchema: z.ZodType<
    ManagedInfrastructureCommitment$Outbound,
    z.ZodTypeDef,
    ManagedInfrastructureCommitment
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(
            () => AuthUserBillingInvoiceItemsManagedInfrastructureCommitmentFrequency$outboundSchema
        )
        .optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ManagedInfrastructureCommitment$ {
    /** @deprecated use `ManagedInfrastructureCommitment$inboundSchema` instead. */
    export const inboundSchema = ManagedInfrastructureCommitment$inboundSchema;
    /** @deprecated use `ManagedInfrastructureCommitment$outboundSchema` instead. */
    export const outboundSchema = ManagedInfrastructureCommitment$outboundSchema;
    /** @deprecated use `ManagedInfrastructureCommitment$Outbound` instead. */
    export type Outbound = ManagedInfrastructureCommitment$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsMonitoringInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsMonitoringInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsMonitoringInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsMonitoringInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsMonitoringInterval
> = AuthUserBillingInvoiceItemsMonitoringInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsMonitoringInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsMonitoringInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringInterval$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsMonitoringInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsMonitoringFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsMonitoringFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsMonitoringInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsMonitoringFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsMonitoringFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsMonitoringFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsMonitoringFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsMonitoringInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsMonitoringFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsMonitoringFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringFrequency$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsMonitoringFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsMonitoringFrequency$Outbound;
}

/** @internal */
export const Monitoring$inboundSchema: z.ZodType<Monitoring, z.ZodTypeDef, unknown> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsMonitoringFrequency$inboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type Monitoring$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsMonitoringFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const Monitoring$outboundSchema: z.ZodType<Monitoring$Outbound, z.ZodTypeDef, Monitoring> =
    z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsMonitoringFrequency$outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Monitoring$ {
    /** @deprecated use `Monitoring$inboundSchema` instead. */
    export const inboundSchema = Monitoring$inboundSchema;
    /** @deprecated use `Monitoring$outboundSchema` instead. */
    export const outboundSchema = Monitoring$outboundSchema;
    /** @deprecated use `Monitoring$Outbound` instead. */
    export type Outbound = Monitoring$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPasswordProtectionInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsPasswordProtectionInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsPasswordProtectionInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsPasswordProtectionInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsPasswordProtectionInterval
> = AuthUserBillingInvoiceItemsPasswordProtectionInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPasswordProtectionInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPasswordProtectionInterval$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsPasswordProtectionInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPasswordProtectionInterval$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPasswordProtectionInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPasswordProtectionFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPasswordProtectionFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsPasswordProtectionInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsPasswordProtectionFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsPasswordProtectionFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPasswordProtectionFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsPasswordProtectionFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsPasswordProtectionInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPasswordProtectionFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPasswordProtectionFrequency$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsPasswordProtectionFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPasswordProtectionFrequency$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPasswordProtectionFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPasswordProtectionFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsPasswordProtectionFrequency$Outbound;
}

/** @internal */
export const PasswordProtection$inboundSchema: z.ZodType<
    PasswordProtection,
    z.ZodTypeDef,
    unknown
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsPasswordProtectionFrequency$inboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type PasswordProtection$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsPasswordProtectionFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const PasswordProtection$outboundSchema: z.ZodType<
    PasswordProtection$Outbound,
    z.ZodTypeDef,
    PasswordProtection
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsPasswordProtectionFrequency$outboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PasswordProtection$ {
    /** @deprecated use `PasswordProtection$inboundSchema` instead. */
    export const inboundSchema = PasswordProtection$inboundSchema;
    /** @deprecated use `PasswordProtection$outboundSchema` instead. */
    export const outboundSchema = PasswordProtection$outboundSchema;
    /** @deprecated use `PasswordProtection$Outbound` instead. */
    export type Outbound = PasswordProtection$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval
> = AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$Outbound;
}

/** @internal */
export const PreviewDeploymentSuffix$inboundSchema: z.ZodType<
    PreviewDeploymentSuffix,
    z.ZodTypeDef,
    unknown
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$inboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type PreviewDeploymentSuffix$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const PreviewDeploymentSuffix$outboundSchema: z.ZodType<
    PreviewDeploymentSuffix$Outbound,
    z.ZodTypeDef,
    PreviewDeploymentSuffix
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$outboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreviewDeploymentSuffix$ {
    /** @deprecated use `PreviewDeploymentSuffix$inboundSchema` instead. */
    export const inboundSchema = PreviewDeploymentSuffix$inboundSchema;
    /** @deprecated use `PreviewDeploymentSuffix$outboundSchema` instead. */
    export const outboundSchema = PreviewDeploymentSuffix$outboundSchema;
    /** @deprecated use `PreviewDeploymentSuffix$Outbound` instead. */
    export type Outbound = PreviewDeploymentSuffix$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsSamlInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsSamlInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsSamlInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsSamlInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsSamlInterval
> = AuthUserBillingInvoiceItemsSamlInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsSamlInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsSamlInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsSamlInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsSamlInterval$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsSamlInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsSamlFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsSamlFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsSamlInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsSamlFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsSamlFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsSamlFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsSamlFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsSamlInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsSamlFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsSamlFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsSamlFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsSamlFrequency$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsSamlFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsSamlFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsSamlFrequency$Outbound;
}

/** @internal */
export const AuthUserSaml$inboundSchema: z.ZodType<AuthUserSaml, z.ZodTypeDef, unknown> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserBillingInvoiceItemsSamlFrequency$inboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type AuthUserSaml$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsSamlFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const AuthUserSaml$outboundSchema: z.ZodType<
    AuthUserSaml$Outbound,
    z.ZodTypeDef,
    AuthUserSaml
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserBillingInvoiceItemsSamlFrequency$outboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserSaml$ {
    /** @deprecated use `AuthUserSaml$inboundSchema` instead. */
    export const inboundSchema = AuthUserSaml$inboundSchema;
    /** @deprecated use `AuthUserSaml$outboundSchema` instead. */
    export const outboundSchema = AuthUserSaml$outboundSchema;
    /** @deprecated use `AuthUserSaml$Outbound` instead. */
    export type Outbound = AuthUserSaml$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsTeamSeatsInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsTeamSeatsInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsTeamSeatsInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsTeamSeatsInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsTeamSeatsInterval
> = AuthUserBillingInvoiceItemsTeamSeatsInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsTeamSeatsInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsTeamSeatsInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsTeamSeatsInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsTeamSeatsInterval$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsTeamSeatsInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsTeamSeatsFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsTeamSeatsFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsTeamSeatsInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsTeamSeatsFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsTeamSeatsFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsTeamSeatsFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsTeamSeatsFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsTeamSeatsInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsTeamSeatsFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsTeamSeatsFrequency$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsTeamSeatsFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsTeamSeatsFrequency$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsTeamSeatsFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsTeamSeatsFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsTeamSeatsFrequency$Outbound;
}

/** @internal */
export const TeamSeats$inboundSchema: z.ZodType<TeamSeats, z.ZodTypeDef, unknown> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z.lazy(() => AuthUserBillingInvoiceItemsTeamSeatsFrequency$inboundSchema).optional(),
    maxQuantity: z.number().optional(),
});

/** @internal */
export type TeamSeats$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsTeamSeatsFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const TeamSeats$outboundSchema: z.ZodType<TeamSeats$Outbound, z.ZodTypeDef, TeamSeats> =
    z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsTeamSeatsFrequency$outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TeamSeats$ {
    /** @deprecated use `TeamSeats$inboundSchema` instead. */
    export const inboundSchema = TeamSeats$inboundSchema;
    /** @deprecated use `TeamSeats$outboundSchema` instead. */
    export const outboundSchema = TeamSeats$outboundSchema;
    /** @deprecated use `TeamSeats$Outbound` instead. */
    export type Outbound = TeamSeats$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsVercelMarketplaceInterval$inboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsVercelMarketplaceInterval
> = z.nativeEnum(AuthUserBillingInvoiceItemsVercelMarketplaceInterval);

/** @internal */
export const AuthUserBillingInvoiceItemsVercelMarketplaceInterval$outboundSchema: z.ZodNativeEnum<
    typeof AuthUserBillingInvoiceItemsVercelMarketplaceInterval
> = AuthUserBillingInvoiceItemsVercelMarketplaceInterval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsVercelMarketplaceInterval$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsVercelMarketplaceInterval$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsVercelMarketplaceInterval$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsVercelMarketplaceInterval$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsVercelMarketplaceInterval$outboundSchema;
}

/** @internal */
export const AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsVercelMarketplaceFrequency,
    z.ZodTypeDef,
    unknown
> = z.object({
    interval: AuthUserBillingInvoiceItemsVercelMarketplaceInterval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsVercelMarketplaceFrequency
> = z.object({
    interval: AuthUserBillingInvoiceItemsVercelMarketplaceInterval$outboundSchema,
    intervalCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$Outbound;
}

/** @internal */
export const VercelMarketplace$inboundSchema: z.ZodType<VercelMarketplace, z.ZodTypeDef, unknown> =
    z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$inboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

/** @internal */
export type VercelMarketplace$Outbound = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$Outbound | undefined;
    maxQuantity?: number | undefined;
};

/** @internal */
export const VercelMarketplace$outboundSchema: z.ZodType<
    VercelMarketplace$Outbound,
    z.ZodTypeDef,
    VercelMarketplace
> = z.object({
    tier: z.number().optional(),
    price: z.number(),
    quantity: z.number(),
    highestQuantity: z.number().optional(),
    name: z.string().optional(),
    hidden: z.boolean(),
    createdAt: z.number().optional(),
    disabledAt: z.nullable(z.number()).optional(),
    frequency: z
        .lazy(() => AuthUserBillingInvoiceItemsVercelMarketplaceFrequency$outboundSchema)
        .optional(),
    maxQuantity: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VercelMarketplace$ {
    /** @deprecated use `VercelMarketplace$inboundSchema` instead. */
    export const inboundSchema = VercelMarketplace$inboundSchema;
    /** @deprecated use `VercelMarketplace$outboundSchema` instead. */
    export const outboundSchema = VercelMarketplace$outboundSchema;
    /** @deprecated use `VercelMarketplace$Outbound` instead. */
    export type Outbound = VercelMarketplace$Outbound;
}

/** @internal */
export const Matrix$inboundSchema: z.ZodType<Matrix, z.ZodTypeDef, unknown> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type Matrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const Matrix$outboundSchema: z.ZodType<Matrix$Outbound, z.ZodTypeDef, Matrix> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Matrix$ {
    /** @deprecated use `Matrix$inboundSchema` instead. */
    export const inboundSchema = Matrix$inboundSchema;
    /** @deprecated use `Matrix$outboundSchema` instead. */
    export const outboundSchema = Matrix$outboundSchema;
    /** @deprecated use `Matrix$Outbound` instead. */
    export type Outbound = Matrix$Outbound;
}

/** @internal */
export const AnalyticsUsage$inboundSchema: z.ZodType<AnalyticsUsage, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z.lazy(() => Matrix$inboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type AnalyticsUsage$Outbound = {
    matrix?: Matrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const AnalyticsUsage$outboundSchema: z.ZodType<
    AnalyticsUsage$Outbound,
    z.ZodTypeDef,
    AnalyticsUsage
> = z.object({
    matrix: z.lazy(() => Matrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnalyticsUsage$ {
    /** @deprecated use `AnalyticsUsage$inboundSchema` instead. */
    export const inboundSchema = AnalyticsUsage$inboundSchema;
    /** @deprecated use `AnalyticsUsage$outboundSchema` instead. */
    export const outboundSchema = AnalyticsUsage$outboundSchema;
    /** @deprecated use `AnalyticsUsage$Outbound` instead. */
    export type Outbound = AnalyticsUsage$Outbound;
}

/** @internal */
export const AuthUserMatrix$inboundSchema: z.ZodType<AuthUserMatrix, z.ZodTypeDef, unknown> =
    z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

/** @internal */
export type AuthUserMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserMatrix$outboundSchema: z.ZodType<
    AuthUserMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserMatrix$ {
    /** @deprecated use `AuthUserMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserMatrix$inboundSchema;
    /** @deprecated use `AuthUserMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserMatrix$outboundSchema;
    /** @deprecated use `AuthUserMatrix$Outbound` instead. */
    export type Outbound = AuthUserMatrix$Outbound;
}

/** @internal */
export const ArtifactsModel$inboundSchema: z.ZodType<ArtifactsModel, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z.lazy(() => AuthUserMatrix$inboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type ArtifactsModel$Outbound = {
    matrix?: AuthUserMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const ArtifactsModel$outboundSchema: z.ZodType<
    ArtifactsModel$Outbound,
    z.ZodTypeDef,
    ArtifactsModel
> = z.object({
    matrix: z.lazy(() => AuthUserMatrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArtifactsModel$ {
    /** @deprecated use `ArtifactsModel$inboundSchema` instead. */
    export const inboundSchema = ArtifactsModel$inboundSchema;
    /** @deprecated use `ArtifactsModel$outboundSchema` instead. */
    export const outboundSchema = ArtifactsModel$outboundSchema;
    /** @deprecated use `ArtifactsModel$Outbound` instead. */
    export type Outbound = ArtifactsModel$Outbound;
}

/** @internal */
export const AuthUserBillingMatrix$inboundSchema: z.ZodType<
    AuthUserBillingMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingMatrix$outboundSchema: z.ZodType<
    AuthUserBillingMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingMatrix$ {
    /** @deprecated use `AuthUserBillingMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingMatrix$Outbound;
}

/** @internal */
export const Bandwidth$inboundSchema: z.ZodType<Bandwidth, z.ZodTypeDef, unknown> = z.object({
    matrix: z.lazy(() => AuthUserBillingMatrix$inboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type Bandwidth$Outbound = {
    matrix?: AuthUserBillingMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const Bandwidth$outboundSchema: z.ZodType<Bandwidth$Outbound, z.ZodTypeDef, Bandwidth> =
    z.object({
        matrix: z.lazy(() => AuthUserBillingMatrix$outboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Bandwidth$ {
    /** @deprecated use `Bandwidth$inboundSchema` instead. */
    export const inboundSchema = Bandwidth$inboundSchema;
    /** @deprecated use `Bandwidth$outboundSchema` instead. */
    export const outboundSchema = Bandwidth$outboundSchema;
    /** @deprecated use `Bandwidth$Outbound` instead. */
    export type Outbound = Bandwidth$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsMatrix$Outbound;
}

/** @internal */
export const BlobStores$inboundSchema: z.ZodType<BlobStores, z.ZodTypeDef, unknown> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsMatrix$inboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type BlobStores$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const BlobStores$outboundSchema: z.ZodType<BlobStores$Outbound, z.ZodTypeDef, BlobStores> =
    z.object({
        matrix: z.lazy(() => AuthUserBillingInvoiceItemsMatrix$outboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlobStores$ {
    /** @deprecated use `BlobStores$inboundSchema` instead. */
    export const inboundSchema = BlobStores$inboundSchema;
    /** @deprecated use `BlobStores$outboundSchema` instead. */
    export const outboundSchema = BlobStores$outboundSchema;
    /** @deprecated use `BlobStores$Outbound` instead. */
    export type Outbound = BlobStores$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$Outbound;
}

/** @internal */
export const BlobTotalAdvancedRequests$inboundSchema: z.ZodType<
    BlobTotalAdvancedRequests,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type BlobTotalAdvancedRequests$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const BlobTotalAdvancedRequests$outboundSchema: z.ZodType<
    BlobTotalAdvancedRequests$Outbound,
    z.ZodTypeDef,
    BlobTotalAdvancedRequests
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlobTotalAdvancedRequests$ {
    /** @deprecated use `BlobTotalAdvancedRequests$inboundSchema` instead. */
    export const inboundSchema = BlobTotalAdvancedRequests$inboundSchema;
    /** @deprecated use `BlobTotalAdvancedRequests$outboundSchema` instead. */
    export const outboundSchema = BlobTotalAdvancedRequests$outboundSchema;
    /** @deprecated use `BlobTotalAdvancedRequests$Outbound` instead. */
    export type Outbound = BlobTotalAdvancedRequests$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$Outbound;
}

/** @internal */
export const BlobTotalAvgSizeInBytes$inboundSchema: z.ZodType<
    BlobTotalAvgSizeInBytes,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type BlobTotalAvgSizeInBytes$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const BlobTotalAvgSizeInBytes$outboundSchema: z.ZodType<
    BlobTotalAvgSizeInBytes$Outbound,
    z.ZodTypeDef,
    BlobTotalAvgSizeInBytes
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlobTotalAvgSizeInBytes$ {
    /** @deprecated use `BlobTotalAvgSizeInBytes$inboundSchema` instead. */
    export const inboundSchema = BlobTotalAvgSizeInBytes$inboundSchema;
    /** @deprecated use `BlobTotalAvgSizeInBytes$outboundSchema` instead. */
    export const outboundSchema = BlobTotalAvgSizeInBytes$outboundSchema;
    /** @deprecated use `BlobTotalAvgSizeInBytes$Outbound` instead. */
    export type Outbound = BlobTotalAvgSizeInBytes$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$Outbound` instead. */
    export type Outbound =
        AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$Outbound;
}

/** @internal */
export const BlobTotalGetResponseObjectSizeInBytes$inboundSchema: z.ZodType<
    BlobTotalGetResponseObjectSizeInBytes,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(
            () =>
                AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$inboundSchema
        )
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type BlobTotalGetResponseObjectSizeInBytes$Outbound = {
    matrix?:
        | AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$Outbound
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const BlobTotalGetResponseObjectSizeInBytes$outboundSchema: z.ZodType<
    BlobTotalGetResponseObjectSizeInBytes$Outbound,
    z.ZodTypeDef,
    BlobTotalGetResponseObjectSizeInBytes
> = z.object({
    matrix: z
        .lazy(
            () =>
                AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$outboundSchema
        )
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlobTotalGetResponseObjectSizeInBytes$ {
    /** @deprecated use `BlobTotalGetResponseObjectSizeInBytes$inboundSchema` instead. */
    export const inboundSchema = BlobTotalGetResponseObjectSizeInBytes$inboundSchema;
    /** @deprecated use `BlobTotalGetResponseObjectSizeInBytes$outboundSchema` instead. */
    export const outboundSchema = BlobTotalGetResponseObjectSizeInBytes$outboundSchema;
    /** @deprecated use `BlobTotalGetResponseObjectSizeInBytes$Outbound` instead. */
    export type Outbound = BlobTotalGetResponseObjectSizeInBytes$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$Outbound;
}

/** @internal */
export const BlobTotalSimpleRequests$inboundSchema: z.ZodType<
    BlobTotalSimpleRequests,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type BlobTotalSimpleRequests$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const BlobTotalSimpleRequests$outboundSchema: z.ZodType<
    BlobTotalSimpleRequests$Outbound,
    z.ZodTypeDef,
    BlobTotalSimpleRequests
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlobTotalSimpleRequests$ {
    /** @deprecated use `BlobTotalSimpleRequests$inboundSchema` instead. */
    export const inboundSchema = BlobTotalSimpleRequests$inboundSchema;
    /** @deprecated use `BlobTotalSimpleRequests$outboundSchema` instead. */
    export const outboundSchema = BlobTotalSimpleRequests$outboundSchema;
    /** @deprecated use `BlobTotalSimpleRequests$Outbound` instead. */
    export type Outbound = BlobTotalSimpleRequests$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsBuildMinuteMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBuildMinuteMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsBuildMinuteMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsBuildMinuteMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsBuildMinuteMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsBuildMinuteMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsBuildMinuteMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsBuildMinuteMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsBuildMinuteMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBuildMinuteMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsBuildMinuteMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsBuildMinuteMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsBuildMinuteMatrix$Outbound;
}

/** @internal */
export const BuildMinute$inboundSchema: z.ZodType<BuildMinute, z.ZodTypeDef, unknown> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsBuildMinuteMatrix$inboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type BuildMinute$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsBuildMinuteMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const BuildMinute$outboundSchema: z.ZodType<
    BuildMinute$Outbound,
    z.ZodTypeDef,
    BuildMinute
> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsBuildMinuteMatrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BuildMinute$ {
    /** @deprecated use `BuildMinute$inboundSchema` instead. */
    export const inboundSchema = BuildMinute$inboundSchema;
    /** @deprecated use `BuildMinute$outboundSchema` instead. */
    export const outboundSchema = BuildMinute$outboundSchema;
    /** @deprecated use `BuildMinute$Outbound` instead. */
    export type Outbound = BuildMinute$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsDataCacheReadMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDataCacheReadMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsDataCacheReadMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsDataCacheReadMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDataCacheReadMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsDataCacheReadMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsDataCacheReadMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheReadMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsDataCacheReadMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheReadMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsDataCacheReadMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheReadMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsDataCacheReadMatrix$Outbound;
}

/** @internal */
export const DataCacheRead$inboundSchema: z.ZodType<DataCacheRead, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsDataCacheReadMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type DataCacheRead$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheReadMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const DataCacheRead$outboundSchema: z.ZodType<
    DataCacheRead$Outbound,
    z.ZodTypeDef,
    DataCacheRead
> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsDataCacheReadMatrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataCacheRead$ {
    /** @deprecated use `DataCacheRead$inboundSchema` instead. */
    export const inboundSchema = DataCacheRead$inboundSchema;
    /** @deprecated use `DataCacheRead$outboundSchema` instead. */
    export const outboundSchema = DataCacheRead$outboundSchema;
    /** @deprecated use `DataCacheRead$Outbound` instead. */
    export type Outbound = DataCacheRead$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$Outbound;
}

/** @internal */
export const DataCacheRevalidation$inboundSchema: z.ZodType<
    DataCacheRevalidation,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type DataCacheRevalidation$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const DataCacheRevalidation$outboundSchema: z.ZodType<
    DataCacheRevalidation$Outbound,
    z.ZodTypeDef,
    DataCacheRevalidation
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataCacheRevalidation$ {
    /** @deprecated use `DataCacheRevalidation$inboundSchema` instead. */
    export const inboundSchema = DataCacheRevalidation$inboundSchema;
    /** @deprecated use `DataCacheRevalidation$outboundSchema` instead. */
    export const outboundSchema = DataCacheRevalidation$outboundSchema;
    /** @deprecated use `DataCacheRevalidation$Outbound` instead. */
    export type Outbound = DataCacheRevalidation$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsDataCacheWriteMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDataCacheWriteMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsDataCacheWriteMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsDataCacheWriteMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsDataCacheWriteMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsDataCacheWriteMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsDataCacheWriteMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheWriteMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsDataCacheWriteMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheWriteMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsDataCacheWriteMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsDataCacheWriteMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsDataCacheWriteMatrix$Outbound;
}

/** @internal */
export const DataCacheWrite$inboundSchema: z.ZodType<DataCacheWrite, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsDataCacheWriteMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type DataCacheWrite$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheWriteMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const DataCacheWrite$outboundSchema: z.ZodType<
    DataCacheWrite$Outbound,
    z.ZodTypeDef,
    DataCacheWrite
> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsDataCacheWriteMatrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataCacheWrite$ {
    /** @deprecated use `DataCacheWrite$inboundSchema` instead. */
    export const inboundSchema = DataCacheWrite$inboundSchema;
    /** @deprecated use `DataCacheWrite$outboundSchema` instead. */
    export const outboundSchema = DataCacheWrite$outboundSchema;
    /** @deprecated use `DataCacheWrite$Outbound` instead. */
    export type Outbound = DataCacheWrite$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeConfigReadMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsEdgeConfigReadMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$Outbound;
}

/** @internal */
export const EdgeConfigRead$inboundSchema: z.ZodType<EdgeConfigRead, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type EdgeConfigRead$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const EdgeConfigRead$outboundSchema: z.ZodType<
    EdgeConfigRead$Outbound,
    z.ZodTypeDef,
    EdgeConfigRead
> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EdgeConfigRead$ {
    /** @deprecated use `EdgeConfigRead$inboundSchema` instead. */
    export const inboundSchema = EdgeConfigRead$inboundSchema;
    /** @deprecated use `EdgeConfigRead$outboundSchema` instead. */
    export const outboundSchema = EdgeConfigRead$outboundSchema;
    /** @deprecated use `EdgeConfigRead$Outbound` instead. */
    export type Outbound = EdgeConfigRead$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$Outbound;
}

/** @internal */
export const EdgeConfigWrite$inboundSchema: z.ZodType<EdgeConfigWrite, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type EdgeConfigWrite$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const EdgeConfigWrite$outboundSchema: z.ZodType<
    EdgeConfigWrite$Outbound,
    z.ZodTypeDef,
    EdgeConfigWrite
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EdgeConfigWrite$ {
    /** @deprecated use `EdgeConfigWrite$inboundSchema` instead. */
    export const inboundSchema = EdgeConfigWrite$inboundSchema;
    /** @deprecated use `EdgeConfigWrite$outboundSchema` instead. */
    export const outboundSchema = EdgeConfigWrite$outboundSchema;
    /** @deprecated use `EdgeConfigWrite$Outbound` instead. */
    export type Outbound = EdgeConfigWrite$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$Outbound;
}

/** @internal */
export const EdgeFunctionExecutionUnits$inboundSchema: z.ZodType<
    EdgeFunctionExecutionUnits,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type EdgeFunctionExecutionUnits$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const EdgeFunctionExecutionUnits$outboundSchema: z.ZodType<
    EdgeFunctionExecutionUnits$Outbound,
    z.ZodTypeDef,
    EdgeFunctionExecutionUnits
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EdgeFunctionExecutionUnits$ {
    /** @deprecated use `EdgeFunctionExecutionUnits$inboundSchema` instead. */
    export const inboundSchema = EdgeFunctionExecutionUnits$inboundSchema;
    /** @deprecated use `EdgeFunctionExecutionUnits$outboundSchema` instead. */
    export const outboundSchema = EdgeFunctionExecutionUnits$outboundSchema;
    /** @deprecated use `EdgeFunctionExecutionUnits$Outbound` instead. */
    export type Outbound = EdgeFunctionExecutionUnits$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$Outbound;
}

/** @internal */
export const EdgeMiddlewareInvocations$inboundSchema: z.ZodType<
    EdgeMiddlewareInvocations,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type EdgeMiddlewareInvocations$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const EdgeMiddlewareInvocations$outboundSchema: z.ZodType<
    EdgeMiddlewareInvocations$Outbound,
    z.ZodTypeDef,
    EdgeMiddlewareInvocations
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EdgeMiddlewareInvocations$ {
    /** @deprecated use `EdgeMiddlewareInvocations$inboundSchema` instead. */
    export const inboundSchema = EdgeMiddlewareInvocations$inboundSchema;
    /** @deprecated use `EdgeMiddlewareInvocations$outboundSchema` instead. */
    export const outboundSchema = EdgeMiddlewareInvocations$outboundSchema;
    /** @deprecated use `EdgeMiddlewareInvocations$Outbound` instead. */
    export type Outbound = EdgeMiddlewareInvocations$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeRequestMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeRequestMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsEdgeRequestMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeRequestMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeRequestMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsEdgeRequestMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsEdgeRequestMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeRequestMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsEdgeRequestMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeRequestMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsEdgeRequestMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeRequestMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsEdgeRequestMatrix$Outbound;
}

/** @internal */
export const EdgeRequest$inboundSchema: z.ZodType<EdgeRequest, z.ZodTypeDef, unknown> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsEdgeRequestMatrix$inboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type EdgeRequest$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsEdgeRequestMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const EdgeRequest$outboundSchema: z.ZodType<
    EdgeRequest$Outbound,
    z.ZodTypeDef,
    EdgeRequest
> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsEdgeRequestMatrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EdgeRequest$ {
    /** @deprecated use `EdgeRequest$inboundSchema` instead. */
    export const inboundSchema = EdgeRequest$inboundSchema;
    /** @deprecated use `EdgeRequest$outboundSchema` instead. */
    export const outboundSchema = EdgeRequest$outboundSchema;
    /** @deprecated use `EdgeRequest$Outbound` instead. */
    export type Outbound = EdgeRequest$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$Outbound` instead. */
    export type Outbound =
        AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$Outbound;
}

/** @internal */
export const EdgeRequestAdditionalCpuDuration$inboundSchema: z.ZodType<
    EdgeRequestAdditionalCpuDuration,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type EdgeRequestAdditionalCpuDuration$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const EdgeRequestAdditionalCpuDuration$outboundSchema: z.ZodType<
    EdgeRequestAdditionalCpuDuration$Outbound,
    z.ZodTypeDef,
    EdgeRequestAdditionalCpuDuration
> = z.object({
    matrix: z
        .lazy(
            () => AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$outboundSchema
        )
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EdgeRequestAdditionalCpuDuration$ {
    /** @deprecated use `EdgeRequestAdditionalCpuDuration$inboundSchema` instead. */
    export const inboundSchema = EdgeRequestAdditionalCpuDuration$inboundSchema;
    /** @deprecated use `EdgeRequestAdditionalCpuDuration$outboundSchema` instead. */
    export const outboundSchema = EdgeRequestAdditionalCpuDuration$outboundSchema;
    /** @deprecated use `EdgeRequestAdditionalCpuDuration$Outbound` instead. */
    export type Outbound = EdgeRequestAdditionalCpuDuration$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsFastDataTransferMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFastDataTransferMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsFastDataTransferMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsFastDataTransferMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFastDataTransferMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsFastDataTransferMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsFastDataTransferMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsFastDataTransferMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsFastDataTransferMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFastDataTransferMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsFastDataTransferMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFastDataTransferMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsFastDataTransferMatrix$Outbound;
}

/** @internal */
export const FastDataTransfer$inboundSchema: z.ZodType<FastDataTransfer, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFastDataTransferMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type FastDataTransfer$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsFastDataTransferMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const FastDataTransfer$outboundSchema: z.ZodType<
    FastDataTransfer$Outbound,
    z.ZodTypeDef,
    FastDataTransfer
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsFastDataTransferMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FastDataTransfer$ {
    /** @deprecated use `FastDataTransfer$inboundSchema` instead. */
    export const inboundSchema = FastDataTransfer$inboundSchema;
    /** @deprecated use `FastDataTransfer$outboundSchema` instead. */
    export const outboundSchema = FastDataTransfer$outboundSchema;
    /** @deprecated use `FastDataTransfer$Outbound` instead. */
    export type Outbound = FastDataTransfer$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsFastOriginTransferMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFastOriginTransferMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsFastOriginTransferMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsFastOriginTransferMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFastOriginTransferMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsFastOriginTransferMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsFastOriginTransferMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsFastOriginTransferMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsFastOriginTransferMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFastOriginTransferMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsFastOriginTransferMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFastOriginTransferMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsFastOriginTransferMatrix$Outbound;
}

/** @internal */
export const FastOriginTransfer$inboundSchema: z.ZodType<
    FastOriginTransfer,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsFastOriginTransferMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type FastOriginTransfer$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsFastOriginTransferMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const FastOriginTransfer$outboundSchema: z.ZodType<
    FastOriginTransfer$Outbound,
    z.ZodTypeDef,
    FastOriginTransfer
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsFastOriginTransferMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FastOriginTransfer$ {
    /** @deprecated use `FastOriginTransfer$inboundSchema` instead. */
    export const inboundSchema = FastOriginTransfer$inboundSchema;
    /** @deprecated use `FastOriginTransfer$outboundSchema` instead. */
    export const outboundSchema = FastOriginTransfer$outboundSchema;
    /** @deprecated use `FastOriginTransfer$Outbound` instead. */
    export type Outbound = FastOriginTransfer$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsFunctionDurationMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFunctionDurationMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsFunctionDurationMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsFunctionDurationMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFunctionDurationMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsFunctionDurationMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsFunctionDurationMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsFunctionDurationMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsFunctionDurationMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFunctionDurationMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsFunctionDurationMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFunctionDurationMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsFunctionDurationMatrix$Outbound;
}

/** @internal */
export const FunctionDuration$inboundSchema: z.ZodType<FunctionDuration, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFunctionDurationMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type FunctionDuration$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsFunctionDurationMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const FunctionDuration$outboundSchema: z.ZodType<
    FunctionDuration$Outbound,
    z.ZodTypeDef,
    FunctionDuration
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsFunctionDurationMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionDuration$ {
    /** @deprecated use `FunctionDuration$inboundSchema` instead. */
    export const inboundSchema = FunctionDuration$inboundSchema;
    /** @deprecated use `FunctionDuration$outboundSchema` instead. */
    export const outboundSchema = FunctionDuration$outboundSchema;
    /** @deprecated use `FunctionDuration$Outbound` instead. */
    export type Outbound = FunctionDuration$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsFunctionInvocationMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFunctionInvocationMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsFunctionInvocationMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsFunctionInvocationMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsFunctionInvocationMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsFunctionInvocationMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsFunctionInvocationMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsFunctionInvocationMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsFunctionInvocationMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFunctionInvocationMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsFunctionInvocationMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsFunctionInvocationMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsFunctionInvocationMatrix$Outbound;
}

/** @internal */
export const FunctionInvocation$inboundSchema: z.ZodType<
    FunctionInvocation,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsFunctionInvocationMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type FunctionInvocation$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsFunctionInvocationMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const FunctionInvocation$outboundSchema: z.ZodType<
    FunctionInvocation$Outbound,
    z.ZodTypeDef,
    FunctionInvocation
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsFunctionInvocationMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionInvocation$ {
    /** @deprecated use `FunctionInvocation$inboundSchema` instead. */
    export const inboundSchema = FunctionInvocation$inboundSchema;
    /** @deprecated use `FunctionInvocation$outboundSchema` instead. */
    export const outboundSchema = FunctionInvocation$outboundSchema;
    /** @deprecated use `FunctionInvocation$Outbound` instead. */
    export type Outbound = FunctionInvocation$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$Outbound;
}

/** @internal */
export const LogDrainsVolume$inboundSchema: z.ZodType<LogDrainsVolume, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type LogDrainsVolume$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const LogDrainsVolume$outboundSchema: z.ZodType<
    LogDrainsVolume$Outbound,
    z.ZodTypeDef,
    LogDrainsVolume
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LogDrainsVolume$ {
    /** @deprecated use `LogDrainsVolume$inboundSchema` instead. */
    export const inboundSchema = LogDrainsVolume$inboundSchema;
    /** @deprecated use `LogDrainsVolume$outboundSchema` instead. */
    export const outboundSchema = LogDrainsVolume$outboundSchema;
    /** @deprecated use `LogDrainsVolume$Outbound` instead. */
    export type Outbound = LogDrainsVolume$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsMonitoringMetricMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsMonitoringMetricMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsMonitoringMetricMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsMonitoringMetricMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsMonitoringMetricMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsMonitoringMetricMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsMonitoringMetricMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringMetricMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsMonitoringMetricMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringMetricMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsMonitoringMetricMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsMonitoringMetricMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsMonitoringMetricMatrix$Outbound;
}

/** @internal */
export const MonitoringMetric$inboundSchema: z.ZodType<MonitoringMetric, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsMonitoringMetricMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type MonitoringMetric$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsMonitoringMetricMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const MonitoringMetric$outboundSchema: z.ZodType<
    MonitoringMetric$Outbound,
    z.ZodTypeDef,
    MonitoringMetric
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsMonitoringMetricMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MonitoringMetric$ {
    /** @deprecated use `MonitoringMetric$inboundSchema` instead. */
    export const inboundSchema = MonitoringMetric$inboundSchema;
    /** @deprecated use `MonitoringMetric$outboundSchema` instead. */
    export const outboundSchema = MonitoringMetric$outboundSchema;
    /** @deprecated use `MonitoringMetric$Outbound` instead. */
    export type Outbound = MonitoringMetric$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$Outbound;
}

/** @internal */
export const PostgresComputeTime$inboundSchema: z.ZodType<
    PostgresComputeTime,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type PostgresComputeTime$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const PostgresComputeTime$outboundSchema: z.ZodType<
    PostgresComputeTime$Outbound,
    z.ZodTypeDef,
    PostgresComputeTime
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostgresComputeTime$ {
    /** @deprecated use `PostgresComputeTime$inboundSchema` instead. */
    export const inboundSchema = PostgresComputeTime$inboundSchema;
    /** @deprecated use `PostgresComputeTime$outboundSchema` instead. */
    export const outboundSchema = PostgresComputeTime$outboundSchema;
    /** @deprecated use `PostgresComputeTime$Outbound` instead. */
    export type Outbound = PostgresComputeTime$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresDataStorageMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsPostgresDataStorageMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$Outbound;
}

/** @internal */
export const PostgresDataStorage$inboundSchema: z.ZodType<
    PostgresDataStorage,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type PostgresDataStorage$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const PostgresDataStorage$outboundSchema: z.ZodType<
    PostgresDataStorage$Outbound,
    z.ZodTypeDef,
    PostgresDataStorage
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostgresDataStorage$ {
    /** @deprecated use `PostgresDataStorage$inboundSchema` instead. */
    export const inboundSchema = PostgresDataStorage$inboundSchema;
    /** @deprecated use `PostgresDataStorage$outboundSchema` instead. */
    export const outboundSchema = PostgresDataStorage$outboundSchema;
    /** @deprecated use `PostgresDataStorage$Outbound` instead. */
    export type Outbound = PostgresDataStorage$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresDataTransferMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsPostgresDataTransferMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$Outbound;
}

/** @internal */
export const PostgresDataTransfer$inboundSchema: z.ZodType<
    PostgresDataTransfer,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type PostgresDataTransfer$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const PostgresDataTransfer$outboundSchema: z.ZodType<
    PostgresDataTransfer$Outbound,
    z.ZodTypeDef,
    PostgresDataTransfer
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostgresDataTransfer$ {
    /** @deprecated use `PostgresDataTransfer$inboundSchema` instead. */
    export const inboundSchema = PostgresDataTransfer$inboundSchema;
    /** @deprecated use `PostgresDataTransfer$outboundSchema` instead. */
    export const outboundSchema = PostgresDataTransfer$outboundSchema;
    /** @deprecated use `PostgresDataTransfer$Outbound` instead. */
    export type Outbound = PostgresDataTransfer$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresDatabaseMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsPostgresDatabaseMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$Outbound;
}

/** @internal */
export const PostgresDatabase$inboundSchema: z.ZodType<PostgresDatabase, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type PostgresDatabase$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const PostgresDatabase$outboundSchema: z.ZodType<
    PostgresDatabase$Outbound,
    z.ZodTypeDef,
    PostgresDatabase
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostgresDatabase$ {
    /** @deprecated use `PostgresDatabase$inboundSchema` instead. */
    export const inboundSchema = PostgresDatabase$inboundSchema;
    /** @deprecated use `PostgresDatabase$outboundSchema` instead. */
    export const outboundSchema = PostgresDatabase$outboundSchema;
    /** @deprecated use `PostgresDatabase$Outbound` instead. */
    export type Outbound = PostgresDatabase$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$Outbound;
}

/** @internal */
export const PostgresWrittenData$inboundSchema: z.ZodType<
    PostgresWrittenData,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type PostgresWrittenData$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const PostgresWrittenData$outboundSchema: z.ZodType<
    PostgresWrittenData$Outbound,
    z.ZodTypeDef,
    PostgresWrittenData
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostgresWrittenData$ {
    /** @deprecated use `PostgresWrittenData$inboundSchema` instead. */
    export const inboundSchema = PostgresWrittenData$inboundSchema;
    /** @deprecated use `PostgresWrittenData$outboundSchema` instead. */
    export const outboundSchema = PostgresWrittenData$outboundSchema;
    /** @deprecated use `PostgresWrittenData$Outbound` instead. */
    export type Outbound = PostgresWrittenData$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$Outbound;
}

/** @internal */
export const ServerlessFunctionExecution$inboundSchema: z.ZodType<
    ServerlessFunctionExecution,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type ServerlessFunctionExecution$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const ServerlessFunctionExecution$outboundSchema: z.ZodType<
    ServerlessFunctionExecution$Outbound,
    z.ZodTypeDef,
    ServerlessFunctionExecution
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServerlessFunctionExecution$ {
    /** @deprecated use `ServerlessFunctionExecution$inboundSchema` instead. */
    export const inboundSchema = ServerlessFunctionExecution$inboundSchema;
    /** @deprecated use `ServerlessFunctionExecution$outboundSchema` instead. */
    export const outboundSchema = ServerlessFunctionExecution$outboundSchema;
    /** @deprecated use `ServerlessFunctionExecution$Outbound` instead. */
    export type Outbound = ServerlessFunctionExecution$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsSourceImagesMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsSourceImagesMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsSourceImagesMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsSourceImagesMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsSourceImagesMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsSourceImagesMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsSourceImagesMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsSourceImagesMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsSourceImagesMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsSourceImagesMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsSourceImagesMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsSourceImagesMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsSourceImagesMatrix$Outbound;
}

/** @internal */
export const SourceImages$inboundSchema: z.ZodType<SourceImages, z.ZodTypeDef, unknown> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsSourceImagesMatrix$inboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type SourceImages$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsSourceImagesMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const SourceImages$outboundSchema: z.ZodType<
    SourceImages$Outbound,
    z.ZodTypeDef,
    SourceImages
> = z.object({
    matrix: z.lazy(() => AuthUserBillingInvoiceItemsSourceImagesMatrix$outboundSchema).optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SourceImages$ {
    /** @deprecated use `SourceImages$inboundSchema` instead. */
    export const inboundSchema = SourceImages$inboundSchema;
    /** @deprecated use `SourceImages$outboundSchema` instead. */
    export const outboundSchema = SourceImages$outboundSchema;
    /** @deprecated use `SourceImages$Outbound` instead. */
    export type Outbound = SourceImages$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$Outbound` instead. */
    export type Outbound =
        AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$Outbound;
}

/** @internal */
export const StorageRedisTotalBandwidthInBytes$inboundSchema: z.ZodType<
    StorageRedisTotalBandwidthInBytes,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(
            () => AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$inboundSchema
        )
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type StorageRedisTotalBandwidthInBytes$Outbound = {
    matrix?:
        | AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$Outbound
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const StorageRedisTotalBandwidthInBytes$outboundSchema: z.ZodType<
    StorageRedisTotalBandwidthInBytes$Outbound,
    z.ZodTypeDef,
    StorageRedisTotalBandwidthInBytes
> = z.object({
    matrix: z
        .lazy(
            () => AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$outboundSchema
        )
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StorageRedisTotalBandwidthInBytes$ {
    /** @deprecated use `StorageRedisTotalBandwidthInBytes$inboundSchema` instead. */
    export const inboundSchema = StorageRedisTotalBandwidthInBytes$inboundSchema;
    /** @deprecated use `StorageRedisTotalBandwidthInBytes$outboundSchema` instead. */
    export const outboundSchema = StorageRedisTotalBandwidthInBytes$outboundSchema;
    /** @deprecated use `StorageRedisTotalBandwidthInBytes$Outbound` instead. */
    export type Outbound = StorageRedisTotalBandwidthInBytes$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$Outbound;
}

/** @internal */
export const StorageRedisTotalCommands$inboundSchema: z.ZodType<
    StorageRedisTotalCommands,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type StorageRedisTotalCommands$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const StorageRedisTotalCommands$outboundSchema: z.ZodType<
    StorageRedisTotalCommands$Outbound,
    z.ZodTypeDef,
    StorageRedisTotalCommands
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StorageRedisTotalCommands$ {
    /** @deprecated use `StorageRedisTotalCommands$inboundSchema` instead. */
    export const inboundSchema = StorageRedisTotalCommands$inboundSchema;
    /** @deprecated use `StorageRedisTotalCommands$outboundSchema` instead. */
    export const outboundSchema = StorageRedisTotalCommands$outboundSchema;
    /** @deprecated use `StorageRedisTotalCommands$Outbound` instead. */
    export type Outbound = StorageRedisTotalCommands$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$Outbound` instead. */
    export type Outbound =
        AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$Outbound;
}

/** @internal */
export const StorageRedisTotalDailyAvgStorageInBytes$inboundSchema: z.ZodType<
    StorageRedisTotalDailyAvgStorageInBytes,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(
            () =>
                AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$inboundSchema
        )
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type StorageRedisTotalDailyAvgStorageInBytes$Outbound = {
    matrix?:
        | AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$Outbound
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const StorageRedisTotalDailyAvgStorageInBytes$outboundSchema: z.ZodType<
    StorageRedisTotalDailyAvgStorageInBytes$Outbound,
    z.ZodTypeDef,
    StorageRedisTotalDailyAvgStorageInBytes
> = z.object({
    matrix: z
        .lazy(
            () =>
                AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$outboundSchema
        )
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StorageRedisTotalDailyAvgStorageInBytes$ {
    /** @deprecated use `StorageRedisTotalDailyAvgStorageInBytes$inboundSchema` instead. */
    export const inboundSchema = StorageRedisTotalDailyAvgStorageInBytes$inboundSchema;
    /** @deprecated use `StorageRedisTotalDailyAvgStorageInBytes$outboundSchema` instead. */
    export const outboundSchema = StorageRedisTotalDailyAvgStorageInBytes$outboundSchema;
    /** @deprecated use `StorageRedisTotalDailyAvgStorageInBytes$Outbound` instead. */
    export type Outbound = StorageRedisTotalDailyAvgStorageInBytes$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$inboundSchema` instead. */
    export const inboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$Outbound;
}

/** @internal */
export const StorageRedisTotalDatabases$inboundSchema: z.ZodType<
    StorageRedisTotalDatabases,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type StorageRedisTotalDatabases$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const StorageRedisTotalDatabases$outboundSchema: z.ZodType<
    StorageRedisTotalDatabases$Outbound,
    z.ZodTypeDef,
    StorageRedisTotalDatabases
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StorageRedisTotalDatabases$ {
    /** @deprecated use `StorageRedisTotalDatabases$inboundSchema` instead. */
    export const inboundSchema = StorageRedisTotalDatabases$inboundSchema;
    /** @deprecated use `StorageRedisTotalDatabases$outboundSchema` instead. */
    export const outboundSchema = StorageRedisTotalDatabases$outboundSchema;
    /** @deprecated use `StorageRedisTotalDatabases$Outbound` instead. */
    export type Outbound = StorageRedisTotalDatabases$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$outboundSchema` instead. */
    export const outboundSchema =
        AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$Outbound;
}

/** @internal */
export const WafOwaspExcessBytes$inboundSchema: z.ZodType<
    WafOwaspExcessBytes,
    z.ZodTypeDef,
    unknown
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$inboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/** @internal */
export type WafOwaspExcessBytes$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const WafOwaspExcessBytes$outboundSchema: z.ZodType<
    WafOwaspExcessBytes$Outbound,
    z.ZodTypeDef,
    WafOwaspExcessBytes
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WafOwaspExcessBytes$ {
    /** @deprecated use `WafOwaspExcessBytes$inboundSchema` instead. */
    export const inboundSchema = WafOwaspExcessBytes$inboundSchema;
    /** @deprecated use `WafOwaspExcessBytes$outboundSchema` instead. */
    export const outboundSchema = WafOwaspExcessBytes$outboundSchema;
    /** @deprecated use `WafOwaspExcessBytes$Outbound` instead. */
    export type Outbound = WafOwaspExcessBytes$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$Outbound;
}

/** @internal */
export const WafOwaspRequests$inboundSchema: z.ZodType<WafOwaspRequests, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type WafOwaspRequests$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const WafOwaspRequests$outboundSchema: z.ZodType<
    WafOwaspRequests$Outbound,
    z.ZodTypeDef,
    WafOwaspRequests
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WafOwaspRequests$ {
    /** @deprecated use `WafOwaspRequests$inboundSchema` instead. */
    export const inboundSchema = WafOwaspRequests$inboundSchema;
    /** @deprecated use `WafOwaspRequests$outboundSchema` instead. */
    export const outboundSchema = WafOwaspRequests$outboundSchema;
    /** @deprecated use `WafOwaspRequests$Outbound` instead. */
    export type Outbound = WafOwaspRequests$Outbound;
}

/** @internal */
export const AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$inboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix,
    z.ZodTypeDef,
    unknown
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/** @internal */
export type AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$Outbound = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

/** @internal */
export const AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$outboundSchema: z.ZodType<
    AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$Outbound,
    z.ZodTypeDef,
    AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix
> = z.object({
    defaultUnitPrice: z.string(),
    dimensionPrices: z.record(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$ {
    /** @deprecated use `AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$inboundSchema` instead. */
    export const inboundSchema = AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$inboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$outboundSchema` instead. */
    export const outboundSchema = AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$outboundSchema;
    /** @deprecated use `AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$Outbound` instead. */
    export type Outbound = AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$Outbound;
}

/** @internal */
export const WebAnalyticsEvent$inboundSchema: z.ZodType<WebAnalyticsEvent, z.ZodTypeDef, unknown> =
    z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

/** @internal */
export type WebAnalyticsEvent$Outbound = {
    matrix?: AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$Outbound | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

/** @internal */
export const WebAnalyticsEvent$outboundSchema: z.ZodType<
    WebAnalyticsEvent$Outbound,
    z.ZodTypeDef,
    WebAnalyticsEvent
> = z.object({
    matrix: z
        .lazy(() => AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$outboundSchema)
        .optional(),
    tier: z.number().optional(),
    price: z.number(),
    batch: z.number(),
    threshold: z.number(),
    name: z.string().optional(),
    hidden: z.boolean(),
    disabledAt: z.nullable(z.number()).optional(),
    enabledAt: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebAnalyticsEvent$ {
    /** @deprecated use `WebAnalyticsEvent$inboundSchema` instead. */
    export const inboundSchema = WebAnalyticsEvent$inboundSchema;
    /** @deprecated use `WebAnalyticsEvent$outboundSchema` instead. */
    export const outboundSchema = WebAnalyticsEvent$outboundSchema;
    /** @deprecated use `WebAnalyticsEvent$Outbound` instead. */
    export type Outbound = WebAnalyticsEvent$Outbound;
}

/** @internal */
export const InvoiceItems$inboundSchema: z.ZodType<InvoiceItems, z.ZodTypeDef, unknown> = z.object({
    concurrentBuilds: z.lazy(() => ConcurrentBuilds$inboundSchema).optional(),
    webAnalytics: z.lazy(() => AuthUserWebAnalytics$inboundSchema).optional(),
    pro: z.lazy(() => Pro$inboundSchema).optional(),
    enterprise: z.lazy(() => Enterprise$inboundSchema).optional(),
    analytics: z.lazy(() => Analytics$inboundSchema).optional(),
    developerExperiencePlatform: z.lazy(() => DeveloperExperiencePlatform$inboundSchema).optional(),
    includedAllocationMiu: z.lazy(() => IncludedAllocationMiu$inboundSchema).optional(),
    managedInfrastructureCommitment: z
        .lazy(() => ManagedInfrastructureCommitment$inboundSchema)
        .optional(),
    monitoring: z.lazy(() => Monitoring$inboundSchema).optional(),
    passwordProtection: z.lazy(() => PasswordProtection$inboundSchema).optional(),
    previewDeploymentSuffix: z.lazy(() => PreviewDeploymentSuffix$inboundSchema).optional(),
    saml: z.lazy(() => AuthUserSaml$inboundSchema).optional(),
    teamSeats: z.lazy(() => TeamSeats$inboundSchema).optional(),
    vercelMarketplace: z.lazy(() => VercelMarketplace$inboundSchema).optional(),
    analyticsUsage: z.lazy(() => AnalyticsUsage$inboundSchema).optional(),
    artifacts: z.lazy(() => ArtifactsModel$inboundSchema).optional(),
    bandwidth: z.lazy(() => Bandwidth$inboundSchema).optional(),
    blobStores: z.lazy(() => BlobStores$inboundSchema).optional(),
    blobTotalAdvancedRequests: z.lazy(() => BlobTotalAdvancedRequests$inboundSchema).optional(),
    blobTotalAvgSizeInBytes: z.lazy(() => BlobTotalAvgSizeInBytes$inboundSchema).optional(),
    blobTotalGetResponseObjectSizeInBytes: z
        .lazy(() => BlobTotalGetResponseObjectSizeInBytes$inboundSchema)
        .optional(),
    blobTotalSimpleRequests: z.lazy(() => BlobTotalSimpleRequests$inboundSchema).optional(),
    buildMinute: z.lazy(() => BuildMinute$inboundSchema).optional(),
    dataCacheRead: z.lazy(() => DataCacheRead$inboundSchema).optional(),
    dataCacheRevalidation: z.lazy(() => DataCacheRevalidation$inboundSchema).optional(),
    dataCacheWrite: z.lazy(() => DataCacheWrite$inboundSchema).optional(),
    edgeConfigRead: z.lazy(() => EdgeConfigRead$inboundSchema).optional(),
    edgeConfigWrite: z.lazy(() => EdgeConfigWrite$inboundSchema).optional(),
    edgeFunctionExecutionUnits: z.lazy(() => EdgeFunctionExecutionUnits$inboundSchema).optional(),
    edgeMiddlewareInvocations: z.lazy(() => EdgeMiddlewareInvocations$inboundSchema).optional(),
    edgeRequest: z.lazy(() => EdgeRequest$inboundSchema).optional(),
    edgeRequestAdditionalCpuDuration: z
        .lazy(() => EdgeRequestAdditionalCpuDuration$inboundSchema)
        .optional(),
    fastDataTransfer: z.lazy(() => FastDataTransfer$inboundSchema).optional(),
    fastOriginTransfer: z.lazy(() => FastOriginTransfer$inboundSchema).optional(),
    functionDuration: z.lazy(() => FunctionDuration$inboundSchema).optional(),
    functionInvocation: z.lazy(() => FunctionInvocation$inboundSchema).optional(),
    logDrainsVolume: z.lazy(() => LogDrainsVolume$inboundSchema).optional(),
    monitoringMetric: z.lazy(() => MonitoringMetric$inboundSchema).optional(),
    postgresComputeTime: z.lazy(() => PostgresComputeTime$inboundSchema).optional(),
    postgresDataStorage: z.lazy(() => PostgresDataStorage$inboundSchema).optional(),
    postgresDataTransfer: z.lazy(() => PostgresDataTransfer$inboundSchema).optional(),
    postgresDatabase: z.lazy(() => PostgresDatabase$inboundSchema).optional(),
    postgresWrittenData: z.lazy(() => PostgresWrittenData$inboundSchema).optional(),
    serverlessFunctionExecution: z.lazy(() => ServerlessFunctionExecution$inboundSchema).optional(),
    sourceImages: z.lazy(() => SourceImages$inboundSchema).optional(),
    storageRedisTotalBandwidthInBytes: z
        .lazy(() => StorageRedisTotalBandwidthInBytes$inboundSchema)
        .optional(),
    storageRedisTotalCommands: z.lazy(() => StorageRedisTotalCommands$inboundSchema).optional(),
    storageRedisTotalDailyAvgStorageInBytes: z
        .lazy(() => StorageRedisTotalDailyAvgStorageInBytes$inboundSchema)
        .optional(),
    storageRedisTotalDatabases: z.lazy(() => StorageRedisTotalDatabases$inboundSchema).optional(),
    wafOwaspExcessBytes: z.lazy(() => WafOwaspExcessBytes$inboundSchema).optional(),
    wafOwaspRequests: z.lazy(() => WafOwaspRequests$inboundSchema).optional(),
    webAnalyticsEvent: z.lazy(() => WebAnalyticsEvent$inboundSchema).optional(),
});

/** @internal */
export type InvoiceItems$Outbound = {
    concurrentBuilds?: ConcurrentBuilds$Outbound | undefined;
    webAnalytics?: AuthUserWebAnalytics$Outbound | undefined;
    pro?: Pro$Outbound | undefined;
    enterprise?: Enterprise$Outbound | undefined;
    analytics?: Analytics$Outbound | undefined;
    developerExperiencePlatform?: DeveloperExperiencePlatform$Outbound | undefined;
    includedAllocationMiu?: IncludedAllocationMiu$Outbound | undefined;
    managedInfrastructureCommitment?: ManagedInfrastructureCommitment$Outbound | undefined;
    monitoring?: Monitoring$Outbound | undefined;
    passwordProtection?: PasswordProtection$Outbound | undefined;
    previewDeploymentSuffix?: PreviewDeploymentSuffix$Outbound | undefined;
    saml?: AuthUserSaml$Outbound | undefined;
    teamSeats?: TeamSeats$Outbound | undefined;
    vercelMarketplace?: VercelMarketplace$Outbound | undefined;
    analyticsUsage?: AnalyticsUsage$Outbound | undefined;
    artifacts?: ArtifactsModel$Outbound | undefined;
    bandwidth?: Bandwidth$Outbound | undefined;
    blobStores?: BlobStores$Outbound | undefined;
    blobTotalAdvancedRequests?: BlobTotalAdvancedRequests$Outbound | undefined;
    blobTotalAvgSizeInBytes?: BlobTotalAvgSizeInBytes$Outbound | undefined;
    blobTotalGetResponseObjectSizeInBytes?:
        | BlobTotalGetResponseObjectSizeInBytes$Outbound
        | undefined;
    blobTotalSimpleRequests?: BlobTotalSimpleRequests$Outbound | undefined;
    buildMinute?: BuildMinute$Outbound | undefined;
    dataCacheRead?: DataCacheRead$Outbound | undefined;
    dataCacheRevalidation?: DataCacheRevalidation$Outbound | undefined;
    dataCacheWrite?: DataCacheWrite$Outbound | undefined;
    edgeConfigRead?: EdgeConfigRead$Outbound | undefined;
    edgeConfigWrite?: EdgeConfigWrite$Outbound | undefined;
    edgeFunctionExecutionUnits?: EdgeFunctionExecutionUnits$Outbound | undefined;
    edgeMiddlewareInvocations?: EdgeMiddlewareInvocations$Outbound | undefined;
    edgeRequest?: EdgeRequest$Outbound | undefined;
    edgeRequestAdditionalCpuDuration?: EdgeRequestAdditionalCpuDuration$Outbound | undefined;
    fastDataTransfer?: FastDataTransfer$Outbound | undefined;
    fastOriginTransfer?: FastOriginTransfer$Outbound | undefined;
    functionDuration?: FunctionDuration$Outbound | undefined;
    functionInvocation?: FunctionInvocation$Outbound | undefined;
    logDrainsVolume?: LogDrainsVolume$Outbound | undefined;
    monitoringMetric?: MonitoringMetric$Outbound | undefined;
    postgresComputeTime?: PostgresComputeTime$Outbound | undefined;
    postgresDataStorage?: PostgresDataStorage$Outbound | undefined;
    postgresDataTransfer?: PostgresDataTransfer$Outbound | undefined;
    postgresDatabase?: PostgresDatabase$Outbound | undefined;
    postgresWrittenData?: PostgresWrittenData$Outbound | undefined;
    serverlessFunctionExecution?: ServerlessFunctionExecution$Outbound | undefined;
    sourceImages?: SourceImages$Outbound | undefined;
    storageRedisTotalBandwidthInBytes?: StorageRedisTotalBandwidthInBytes$Outbound | undefined;
    storageRedisTotalCommands?: StorageRedisTotalCommands$Outbound | undefined;
    storageRedisTotalDailyAvgStorageInBytes?:
        | StorageRedisTotalDailyAvgStorageInBytes$Outbound
        | undefined;
    storageRedisTotalDatabases?: StorageRedisTotalDatabases$Outbound | undefined;
    wafOwaspExcessBytes?: WafOwaspExcessBytes$Outbound | undefined;
    wafOwaspRequests?: WafOwaspRequests$Outbound | undefined;
    webAnalyticsEvent?: WebAnalyticsEvent$Outbound | undefined;
};

/** @internal */
export const InvoiceItems$outboundSchema: z.ZodType<
    InvoiceItems$Outbound,
    z.ZodTypeDef,
    InvoiceItems
> = z.object({
    concurrentBuilds: z.lazy(() => ConcurrentBuilds$outboundSchema).optional(),
    webAnalytics: z.lazy(() => AuthUserWebAnalytics$outboundSchema).optional(),
    pro: z.lazy(() => Pro$outboundSchema).optional(),
    enterprise: z.lazy(() => Enterprise$outboundSchema).optional(),
    analytics: z.lazy(() => Analytics$outboundSchema).optional(),
    developerExperiencePlatform: z
        .lazy(() => DeveloperExperiencePlatform$outboundSchema)
        .optional(),
    includedAllocationMiu: z.lazy(() => IncludedAllocationMiu$outboundSchema).optional(),
    managedInfrastructureCommitment: z
        .lazy(() => ManagedInfrastructureCommitment$outboundSchema)
        .optional(),
    monitoring: z.lazy(() => Monitoring$outboundSchema).optional(),
    passwordProtection: z.lazy(() => PasswordProtection$outboundSchema).optional(),
    previewDeploymentSuffix: z.lazy(() => PreviewDeploymentSuffix$outboundSchema).optional(),
    saml: z.lazy(() => AuthUserSaml$outboundSchema).optional(),
    teamSeats: z.lazy(() => TeamSeats$outboundSchema).optional(),
    vercelMarketplace: z.lazy(() => VercelMarketplace$outboundSchema).optional(),
    analyticsUsage: z.lazy(() => AnalyticsUsage$outboundSchema).optional(),
    artifacts: z.lazy(() => ArtifactsModel$outboundSchema).optional(),
    bandwidth: z.lazy(() => Bandwidth$outboundSchema).optional(),
    blobStores: z.lazy(() => BlobStores$outboundSchema).optional(),
    blobTotalAdvancedRequests: z.lazy(() => BlobTotalAdvancedRequests$outboundSchema).optional(),
    blobTotalAvgSizeInBytes: z.lazy(() => BlobTotalAvgSizeInBytes$outboundSchema).optional(),
    blobTotalGetResponseObjectSizeInBytes: z
        .lazy(() => BlobTotalGetResponseObjectSizeInBytes$outboundSchema)
        .optional(),
    blobTotalSimpleRequests: z.lazy(() => BlobTotalSimpleRequests$outboundSchema).optional(),
    buildMinute: z.lazy(() => BuildMinute$outboundSchema).optional(),
    dataCacheRead: z.lazy(() => DataCacheRead$outboundSchema).optional(),
    dataCacheRevalidation: z.lazy(() => DataCacheRevalidation$outboundSchema).optional(),
    dataCacheWrite: z.lazy(() => DataCacheWrite$outboundSchema).optional(),
    edgeConfigRead: z.lazy(() => EdgeConfigRead$outboundSchema).optional(),
    edgeConfigWrite: z.lazy(() => EdgeConfigWrite$outboundSchema).optional(),
    edgeFunctionExecutionUnits: z.lazy(() => EdgeFunctionExecutionUnits$outboundSchema).optional(),
    edgeMiddlewareInvocations: z.lazy(() => EdgeMiddlewareInvocations$outboundSchema).optional(),
    edgeRequest: z.lazy(() => EdgeRequest$outboundSchema).optional(),
    edgeRequestAdditionalCpuDuration: z
        .lazy(() => EdgeRequestAdditionalCpuDuration$outboundSchema)
        .optional(),
    fastDataTransfer: z.lazy(() => FastDataTransfer$outboundSchema).optional(),
    fastOriginTransfer: z.lazy(() => FastOriginTransfer$outboundSchema).optional(),
    functionDuration: z.lazy(() => FunctionDuration$outboundSchema).optional(),
    functionInvocation: z.lazy(() => FunctionInvocation$outboundSchema).optional(),
    logDrainsVolume: z.lazy(() => LogDrainsVolume$outboundSchema).optional(),
    monitoringMetric: z.lazy(() => MonitoringMetric$outboundSchema).optional(),
    postgresComputeTime: z.lazy(() => PostgresComputeTime$outboundSchema).optional(),
    postgresDataStorage: z.lazy(() => PostgresDataStorage$outboundSchema).optional(),
    postgresDataTransfer: z.lazy(() => PostgresDataTransfer$outboundSchema).optional(),
    postgresDatabase: z.lazy(() => PostgresDatabase$outboundSchema).optional(),
    postgresWrittenData: z.lazy(() => PostgresWrittenData$outboundSchema).optional(),
    serverlessFunctionExecution: z
        .lazy(() => ServerlessFunctionExecution$outboundSchema)
        .optional(),
    sourceImages: z.lazy(() => SourceImages$outboundSchema).optional(),
    storageRedisTotalBandwidthInBytes: z
        .lazy(() => StorageRedisTotalBandwidthInBytes$outboundSchema)
        .optional(),
    storageRedisTotalCommands: z.lazy(() => StorageRedisTotalCommands$outboundSchema).optional(),
    storageRedisTotalDailyAvgStorageInBytes: z
        .lazy(() => StorageRedisTotalDailyAvgStorageInBytes$outboundSchema)
        .optional(),
    storageRedisTotalDatabases: z.lazy(() => StorageRedisTotalDatabases$outboundSchema).optional(),
    wafOwaspExcessBytes: z.lazy(() => WafOwaspExcessBytes$outboundSchema).optional(),
    wafOwaspRequests: z.lazy(() => WafOwaspRequests$outboundSchema).optional(),
    webAnalyticsEvent: z.lazy(() => WebAnalyticsEvent$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceItems$ {
    /** @deprecated use `InvoiceItems$inboundSchema` instead. */
    export const inboundSchema = InvoiceItems$inboundSchema;
    /** @deprecated use `InvoiceItems$outboundSchema` instead. */
    export const outboundSchema = InvoiceItems$outboundSchema;
    /** @deprecated use `InvoiceItems$Outbound` instead. */
    export type Outbound = InvoiceItems$Outbound;
}

/** @internal */
export const InvoiceSettings$inboundSchema: z.ZodType<InvoiceSettings, z.ZodTypeDef, unknown> =
    z.object({
        footer: z.string().optional(),
    });

/** @internal */
export type InvoiceSettings$Outbound = {
    footer?: string | undefined;
};

/** @internal */
export const InvoiceSettings$outboundSchema: z.ZodType<
    InvoiceSettings$Outbound,
    z.ZodTypeDef,
    InvoiceSettings
> = z.object({
    footer: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceSettings$ {
    /** @deprecated use `InvoiceSettings$inboundSchema` instead. */
    export const inboundSchema = InvoiceSettings$inboundSchema;
    /** @deprecated use `InvoiceSettings$outboundSchema` instead. */
    export const outboundSchema = InvoiceSettings$outboundSchema;
    /** @deprecated use `InvoiceSettings$Outbound` instead. */
    export type Outbound = InvoiceSettings$Outbound;
}

/** @internal */
export const AuthUserTrial$inboundSchema: z.ZodType<AuthUserTrial, z.ZodTypeDef, unknown> =
    z.object({
        start: z.number(),
        end: z.number(),
    });

/** @internal */
export type AuthUserTrial$Outbound = {
    start: number;
    end: number;
};

/** @internal */
export const AuthUserTrial$outboundSchema: z.ZodType<
    AuthUserTrial$Outbound,
    z.ZodTypeDef,
    AuthUserTrial
> = z.object({
    start: z.number(),
    end: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserTrial$ {
    /** @deprecated use `AuthUserTrial$inboundSchema` instead. */
    export const inboundSchema = AuthUserTrial$inboundSchema;
    /** @deprecated use `AuthUserTrial$outboundSchema` instead. */
    export const outboundSchema = AuthUserTrial$outboundSchema;
    /** @deprecated use `AuthUserTrial$Outbound` instead. */
    export type Outbound = AuthUserTrial$Outbound;
}

/** @internal */
export const AuthUserPeriod$inboundSchema: z.ZodType<AuthUserPeriod, z.ZodTypeDef, unknown> =
    z.object({
        start: z.number(),
        end: z.number(),
    });

/** @internal */
export type AuthUserPeriod$Outbound = {
    start: number;
    end: number;
};

/** @internal */
export const AuthUserPeriod$outboundSchema: z.ZodType<
    AuthUserPeriod$Outbound,
    z.ZodTypeDef,
    AuthUserPeriod
> = z.object({
    start: z.number(),
    end: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUserPeriod$ {
    /** @deprecated use `AuthUserPeriod$inboundSchema` instead. */
    export const inboundSchema = AuthUserPeriod$inboundSchema;
    /** @deprecated use `AuthUserPeriod$outboundSchema` instead. */
    export const outboundSchema = AuthUserPeriod$outboundSchema;
    /** @deprecated use `AuthUserPeriod$Outbound` instead. */
    export type Outbound = AuthUserPeriod$Outbound;
}

/** @internal */
export const Interval$inboundSchema: z.ZodNativeEnum<typeof Interval> = z.nativeEnum(Interval);

/** @internal */
export const Interval$outboundSchema: z.ZodNativeEnum<typeof Interval> = Interval$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Interval$ {
    /** @deprecated use `Interval$inboundSchema` instead. */
    export const inboundSchema = Interval$inboundSchema;
    /** @deprecated use `Interval$outboundSchema` instead. */
    export const outboundSchema = Interval$outboundSchema;
}

/** @internal */
export const Frequency$inboundSchema: z.ZodType<Frequency, z.ZodTypeDef, unknown> = z.object({
    interval: Interval$inboundSchema,
    intervalCount: z.number(),
});

/** @internal */
export type Frequency$Outbound = {
    interval: string;
    intervalCount: number;
};

/** @internal */
export const Frequency$outboundSchema: z.ZodType<Frequency$Outbound, z.ZodTypeDef, Frequency> =
    z.object({
        interval: Interval$outboundSchema,
        intervalCount: z.number(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Frequency$ {
    /** @deprecated use `Frequency$inboundSchema` instead. */
    export const inboundSchema = Frequency$inboundSchema;
    /** @deprecated use `Frequency$outboundSchema` instead. */
    export const outboundSchema = Frequency$outboundSchema;
    /** @deprecated use `Frequency$Outbound` instead. */
    export type Outbound = Frequency$Outbound;
}

/** @internal */
export const Duration$inboundSchema: z.ZodNativeEnum<typeof Duration> = z.nativeEnum(Duration);

/** @internal */
export const Duration$outboundSchema: z.ZodNativeEnum<typeof Duration> = Duration$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Duration$ {
    /** @deprecated use `Duration$inboundSchema` instead. */
    export const inboundSchema = Duration$inboundSchema;
    /** @deprecated use `Duration$outboundSchema` instead. */
    export const outboundSchema = Duration$outboundSchema;
}

/** @internal */
export const Coupon$inboundSchema: z.ZodType<Coupon, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    name: z.nullable(z.string()),
    amountOff: z.nullable(z.number()),
    percentageOff: z.nullable(z.number()),
    durationInMonths: z.nullable(z.number()),
    duration: Duration$inboundSchema,
});

/** @internal */
export type Coupon$Outbound = {
    id: string;
    name: string | null;
    amountOff: number | null;
    percentageOff: number | null;
    durationInMonths: number | null;
    duration: string;
};

/** @internal */
export const Coupon$outboundSchema: z.ZodType<Coupon$Outbound, z.ZodTypeDef, Coupon> = z.object({
    id: z.string(),
    name: z.nullable(z.string()),
    amountOff: z.nullable(z.number()),
    percentageOff: z.nullable(z.number()),
    durationInMonths: z.nullable(z.number()),
    duration: Duration$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Coupon$ {
    /** @deprecated use `Coupon$inboundSchema` instead. */
    export const inboundSchema = Coupon$inboundSchema;
    /** @deprecated use `Coupon$outboundSchema` instead. */
    export const outboundSchema = Coupon$outboundSchema;
    /** @deprecated use `Coupon$Outbound` instead. */
    export type Outbound = Coupon$Outbound;
}

/** @internal */
export const Discount$inboundSchema: z.ZodType<Discount, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    coupon: z.lazy(() => Coupon$inboundSchema),
});

/** @internal */
export type Discount$Outbound = {
    id: string;
    coupon: Coupon$Outbound;
};

/** @internal */
export const Discount$outboundSchema: z.ZodType<Discount$Outbound, z.ZodTypeDef, Discount> =
    z.object({
        id: z.string(),
        coupon: z.lazy(() => Coupon$outboundSchema),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Discount$ {
    /** @deprecated use `Discount$inboundSchema` instead. */
    export const inboundSchema = Discount$inboundSchema;
    /** @deprecated use `Discount$outboundSchema` instead. */
    export const outboundSchema = Discount$outboundSchema;
    /** @deprecated use `Discount$Outbound` instead. */
    export type Outbound = Discount$Outbound;
}

/** @internal */
export const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
    priceId: z.string(),
    productId: z.string(),
    amount: z.number(),
    quantity: z.number(),
});

/** @internal */
export type Items$Outbound = {
    id: string;
    priceId: string;
    productId: string;
    amount: number;
    quantity: number;
};

/** @internal */
export const Items$outboundSchema: z.ZodType<Items$Outbound, z.ZodTypeDef, Items> = z.object({
    id: z.string(),
    priceId: z.string(),
    productId: z.string(),
    amount: z.number(),
    quantity: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items$ {
    /** @deprecated use `Items$inboundSchema` instead. */
    export const inboundSchema = Items$inboundSchema;
    /** @deprecated use `Items$outboundSchema` instead. */
    export const outboundSchema = Items$outboundSchema;
    /** @deprecated use `Items$Outbound` instead. */
    export type Outbound = Items$Outbound;
}

/** @internal */
export const Subscriptions$inboundSchema: z.ZodType<Subscriptions, z.ZodTypeDef, unknown> =
    z.object({
        id: z.string(),
        trial: z.nullable(z.lazy(() => AuthUserTrial$inboundSchema)),
        period: z.lazy(() => AuthUserPeriod$inboundSchema),
        frequency: z.lazy(() => Frequency$inboundSchema),
        discount: z.nullable(z.lazy(() => Discount$inboundSchema)),
        items: z.array(z.lazy(() => Items$inboundSchema)),
    });

/** @internal */
export type Subscriptions$Outbound = {
    id: string;
    trial: AuthUserTrial$Outbound | null;
    period: AuthUserPeriod$Outbound;
    frequency: Frequency$Outbound;
    discount: Discount$Outbound | null;
    items: Array<Items$Outbound>;
};

/** @internal */
export const Subscriptions$outboundSchema: z.ZodType<
    Subscriptions$Outbound,
    z.ZodTypeDef,
    Subscriptions
> = z.object({
    id: z.string(),
    trial: z.nullable(z.lazy(() => AuthUserTrial$outboundSchema)),
    period: z.lazy(() => AuthUserPeriod$outboundSchema),
    frequency: z.lazy(() => Frequency$outboundSchema),
    discount: z.nullable(z.lazy(() => Discount$outboundSchema)),
    items: z.array(z.lazy(() => Items$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Subscriptions$ {
    /** @deprecated use `Subscriptions$inboundSchema` instead. */
    export const inboundSchema = Subscriptions$inboundSchema;
    /** @deprecated use `Subscriptions$outboundSchema` instead. */
    export const outboundSchema = Subscriptions$outboundSchema;
    /** @deprecated use `Subscriptions$Outbound` instead. */
    export type Outbound = Subscriptions$Outbound;
}

/** @internal */
export const Controls$inboundSchema: z.ZodType<Controls, z.ZodTypeDef, unknown> = z.object({
    analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
    analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
});

/** @internal */
export type Controls$Outbound = {
    analyticsSampleRateInPercent?: number | null | undefined;
    analyticsSpendLimitInDollars?: number | null | undefined;
};

/** @internal */
export const Controls$outboundSchema: z.ZodType<Controls$Outbound, z.ZodTypeDef, Controls> =
    z.object({
        analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
        analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Controls$ {
    /** @deprecated use `Controls$inboundSchema` instead. */
    export const inboundSchema = Controls$inboundSchema;
    /** @deprecated use `Controls$outboundSchema` instead. */
    export const outboundSchema = Controls$outboundSchema;
    /** @deprecated use `Controls$Outbound` instead. */
    export type Outbound = Controls$Outbound;
}

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z.nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> = Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
    /** @deprecated use `Status$inboundSchema` instead. */
    export const inboundSchema = Status$inboundSchema;
    /** @deprecated use `Status$outboundSchema` instead. */
    export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const PricingExperiment$inboundSchema: z.ZodNativeEnum<typeof PricingExperiment> =
    z.nativeEnum(PricingExperiment);

/** @internal */
export const PricingExperiment$outboundSchema: z.ZodNativeEnum<typeof PricingExperiment> =
    PricingExperiment$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PricingExperiment$ {
    /** @deprecated use `PricingExperiment$inboundSchema` instead. */
    export const inboundSchema = PricingExperiment$inboundSchema;
    /** @deprecated use `PricingExperiment$outboundSchema` instead. */
    export const outboundSchema = PricingExperiment$outboundSchema;
}

/** @internal */
export const AwsMarketplace$inboundSchema: z.ZodType<AwsMarketplace, z.ZodTypeDef, unknown> =
    z.object({
        productCode: z.string(),
        offerId: z.string().optional(),
        customerId: z.string(),
    });

/** @internal */
export type AwsMarketplace$Outbound = {
    productCode: string;
    offerId?: string | undefined;
    customerId: string;
};

/** @internal */
export const AwsMarketplace$outboundSchema: z.ZodType<
    AwsMarketplace$Outbound,
    z.ZodTypeDef,
    AwsMarketplace
> = z.object({
    productCode: z.string(),
    offerId: z.string().optional(),
    customerId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AwsMarketplace$ {
    /** @deprecated use `AwsMarketplace$inboundSchema` instead. */
    export const inboundSchema = AwsMarketplace$inboundSchema;
    /** @deprecated use `AwsMarketplace$outboundSchema` instead. */
    export const outboundSchema = AwsMarketplace$outboundSchema;
    /** @deprecated use `AwsMarketplace$Outbound` instead. */
    export type Outbound = AwsMarketplace$Outbound;
}

/** @internal */
export const Billing$inboundSchema: z.ZodType<Billing, z.ZodTypeDef, unknown> = z.object({
    currency: Currency$inboundSchema.optional(),
    cancelation: z.nullable(z.number()).optional(),
    period: z.nullable(z.lazy(() => Period$inboundSchema)),
    contract: z.nullable(z.lazy(() => Contract$inboundSchema)).optional(),
    plan: Plan$inboundSchema,
    planIteration: z.string().optional(),
    platform: Platform$inboundSchema.optional(),
    orbCustomerId: z.string().optional(),
    syncedAt: z.number().optional(),
    programType: ProgramType$inboundSchema.optional(),
    trial: z.nullable(z.lazy(() => Trial$inboundSchema)).optional(),
    email: z.nullable(z.string()).optional(),
    tax: z.nullable(z.lazy(() => Tax$inboundSchema)).optional(),
    language: z.nullable(z.string()).optional(),
    address: z.nullable(z.lazy(() => Address$inboundSchema)).optional(),
    name: z.nullable(z.string()).optional(),
    invoiceItems: z.nullable(z.lazy(() => InvoiceItems$inboundSchema)).optional(),
    invoiceSettings: z.lazy(() => InvoiceSettings$inboundSchema).optional(),
    subscriptions: z.nullable(z.array(z.lazy(() => Subscriptions$inboundSchema))).optional(),
    controls: z.nullable(z.lazy(() => Controls$inboundSchema)).optional(),
    purchaseOrder: z.nullable(z.string()).optional(),
    status: Status$inboundSchema.optional(),
    pricingExperiment: PricingExperiment$inboundSchema.optional(),
    orbMigrationScheduledAt: z.nullable(z.number()).optional(),
    forceOrbMigration: z.nullable(z.boolean()).optional(),
    awsMarketplace: z.nullable(z.lazy(() => AwsMarketplace$inboundSchema)).optional(),
    reseller: z.string().optional(),
});

/** @internal */
export type Billing$Outbound = {
    currency?: string | undefined;
    cancelation?: number | null | undefined;
    period: Period$Outbound | null;
    contract?: Contract$Outbound | null | undefined;
    plan: string;
    planIteration?: string | undefined;
    platform?: string | undefined;
    orbCustomerId?: string | undefined;
    syncedAt?: number | undefined;
    programType?: string | undefined;
    trial?: Trial$Outbound | null | undefined;
    email?: string | null | undefined;
    tax?: Tax$Outbound | null | undefined;
    language?: string | null | undefined;
    address?: Address$Outbound | null | undefined;
    name?: string | null | undefined;
    invoiceItems?: InvoiceItems$Outbound | null | undefined;
    invoiceSettings?: InvoiceSettings$Outbound | undefined;
    subscriptions?: Array<Subscriptions$Outbound> | null | undefined;
    controls?: Controls$Outbound | null | undefined;
    purchaseOrder?: string | null | undefined;
    status?: string | undefined;
    pricingExperiment?: string | undefined;
    orbMigrationScheduledAt?: number | null | undefined;
    forceOrbMigration?: boolean | null | undefined;
    awsMarketplace?: AwsMarketplace$Outbound | null | undefined;
    reseller?: string | undefined;
};

/** @internal */
export const Billing$outboundSchema: z.ZodType<Billing$Outbound, z.ZodTypeDef, Billing> = z.object({
    currency: Currency$outboundSchema.optional(),
    cancelation: z.nullable(z.number()).optional(),
    period: z.nullable(z.lazy(() => Period$outboundSchema)),
    contract: z.nullable(z.lazy(() => Contract$outboundSchema)).optional(),
    plan: Plan$outboundSchema,
    planIteration: z.string().optional(),
    platform: Platform$outboundSchema.optional(),
    orbCustomerId: z.string().optional(),
    syncedAt: z.number().optional(),
    programType: ProgramType$outboundSchema.optional(),
    trial: z.nullable(z.lazy(() => Trial$outboundSchema)).optional(),
    email: z.nullable(z.string()).optional(),
    tax: z.nullable(z.lazy(() => Tax$outboundSchema)).optional(),
    language: z.nullable(z.string()).optional(),
    address: z.nullable(z.lazy(() => Address$outboundSchema)).optional(),
    name: z.nullable(z.string()).optional(),
    invoiceItems: z.nullable(z.lazy(() => InvoiceItems$outboundSchema)).optional(),
    invoiceSettings: z.lazy(() => InvoiceSettings$outboundSchema).optional(),
    subscriptions: z.nullable(z.array(z.lazy(() => Subscriptions$outboundSchema))).optional(),
    controls: z.nullable(z.lazy(() => Controls$outboundSchema)).optional(),
    purchaseOrder: z.nullable(z.string()).optional(),
    status: Status$outboundSchema.optional(),
    pricingExperiment: PricingExperiment$outboundSchema.optional(),
    orbMigrationScheduledAt: z.nullable(z.number()).optional(),
    forceOrbMigration: z.nullable(z.boolean()).optional(),
    awsMarketplace: z.nullable(z.lazy(() => AwsMarketplace$outboundSchema)).optional(),
    reseller: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Billing$ {
    /** @deprecated use `Billing$inboundSchema` instead. */
    export const inboundSchema = Billing$inboundSchema;
    /** @deprecated use `Billing$outboundSchema` instead. */
    export const outboundSchema = Billing$outboundSchema;
    /** @deprecated use `Billing$Outbound` instead. */
    export type Outbound = Billing$Outbound;
}

/** @internal */
export const ResourceConfig$inboundSchema: z.ZodType<ResourceConfig, z.ZodTypeDef, unknown> =
    z.object({
        blobStores: z.number().optional(),
        nodeType: z.string().optional(),
        concurrentBuilds: z.number().optional(),
        awsAccountType: z.string().optional(),
        awsAccountIds: z.array(z.string()).optional(),
        cfZoneName: z.string().optional(),
        imageOptimizationType: z.string().optional(),
        edgeConfigs: z.number().optional(),
        edgeConfigSize: z.number().optional(),
        edgeFunctionMaxSizeBytes: z.number().optional(),
        edgeFunctionExecutionTimeoutMs: z.number().optional(),
        serverlessFunctionDefaultMaxExecutionTime: z.number().optional(),
        kvDatabases: z.number().optional(),
        postgresDatabases: z.number().optional(),
        integrationStores: z.number().optional(),
        cronJobs: z.number().optional(),
        cronJobsPerProject: z.number().optional(),
    });

/** @internal */
export type ResourceConfig$Outbound = {
    blobStores?: number | undefined;
    nodeType?: string | undefined;
    concurrentBuilds?: number | undefined;
    awsAccountType?: string | undefined;
    awsAccountIds?: Array<string> | undefined;
    cfZoneName?: string | undefined;
    imageOptimizationType?: string | undefined;
    edgeConfigs?: number | undefined;
    edgeConfigSize?: number | undefined;
    edgeFunctionMaxSizeBytes?: number | undefined;
    edgeFunctionExecutionTimeoutMs?: number | undefined;
    serverlessFunctionDefaultMaxExecutionTime?: number | undefined;
    kvDatabases?: number | undefined;
    postgresDatabases?: number | undefined;
    integrationStores?: number | undefined;
    cronJobs?: number | undefined;
    cronJobsPerProject?: number | undefined;
};

/** @internal */
export const ResourceConfig$outboundSchema: z.ZodType<
    ResourceConfig$Outbound,
    z.ZodTypeDef,
    ResourceConfig
> = z.object({
    blobStores: z.number().optional(),
    nodeType: z.string().optional(),
    concurrentBuilds: z.number().optional(),
    awsAccountType: z.string().optional(),
    awsAccountIds: z.array(z.string()).optional(),
    cfZoneName: z.string().optional(),
    imageOptimizationType: z.string().optional(),
    edgeConfigs: z.number().optional(),
    edgeConfigSize: z.number().optional(),
    edgeFunctionMaxSizeBytes: z.number().optional(),
    edgeFunctionExecutionTimeoutMs: z.number().optional(),
    serverlessFunctionDefaultMaxExecutionTime: z.number().optional(),
    kvDatabases: z.number().optional(),
    postgresDatabases: z.number().optional(),
    integrationStores: z.number().optional(),
    cronJobs: z.number().optional(),
    cronJobsPerProject: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResourceConfig$ {
    /** @deprecated use `ResourceConfig$inboundSchema` instead. */
    export const inboundSchema = ResourceConfig$inboundSchema;
    /** @deprecated use `ResourceConfig$outboundSchema` instead. */
    export const outboundSchema = ResourceConfig$outboundSchema;
    /** @deprecated use `ResourceConfig$Outbound` instead. */
    export type Outbound = ResourceConfig$Outbound;
}

/** @internal */
export const ViewPreference$inboundSchema: z.ZodNativeEnum<typeof ViewPreference> =
    z.nativeEnum(ViewPreference);

/** @internal */
export const ViewPreference$outboundSchema: z.ZodNativeEnum<typeof ViewPreference> =
    ViewPreference$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ViewPreference$ {
    /** @deprecated use `ViewPreference$inboundSchema` instead. */
    export const inboundSchema = ViewPreference$inboundSchema;
    /** @deprecated use `ViewPreference$outboundSchema` instead. */
    export const outboundSchema = ViewPreference$outboundSchema;
}

/** @internal */
export const FavoritesViewPreference$inboundSchema: z.ZodNativeEnum<
    typeof FavoritesViewPreference
> = z.nativeEnum(FavoritesViewPreference);

/** @internal */
export const FavoritesViewPreference$outboundSchema: z.ZodNativeEnum<
    typeof FavoritesViewPreference
> = FavoritesViewPreference$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FavoritesViewPreference$ {
    /** @deprecated use `FavoritesViewPreference$inboundSchema` instead. */
    export const inboundSchema = FavoritesViewPreference$inboundSchema;
    /** @deprecated use `FavoritesViewPreference$outboundSchema` instead. */
    export const outboundSchema = FavoritesViewPreference$outboundSchema;
}

/** @internal */
export const RecentsViewPreference$inboundSchema: z.ZodNativeEnum<typeof RecentsViewPreference> =
    z.nativeEnum(RecentsViewPreference);

/** @internal */
export const RecentsViewPreference$outboundSchema: z.ZodNativeEnum<typeof RecentsViewPreference> =
    RecentsViewPreference$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecentsViewPreference$ {
    /** @deprecated use `RecentsViewPreference$inboundSchema` instead. */
    export const inboundSchema = RecentsViewPreference$inboundSchema;
    /** @deprecated use `RecentsViewPreference$outboundSchema` instead. */
    export const outboundSchema = RecentsViewPreference$outboundSchema;
}

/** @internal */
export const ActiveDashboardViews$inboundSchema: z.ZodType<
    ActiveDashboardViews,
    z.ZodTypeDef,
    unknown
> = z.object({
    scopeId: z.string(),
    viewPreference: ViewPreference$inboundSchema.optional(),
    favoritesViewPreference: FavoritesViewPreference$inboundSchema.optional(),
    recentsViewPreference: RecentsViewPreference$inboundSchema.optional(),
});

/** @internal */
export type ActiveDashboardViews$Outbound = {
    scopeId: string;
    viewPreference?: string | undefined;
    favoritesViewPreference?: string | undefined;
    recentsViewPreference?: string | undefined;
};

/** @internal */
export const ActiveDashboardViews$outboundSchema: z.ZodType<
    ActiveDashboardViews$Outbound,
    z.ZodTypeDef,
    ActiveDashboardViews
> = z.object({
    scopeId: z.string(),
    viewPreference: ViewPreference$outboundSchema.optional(),
    favoritesViewPreference: FavoritesViewPreference$outboundSchema.optional(),
    recentsViewPreference: RecentsViewPreference$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActiveDashboardViews$ {
    /** @deprecated use `ActiveDashboardViews$inboundSchema` instead. */
    export const inboundSchema = ActiveDashboardViews$inboundSchema;
    /** @deprecated use `ActiveDashboardViews$outboundSchema` instead. */
    export const outboundSchema = ActiveDashboardViews$outboundSchema;
    /** @deprecated use `ActiveDashboardViews$Outbound` instead. */
    export type Outbound = ActiveDashboardViews$Outbound;
}

/** @internal */
export const ImportFlowGitNamespace$inboundSchema: z.ZodType<
    ImportFlowGitNamespace,
    z.ZodTypeDef,
    unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type ImportFlowGitNamespace$Outbound = string | number;

/** @internal */
export const ImportFlowGitNamespace$outboundSchema: z.ZodType<
    ImportFlowGitNamespace$Outbound,
    z.ZodTypeDef,
    ImportFlowGitNamespace
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImportFlowGitNamespace$ {
    /** @deprecated use `ImportFlowGitNamespace$inboundSchema` instead. */
    export const inboundSchema = ImportFlowGitNamespace$inboundSchema;
    /** @deprecated use `ImportFlowGitNamespace$outboundSchema` instead. */
    export const outboundSchema = ImportFlowGitNamespace$outboundSchema;
    /** @deprecated use `ImportFlowGitNamespace$Outbound` instead. */
    export type Outbound = ImportFlowGitNamespace$Outbound;
}

/** @internal */
export const ImportFlowGitNamespaceId$inboundSchema: z.ZodType<
    ImportFlowGitNamespaceId,
    z.ZodTypeDef,
    unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type ImportFlowGitNamespaceId$Outbound = string | number;

/** @internal */
export const ImportFlowGitNamespaceId$outboundSchema: z.ZodType<
    ImportFlowGitNamespaceId$Outbound,
    z.ZodTypeDef,
    ImportFlowGitNamespaceId
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImportFlowGitNamespaceId$ {
    /** @deprecated use `ImportFlowGitNamespaceId$inboundSchema` instead. */
    export const inboundSchema = ImportFlowGitNamespaceId$inboundSchema;
    /** @deprecated use `ImportFlowGitNamespaceId$outboundSchema` instead. */
    export const outboundSchema = ImportFlowGitNamespaceId$outboundSchema;
    /** @deprecated use `ImportFlowGitNamespaceId$Outbound` instead. */
    export type Outbound = ImportFlowGitNamespaceId$Outbound;
}

/** @internal */
export const ImportFlowGitProvider$inboundSchema: z.ZodNativeEnum<typeof ImportFlowGitProvider> =
    z.nativeEnum(ImportFlowGitProvider);

/** @internal */
export const ImportFlowGitProvider$outboundSchema: z.ZodNativeEnum<typeof ImportFlowGitProvider> =
    ImportFlowGitProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImportFlowGitProvider$ {
    /** @deprecated use `ImportFlowGitProvider$inboundSchema` instead. */
    export const inboundSchema = ImportFlowGitProvider$inboundSchema;
    /** @deprecated use `ImportFlowGitProvider$outboundSchema` instead. */
    export const outboundSchema = ImportFlowGitProvider$outboundSchema;
}

/** @internal */
export const GitNamespaceId$inboundSchema: z.ZodType<GitNamespaceId, z.ZodTypeDef, unknown> =
    z.union([z.string(), z.number()]);

/** @internal */
export type GitNamespaceId$Outbound = string | number;

/** @internal */
export const GitNamespaceId$outboundSchema: z.ZodType<
    GitNamespaceId$Outbound,
    z.ZodTypeDef,
    GitNamespaceId
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GitNamespaceId$ {
    /** @deprecated use `GitNamespaceId$inboundSchema` instead. */
    export const inboundSchema = GitNamespaceId$inboundSchema;
    /** @deprecated use `GitNamespaceId$outboundSchema` instead. */
    export const outboundSchema = GitNamespaceId$outboundSchema;
    /** @deprecated use `GitNamespaceId$Outbound` instead. */
    export type Outbound = GitNamespaceId$Outbound;
}

/** @internal */
export const PreferredScopesAndGitNamespaces$inboundSchema: z.ZodType<
    PreferredScopesAndGitNamespaces,
    z.ZodTypeDef,
    unknown
> = z.object({
    scopeId: z.string(),
    gitNamespaceId: z.nullable(z.union([z.string(), z.number()])),
});

/** @internal */
export type PreferredScopesAndGitNamespaces$Outbound = {
    scopeId: string;
    gitNamespaceId: string | number | null;
};

/** @internal */
export const PreferredScopesAndGitNamespaces$outboundSchema: z.ZodType<
    PreferredScopesAndGitNamespaces$Outbound,
    z.ZodTypeDef,
    PreferredScopesAndGitNamespaces
> = z.object({
    scopeId: z.string(),
    gitNamespaceId: z.nullable(z.union([z.string(), z.number()])),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreferredScopesAndGitNamespaces$ {
    /** @deprecated use `PreferredScopesAndGitNamespaces$inboundSchema` instead. */
    export const inboundSchema = PreferredScopesAndGitNamespaces$inboundSchema;
    /** @deprecated use `PreferredScopesAndGitNamespaces$outboundSchema` instead. */
    export const outboundSchema = PreferredScopesAndGitNamespaces$outboundSchema;
    /** @deprecated use `PreferredScopesAndGitNamespaces$Outbound` instead. */
    export type Outbound = PreferredScopesAndGitNamespaces$Outbound;
}

/** @internal */
export const Dismissals$inboundSchema: z.ZodType<Dismissals, z.ZodTypeDef, unknown> = z.object({
    scopeId: z.string(),
    createdAt: z.number(),
});

/** @internal */
export type Dismissals$Outbound = {
    scopeId: string;
    createdAt: number;
};

/** @internal */
export const Dismissals$outboundSchema: z.ZodType<Dismissals$Outbound, z.ZodTypeDef, Dismissals> =
    z.object({
        scopeId: z.string(),
        createdAt: z.number(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Dismissals$ {
    /** @deprecated use `Dismissals$inboundSchema` instead. */
    export const inboundSchema = Dismissals$inboundSchema;
    /** @deprecated use `Dismissals$outboundSchema` instead. */
    export const outboundSchema = Dismissals$outboundSchema;
    /** @deprecated use `Dismissals$Outbound` instead. */
    export type Outbound = Dismissals$Outbound;
}

/** @internal */
export const DismissedToasts$inboundSchema: z.ZodType<DismissedToasts, z.ZodTypeDef, unknown> =
    z.object({
        name: z.string(),
        dismissals: z.array(z.lazy(() => Dismissals$inboundSchema)),
    });

/** @internal */
export type DismissedToasts$Outbound = {
    name: string;
    dismissals: Array<Dismissals$Outbound>;
};

/** @internal */
export const DismissedToasts$outboundSchema: z.ZodType<
    DismissedToasts$Outbound,
    z.ZodTypeDef,
    DismissedToasts
> = z.object({
    name: z.string(),
    dismissals: z.array(z.lazy(() => Dismissals$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DismissedToasts$ {
    /** @deprecated use `DismissedToasts$inboundSchema` instead. */
    export const inboundSchema = DismissedToasts$inboundSchema;
    /** @deprecated use `DismissedToasts$outboundSchema` instead. */
    export const outboundSchema = DismissedToasts$outboundSchema;
    /** @deprecated use `DismissedToasts$Outbound` instead. */
    export type Outbound = DismissedToasts$Outbound;
}

/** @internal */
export const Two$inboundSchema: z.ZodType<Two, z.ZodTypeDef, unknown> = z.object({
    spaceId: z.string(),
    scopeSlug: z.string(),
    scopeId: z.string(),
});

/** @internal */
export type Two$Outbound = {
    spaceId: string;
    scopeSlug: string;
    scopeId: string;
};

/** @internal */
export const Two$outboundSchema: z.ZodType<Two$Outbound, z.ZodTypeDef, Two> = z.object({
    spaceId: z.string(),
    scopeSlug: z.string(),
    scopeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Two$ {
    /** @deprecated use `Two$inboundSchema` instead. */
    export const inboundSchema = Two$inboundSchema;
    /** @deprecated use `Two$outboundSchema` instead. */
    export const outboundSchema = Two$outboundSchema;
    /** @deprecated use `Two$Outbound` instead. */
    export type Outbound = Two$Outbound;
}

/** @internal */
export const One$inboundSchema: z.ZodType<One, z.ZodTypeDef, unknown> = z.object({
    projectId: z.string(),
    scopeSlug: z.string(),
    scopeId: z.string(),
});

/** @internal */
export type One$Outbound = {
    projectId: string;
    scopeSlug: string;
    scopeId: string;
};

/** @internal */
export const One$outboundSchema: z.ZodType<One$Outbound, z.ZodTypeDef, One> = z.object({
    projectId: z.string(),
    scopeSlug: z.string(),
    scopeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace One$ {
    /** @deprecated use `One$inboundSchema` instead. */
    export const inboundSchema = One$inboundSchema;
    /** @deprecated use `One$outboundSchema` instead. */
    export const outboundSchema = One$outboundSchema;
    /** @deprecated use `One$Outbound` instead. */
    export type Outbound = One$Outbound;
}

/** @internal */
export const FavoriteProjectsAndSpaces$inboundSchema: z.ZodType<
    FavoriteProjectsAndSpaces,
    z.ZodTypeDef,
    unknown
> = z.union([z.lazy(() => One$inboundSchema), z.lazy(() => Two$inboundSchema)]);

/** @internal */
export type FavoriteProjectsAndSpaces$Outbound = One$Outbound | Two$Outbound;

/** @internal */
export const FavoriteProjectsAndSpaces$outboundSchema: z.ZodType<
    FavoriteProjectsAndSpaces$Outbound,
    z.ZodTypeDef,
    FavoriteProjectsAndSpaces
> = z.union([z.lazy(() => One$outboundSchema), z.lazy(() => Two$outboundSchema)]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FavoriteProjectsAndSpaces$ {
    /** @deprecated use `FavoriteProjectsAndSpaces$inboundSchema` instead. */
    export const inboundSchema = FavoriteProjectsAndSpaces$inboundSchema;
    /** @deprecated use `FavoriteProjectsAndSpaces$outboundSchema` instead. */
    export const outboundSchema = FavoriteProjectsAndSpaces$outboundSchema;
    /** @deprecated use `FavoriteProjectsAndSpaces$Outbound` instead. */
    export type Outbound = FavoriteProjectsAndSpaces$Outbound;
}

/** @internal */
export const RemoteCaching$inboundSchema: z.ZodType<RemoteCaching, z.ZodTypeDef, unknown> =
    z.object({
        enabled: z.boolean().optional(),
    });

/** @internal */
export type RemoteCaching$Outbound = {
    enabled?: boolean | undefined;
};

/** @internal */
export const RemoteCaching$outboundSchema: z.ZodType<
    RemoteCaching$Outbound,
    z.ZodTypeDef,
    RemoteCaching
> = z.object({
    enabled: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoteCaching$ {
    /** @deprecated use `RemoteCaching$inboundSchema` instead. */
    export const inboundSchema = RemoteCaching$inboundSchema;
    /** @deprecated use `RemoteCaching$outboundSchema` instead. */
    export const outboundSchema = RemoteCaching$outboundSchema;
    /** @deprecated use `RemoteCaching$Outbound` instead. */
    export type Outbound = RemoteCaching$Outbound;
}

/** @internal */
export const DataCache$inboundSchema: z.ZodType<DataCache, z.ZodTypeDef, unknown> = z.object({
    excessBillingEnabled: z.boolean().optional(),
});

/** @internal */
export type DataCache$Outbound = {
    excessBillingEnabled?: boolean | undefined;
};

/** @internal */
export const DataCache$outboundSchema: z.ZodType<DataCache$Outbound, z.ZodTypeDef, DataCache> =
    z.object({
        excessBillingEnabled: z.boolean().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataCache$ {
    /** @deprecated use `DataCache$inboundSchema` instead. */
    export const inboundSchema = DataCache$inboundSchema;
    /** @deprecated use `DataCache$outboundSchema` instead. */
    export const outboundSchema = DataCache$outboundSchema;
    /** @deprecated use `DataCache$Outbound` instead. */
    export type Outbound = DataCache$Outbound;
}

/** @internal */
export const WebAnalytics$inboundSchema: z.ZodType<WebAnalytics, z.ZodTypeDef, unknown> = z.object({
    blockedFrom: z.number().optional(),
    blockedUntil: z.number().optional(),
    isCurrentlyBlocked: z.boolean(),
});

/** @internal */
export type WebAnalytics$Outbound = {
    blockedFrom?: number | undefined;
    blockedUntil?: number | undefined;
    isCurrentlyBlocked: boolean;
};

/** @internal */
export const WebAnalytics$outboundSchema: z.ZodType<
    WebAnalytics$Outbound,
    z.ZodTypeDef,
    WebAnalytics
> = z.object({
    blockedFrom: z.number().optional(),
    blockedUntil: z.number().optional(),
    isCurrentlyBlocked: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebAnalytics$ {
    /** @deprecated use `WebAnalytics$inboundSchema` instead. */
    export const inboundSchema = WebAnalytics$inboundSchema;
    /** @deprecated use `WebAnalytics$outboundSchema` instead. */
    export const outboundSchema = WebAnalytics$outboundSchema;
    /** @deprecated use `WebAnalytics$Outbound` instead. */
    export type Outbound = WebAnalytics$Outbound;
}

/** @internal */
export const FeatureBlocks$inboundSchema: z.ZodType<FeatureBlocks, z.ZodTypeDef, unknown> =
    z.object({
        webAnalytics: z.lazy(() => WebAnalytics$inboundSchema).optional(),
    });

/** @internal */
export type FeatureBlocks$Outbound = {
    webAnalytics?: WebAnalytics$Outbound | undefined;
};

/** @internal */
export const FeatureBlocks$outboundSchema: z.ZodType<
    FeatureBlocks$Outbound,
    z.ZodTypeDef,
    FeatureBlocks
> = z.object({
    webAnalytics: z.lazy(() => WebAnalytics$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FeatureBlocks$ {
    /** @deprecated use `FeatureBlocks$inboundSchema` instead. */
    export const inboundSchema = FeatureBlocks$inboundSchema;
    /** @deprecated use `FeatureBlocks$outboundSchema` instead. */
    export const outboundSchema = FeatureBlocks$outboundSchema;
    /** @deprecated use `FeatureBlocks$Outbound` instead. */
    export type Outbound = FeatureBlocks$Outbound;
}

/** @internal */
export const NorthstarMigration$inboundSchema: z.ZodType<
    NorthstarMigration,
    z.ZodTypeDef,
    unknown
> = z.object({
    teamId: z.string(),
    projects: z.number(),
    stores: z.number(),
    integrationConfigurations: z.number(),
    integrationClients: z.number(),
    startTime: z.number(),
    endTime: z.number(),
});

/** @internal */
export type NorthstarMigration$Outbound = {
    teamId: string;
    projects: number;
    stores: number;
    integrationConfigurations: number;
    integrationClients: number;
    startTime: number;
    endTime: number;
};

/** @internal */
export const NorthstarMigration$outboundSchema: z.ZodType<
    NorthstarMigration$Outbound,
    z.ZodTypeDef,
    NorthstarMigration
> = z.object({
    teamId: z.string(),
    projects: z.number(),
    stores: z.number(),
    integrationConfigurations: z.number(),
    integrationClients: z.number(),
    startTime: z.number(),
    endTime: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NorthstarMigration$ {
    /** @deprecated use `NorthstarMigration$inboundSchema` instead. */
    export const inboundSchema = NorthstarMigration$inboundSchema;
    /** @deprecated use `NorthstarMigration$outboundSchema` instead. */
    export const outboundSchema = NorthstarMigration$outboundSchema;
    /** @deprecated use `NorthstarMigration$Outbound` instead. */
    export type Outbound = NorthstarMigration$Outbound;
}

/** @internal */
export const Version$inboundSchema: z.ZodNativeEnum<typeof Version> = z.nativeEnum(Version);

/** @internal */
export const Version$outboundSchema: z.ZodNativeEnum<typeof Version> = Version$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Version$ {
    /** @deprecated use `Version$inboundSchema` instead. */
    export const inboundSchema = Version$inboundSchema;
    /** @deprecated use `Version$outboundSchema` instead. */
    export const outboundSchema = Version$outboundSchema;
}

/** @internal */
export const AuthUser$inboundSchema: z.ZodType<AuthUser, z.ZodTypeDef, unknown> = z.object({
    createdAt: z.number(),
    softBlock: z.nullable(z.lazy(() => SoftBlock$inboundSchema)),
    billing: z.nullable(z.lazy(() => Billing$inboundSchema)),
    resourceConfig: z.lazy(() => ResourceConfig$inboundSchema),
    stagingPrefix: z.string(),
    activeDashboardViews: z.array(z.lazy(() => ActiveDashboardViews$inboundSchema)).optional(),
    importFlowGitNamespace: z.nullable(z.union([z.string(), z.number()])).optional(),
    importFlowGitNamespaceId: z.nullable(z.union([z.string(), z.number()])).optional(),
    importFlowGitProvider: ImportFlowGitProvider$inboundSchema.optional(),
    preferredScopesAndGitNamespaces: z
        .array(z.lazy(() => PreferredScopesAndGitNamespaces$inboundSchema))
        .optional(),
    dismissedToasts: z.array(z.lazy(() => DismissedToasts$inboundSchema)).optional(),
    favoriteProjectsAndSpaces: z
        .array(z.union([z.lazy(() => One$inboundSchema), z.lazy(() => Two$inboundSchema)]))
        .optional(),
    hasTrialAvailable: z.boolean(),
    remoteCaching: z.lazy(() => RemoteCaching$inboundSchema).optional(),
    dataCache: z.lazy(() => DataCache$inboundSchema).optional(),
    featureBlocks: z.lazy(() => FeatureBlocks$inboundSchema).optional(),
    northstarMigration: z.lazy(() => NorthstarMigration$inboundSchema).optional(),
    id: z.string(),
    email: z.string(),
    name: z.nullable(z.string()),
    username: z.string(),
    avatar: z.nullable(z.string()),
    defaultTeamId: z.nullable(z.string()),
    version: z.nullable(Version$inboundSchema),
});

/** @internal */
export type AuthUser$Outbound = {
    createdAt: number;
    softBlock: SoftBlock$Outbound | null;
    billing: Billing$Outbound | null;
    resourceConfig: ResourceConfig$Outbound;
    stagingPrefix: string;
    activeDashboardViews?: Array<ActiveDashboardViews$Outbound> | undefined;
    importFlowGitNamespace?: string | number | null | undefined;
    importFlowGitNamespaceId?: string | number | null | undefined;
    importFlowGitProvider?: string | undefined;
    preferredScopesAndGitNamespaces?: Array<PreferredScopesAndGitNamespaces$Outbound> | undefined;
    dismissedToasts?: Array<DismissedToasts$Outbound> | undefined;
    favoriteProjectsAndSpaces?: Array<One$Outbound | Two$Outbound> | undefined;
    hasTrialAvailable: boolean;
    remoteCaching?: RemoteCaching$Outbound | undefined;
    dataCache?: DataCache$Outbound | undefined;
    featureBlocks?: FeatureBlocks$Outbound | undefined;
    northstarMigration?: NorthstarMigration$Outbound | undefined;
    id: string;
    email: string;
    name: string | null;
    username: string;
    avatar: string | null;
    defaultTeamId: string | null;
    version: string | null;
};

/** @internal */
export const AuthUser$outboundSchema: z.ZodType<AuthUser$Outbound, z.ZodTypeDef, AuthUser> =
    z.object({
        createdAt: z.number(),
        softBlock: z.nullable(z.lazy(() => SoftBlock$outboundSchema)),
        billing: z.nullable(z.lazy(() => Billing$outboundSchema)),
        resourceConfig: z.lazy(() => ResourceConfig$outboundSchema),
        stagingPrefix: z.string(),
        activeDashboardViews: z.array(z.lazy(() => ActiveDashboardViews$outboundSchema)).optional(),
        importFlowGitNamespace: z.nullable(z.union([z.string(), z.number()])).optional(),
        importFlowGitNamespaceId: z.nullable(z.union([z.string(), z.number()])).optional(),
        importFlowGitProvider: ImportFlowGitProvider$outboundSchema.optional(),
        preferredScopesAndGitNamespaces: z
            .array(z.lazy(() => PreferredScopesAndGitNamespaces$outboundSchema))
            .optional(),
        dismissedToasts: z.array(z.lazy(() => DismissedToasts$outboundSchema)).optional(),
        favoriteProjectsAndSpaces: z
            .array(z.union([z.lazy(() => One$outboundSchema), z.lazy(() => Two$outboundSchema)]))
            .optional(),
        hasTrialAvailable: z.boolean(),
        remoteCaching: z.lazy(() => RemoteCaching$outboundSchema).optional(),
        dataCache: z.lazy(() => DataCache$outboundSchema).optional(),
        featureBlocks: z.lazy(() => FeatureBlocks$outboundSchema).optional(),
        northstarMigration: z.lazy(() => NorthstarMigration$outboundSchema).optional(),
        id: z.string(),
        email: z.string(),
        name: z.nullable(z.string()),
        username: z.string(),
        avatar: z.nullable(z.string()),
        defaultTeamId: z.nullable(z.string()),
        version: z.nullable(Version$outboundSchema),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthUser$ {
    /** @deprecated use `AuthUser$inboundSchema` instead. */
    export const inboundSchema = AuthUser$inboundSchema;
    /** @deprecated use `AuthUser$outboundSchema` instead. */
    export const outboundSchema = AuthUser$outboundSchema;
    /** @deprecated use `AuthUser$Outbound` instead. */
    export type Outbound = AuthUser$Outbound;
}
