/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum Reason {
    SubscriptionCanceled = "SUBSCRIPTION_CANCELED",
    SubscriptionExpired = "SUBSCRIPTION_EXPIRED",
    UnpaidInvoice = "UNPAID_INVOICE",
    EnterpriseTrialEnded = "ENTERPRISE_TRIAL_ENDED",
    FairUseLimitsExceeded = "FAIR_USE_LIMITS_EXCEEDED",
    BlockedForPlatformAbuse = "BLOCKED_FOR_PLATFORM_ABUSE",
}

export enum BlockedDueToOverageType {
    AnalyticsUsage = "analyticsUsage",
    Artifacts = "artifacts",
    Bandwidth = "bandwidth",
    BlobStores = "blobStores",
    BlobTotalAdvancedRequests = "blobTotalAdvancedRequests",
    BlobTotalAvgSizeInBytes = "blobTotalAvgSizeInBytes",
    BlobTotalGetResponseObjectSizeInBytes = "blobTotalGetResponseObjectSizeInBytes",
    BlobTotalSimpleRequests = "blobTotalSimpleRequests",
    BuildMinute = "buildMinute",
    DataCacheRead = "dataCacheRead",
    DataCacheRevalidation = "dataCacheRevalidation",
    DataCacheWrite = "dataCacheWrite",
    EdgeConfigRead = "edgeConfigRead",
    EdgeConfigWrite = "edgeConfigWrite",
    EdgeFunctionExecutionUnits = "edgeFunctionExecutionUnits",
    EdgeMiddlewareInvocations = "edgeMiddlewareInvocations",
    EdgeRequest = "edgeRequest",
    EdgeRequestAdditionalCpuDuration = "edgeRequestAdditionalCpuDuration",
    FastDataTransfer = "fastDataTransfer",
    FastOriginTransfer = "fastOriginTransfer",
    FunctionDuration = "functionDuration",
    FunctionInvocation = "functionInvocation",
    LogDrainsVolume = "logDrainsVolume",
    MonitoringMetric = "monitoringMetric",
    PostgresComputeTime = "postgresComputeTime",
    PostgresDataStorage = "postgresDataStorage",
    PostgresDataTransfer = "postgresDataTransfer",
    PostgresDatabase = "postgresDatabase",
    PostgresWrittenData = "postgresWrittenData",
    ServerlessFunctionExecution = "serverlessFunctionExecution",
    SourceImages = "sourceImages",
    StorageRedisTotalBandwidthInBytes = "storageRedisTotalBandwidthInBytes",
    StorageRedisTotalCommands = "storageRedisTotalCommands",
    StorageRedisTotalDailyAvgStorageInBytes = "storageRedisTotalDailyAvgStorageInBytes",
    StorageRedisTotalDatabases = "storageRedisTotalDatabases",
    WafOwaspExcessBytes = "wafOwaspExcessBytes",
    WafOwaspRequests = "wafOwaspRequests",
    WebAnalyticsEvent = "webAnalyticsEvent",
}

/**
 * When the User account has been "soft blocked", this property will contain the date when the restriction was enacted, and the identifier for why.
 */
export type SoftBlock = {
    blockedAt: number;
    reason: Reason;
    blockedDueToOverageType?: BlockedDueToOverageType | undefined;
};

export enum Currency {
    Usd = "usd",
    Eur = "eur",
}

export type Period = {
    start: number;
    end: number;
};

export type Contract = {
    start: number;
    end: number;
};

export enum Plan {
    Pro = "pro",
    Enterprise = "enterprise",
    Hobby = "hobby",
}

export enum Platform {
    Stripe = "stripe",
    StripeTestMode = "stripeTestMode",
}

export enum ProgramType {
    Startup = "startup",
    Agency = "agency",
}

export type Trial = {
    start: number;
    end: number;
};

export type Tax = {
    type: string;
    id: string;
};

export type Address = {
    line1?: string | undefined;
    line2?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    state?: string | undefined;
};

export enum AuthUserBillingInvoiceItemsConcurrentBuildsInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsConcurrentBuildsFrequency = {
    interval: AuthUserBillingInvoiceItemsConcurrentBuildsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type ConcurrentBuilds = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsConcurrentBuildsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserInterval {
    Month = "month",
}

export type AuthUserFrequency = {
    interval: AuthUserInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type AuthUserWebAnalytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInterval {
    Month = "month",
}

export type AuthUserBillingFrequency = {
    interval: AuthUserBillingInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Pro = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInvoiceItemsInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsFrequency = {
    interval: AuthUserBillingInvoiceItemsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Enterprise = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInvoiceItemsAnalyticsInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsAnalyticsFrequency = {
    interval: AuthUserBillingInvoiceItemsAnalyticsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Analytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsAnalyticsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInvoiceItemsMonitoringInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsMonitoringFrequency = {
    interval: AuthUserBillingInvoiceItemsMonitoringInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Monitoring = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsMonitoringFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInvoiceItemsPasswordProtectionInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsPasswordProtectionFrequency = {
    interval: AuthUserBillingInvoiceItemsPasswordProtectionInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type PasswordProtection = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsPasswordProtectionFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency = {
    interval: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type PreviewDeploymentSuffix = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInvoiceItemsSamlInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsSamlFrequency = {
    interval: AuthUserBillingInvoiceItemsSamlInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type AuthUserSaml = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsSamlFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum AuthUserBillingInvoiceItemsTeamSeatsInterval {
    Month = "month",
}

export type AuthUserBillingInvoiceItemsTeamSeatsFrequency = {
    interval: AuthUserBillingInvoiceItemsTeamSeatsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type TeamSeats = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: AuthUserBillingInvoiceItemsTeamSeatsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export type Matrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type AnalyticsUsage = {
    matrix?: Matrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type ArtifactsModel = {
    matrix?: AuthUserMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type Bandwidth = {
    matrix?: AuthUserBillingMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobStores = {
    matrix?: AuthUserBillingInvoiceItemsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalAdvancedRequests = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalAvgSizeInBytes = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalGetResponseObjectSizeInBytes = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BlobTotalSimpleRequests = {
    matrix?: AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsBuildMinuteMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type BuildMinute = {
    matrix?: AuthUserBillingInvoiceItemsBuildMinuteMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsDataCacheReadMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type DataCacheRead = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheReadMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type DataCacheRevalidation = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsDataCacheWriteMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type DataCacheWrite = {
    matrix?: AuthUserBillingInvoiceItemsDataCacheWriteMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeConfigReadMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeConfigRead = {
    matrix?: AuthUserBillingInvoiceItemsEdgeConfigReadMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeConfigWrite = {
    matrix?: AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeFunctionExecutionUnits = {
    matrix?: AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeMiddlewareInvocations = {
    matrix?: AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeRequestMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeRequest = {
    matrix?: AuthUserBillingInvoiceItemsEdgeRequestMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type EdgeRequestAdditionalCpuDuration = {
    matrix?: AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFastDataTransferMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FastDataTransfer = {
    matrix?: AuthUserBillingInvoiceItemsFastDataTransferMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFastOriginTransferMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FastOriginTransfer = {
    matrix?: AuthUserBillingInvoiceItemsFastOriginTransferMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFunctionDurationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FunctionDuration = {
    matrix?: AuthUserBillingInvoiceItemsFunctionDurationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsFunctionInvocationMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type FunctionInvocation = {
    matrix?: AuthUserBillingInvoiceItemsFunctionInvocationMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type LogDrainsVolume = {
    matrix?: AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsMonitoringMetricMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type MonitoringMetric = {
    matrix?: AuthUserBillingInvoiceItemsMonitoringMetricMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresComputeTime = {
    matrix?: AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresDataStorageMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresDataStorage = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDataStorageMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresDataTransferMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresDataTransfer = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDataTransferMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresDatabaseMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresDatabase = {
    matrix?: AuthUserBillingInvoiceItemsPostgresDatabaseMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type PostgresWrittenData = {
    matrix?: AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type ServerlessFunctionExecution = {
    matrix?: AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsSourceImagesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type SourceImages = {
    matrix?: AuthUserBillingInvoiceItemsSourceImagesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalBandwidthInBytes = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalCommands = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalDailyAvgStorageInBytes = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type StorageRedisTotalDatabases = {
    matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type WafOwaspExcessBytes = {
    matrix?: AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type WafOwaspRequests = {
    matrix?: AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: { [k: string]: string };
};

export type WebAnalyticsEvent = {
    matrix?: AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type InvoiceItems = {
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    concurrentBuilds?: ConcurrentBuilds | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    webAnalytics?: AuthUserWebAnalytics | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    pro?: Pro | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    enterprise?: Enterprise | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    analytics?: Analytics | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    monitoring?: Monitoring | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    passwordProtection?: PasswordProtection | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    previewDeploymentSuffix?: PreviewDeploymentSuffix | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    saml?: AuthUserSaml | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    teamSeats?: TeamSeats | undefined;
    analyticsUsage?: AnalyticsUsage | undefined;
    artifacts?: ArtifactsModel | undefined;
    bandwidth?: Bandwidth | undefined;
    blobStores?: BlobStores | undefined;
    blobTotalAdvancedRequests?: BlobTotalAdvancedRequests | undefined;
    blobTotalAvgSizeInBytes?: BlobTotalAvgSizeInBytes | undefined;
    blobTotalGetResponseObjectSizeInBytes?: BlobTotalGetResponseObjectSizeInBytes | undefined;
    blobTotalSimpleRequests?: BlobTotalSimpleRequests | undefined;
    buildMinute?: BuildMinute | undefined;
    dataCacheRead?: DataCacheRead | undefined;
    dataCacheRevalidation?: DataCacheRevalidation | undefined;
    dataCacheWrite?: DataCacheWrite | undefined;
    edgeConfigRead?: EdgeConfigRead | undefined;
    edgeConfigWrite?: EdgeConfigWrite | undefined;
    edgeFunctionExecutionUnits?: EdgeFunctionExecutionUnits | undefined;
    edgeMiddlewareInvocations?: EdgeMiddlewareInvocations | undefined;
    edgeRequest?: EdgeRequest | undefined;
    edgeRequestAdditionalCpuDuration?: EdgeRequestAdditionalCpuDuration | undefined;
    fastDataTransfer?: FastDataTransfer | undefined;
    fastOriginTransfer?: FastOriginTransfer | undefined;
    functionDuration?: FunctionDuration | undefined;
    functionInvocation?: FunctionInvocation | undefined;
    logDrainsVolume?: LogDrainsVolume | undefined;
    monitoringMetric?: MonitoringMetric | undefined;
    postgresComputeTime?: PostgresComputeTime | undefined;
    postgresDataStorage?: PostgresDataStorage | undefined;
    postgresDataTransfer?: PostgresDataTransfer | undefined;
    postgresDatabase?: PostgresDatabase | undefined;
    postgresWrittenData?: PostgresWrittenData | undefined;
    serverlessFunctionExecution?: ServerlessFunctionExecution | undefined;
    sourceImages?: SourceImages | undefined;
    storageRedisTotalBandwidthInBytes?: StorageRedisTotalBandwidthInBytes | undefined;
    storageRedisTotalCommands?: StorageRedisTotalCommands | undefined;
    storageRedisTotalDailyAvgStorageInBytes?: StorageRedisTotalDailyAvgStorageInBytes | undefined;
    storageRedisTotalDatabases?: StorageRedisTotalDatabases | undefined;
    wafOwaspExcessBytes?: WafOwaspExcessBytes | undefined;
    wafOwaspRequests?: WafOwaspRequests | undefined;
    webAnalyticsEvent?: WebAnalyticsEvent | undefined;
};

export type InvoiceSettings = {
    footer?: string | undefined;
};

export type AuthUserTrial = {
    start: number;
    end: number;
};

export type AuthUserPeriod = {
    start: number;
    end: number;
};

export enum Interval {
    Month = "month",
    Day = "day",
    Week = "week",
    Year = "year",
}

export type Frequency = {
    interval: Interval;
    intervalCount: number;
};

export enum Duration {
    Forever = "forever",
    Repeating = "repeating",
    Once = "once",
}

export type Coupon = {
    id: string;
    name: string | null;
    amountOff: number | null;
    percentageOff: number | null;
    durationInMonths: number | null;
    duration: Duration;
};

export type Discount = {
    id: string;
    coupon: Coupon;
};

export type Items = {
    id: string;
    priceId: string;
    productId: string;
    amount: number;
    quantity: number;
};

export type Subscriptions = {
    id: string;
    trial: AuthUserTrial | null;
    period: AuthUserPeriod;
    frequency: Frequency;
    discount: Discount | null;
    items: Array<Items>;
};

export type Controls = {
    analyticsSampleRateInPercent?: number | null | undefined;
    analyticsSpendLimitInDollars?: number | null | undefined;
};

export enum Status {
    Active = "active",
    Trialing = "trialing",
    Overdue = "overdue",
    Expired = "expired",
    Canceled = "canceled",
}

export enum PricingExperiment {
    August2022 = "august-2022",
}

/**
 * An object containing billing infomation associated with the User account.
 */
export type Billing = {
    currency?: Currency | undefined;
    cancelation?: number | null | undefined;
    period: Period | null;
    contract?: Contract | null | undefined;
    plan: Plan;
    planIteration?: string | undefined;
    platform?: Platform | undefined;
    orbCustomerId?: string | undefined;
    syncedAt?: number | undefined;
    programType?: ProgramType | undefined;
    trial?: Trial | null | undefined;
    email?: string | null | undefined;
    tax?: Tax | null | undefined;
    language?: string | null | undefined;
    address?: Address | null | undefined;
    name?: string | null | undefined;
    invoiceItems?: InvoiceItems | null | undefined;
    invoiceSettings?: InvoiceSettings | undefined;
    subscriptions?: Array<Subscriptions> | null | undefined;
    controls?: Controls | null | undefined;
    purchaseOrder?: string | null | undefined;
    status?: Status | undefined;
    pricingExperiment?: PricingExperiment | undefined;
    orbMigrationScheduledAt?: number | null | undefined;
};

/**
 * An object containing infomation related to the amount of platform resources may be allocated to the User account.
 */
export type ResourceConfig = {
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    blobStores?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    nodeType?: string | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    concurrentBuilds?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    awsAccountType?: string | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    awsAccountIds?: Array<string> | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cfZoneName?: string | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeConfigs?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeConfigSize?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeFunctionMaxSizeBytes?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    edgeFunctionExecutionTimeoutMs?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    serverlessFunctionDefaultMaxExecutionTime?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    kvDatabases?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    postgresDatabases?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    integrationStores?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cronJobs?: number | undefined;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    cronJobsPerProject?: number | undefined;
};

export enum ViewPreference {
    List = "list",
    Cards = "cards",
}

export enum FavoritesViewPreference {
    Open = "open",
    Closed = "closed",
}

export enum RecentsViewPreference {
    Open = "open",
    Closed = "closed",
}

/**
 * set of dashboard view preferences (cards or list) per scopeId
 */
export type ActiveDashboardViews = {
    scopeId: string;
    viewPreference?: ViewPreference | undefined;
    favoritesViewPreference?: FavoritesViewPreference | undefined;
    recentsViewPreference?: RecentsViewPreference | undefined;
};

export type ImportFlowGitNamespace = string | number;

export type ImportFlowGitNamespaceId = string | number;

export enum ImportFlowGitProvider {
    Github = "github",
    Gitlab = "gitlab",
    Bitbucket = "bitbucket",
}

export type GitNamespaceId = string | number;

export type PreferredScopesAndGitNamespaces = {
    scopeId: string;
    gitNamespaceId: string | number | null;
};

export type Dismissals = {
    scopeId: string;
    createdAt: number;
};

/**
 * A record of when, under a certain scopeId, a toast was dismissed
 */
export type DismissedToasts = {
    name: string;
    dismissals: Array<Dismissals>;
};

/**
 * A list of projects and spaces across teams that a user has marked as a favorite.
 */
export type FavoriteProjectsAndSpaces2 = {
    spaceId: string;
    scopeSlug: string;
    scopeId: string;
};

/**
 * A list of projects and spaces across teams that a user has marked as a favorite.
 */
export type FavoriteProjectsAndSpaces1 = {
    projectId: string;
    scopeSlug: string;
    scopeId: string;
};

export type FavoriteProjectsAndSpaces = FavoriteProjectsAndSpaces1 | FavoriteProjectsAndSpaces2;

/**
 * remote caching settings
 */
export type RemoteCaching = {
    enabled?: boolean | undefined;
};

/**
 * data cache settings
 */
export type DataCache = {
    excessBillingEnabled?: boolean | undefined;
};

export type WebAnalytics = {
    blockedFrom?: number | undefined;
    blockedUntil?: number | undefined;
    isCurrentlyBlocked: boolean;
};

/**
 * Feature blocks for the user
 */
export type FeatureBlocks = {
    webAnalytics?: WebAnalytics | undefined;
};

/**
 * - `will-migrate`: Show dashboard toast saying "your account will be migrated soon" - `migrating`: Show dashboard toast saying "your account is currently migrating to `teamId`" - `completed`: Show dashboard toast saying "your account has been migrated to `teamId`" - `failed`: Show dashboard toast saying "your account migration has failed `teamId`"
 */
export enum AuthUserStatus {
    Migrating = "migrating",
    Completed = "completed",
    Failed = "failed",
    WillMigrate = "will-migrate",
}

export type Migration = {
    teamId?: string | undefined;
    /**
     * - `will-migrate`: Show dashboard toast saying "your account will be migrated soon" - `migrating`: Show dashboard toast saying "your account is currently migrating to `teamId`" - `completed`: Show dashboard toast saying "your account has been migrated to `teamId`" - `failed`: Show dashboard toast saying "your account migration has failed `teamId`"
     */
    status: AuthUserStatus;
};

/**
 * Northstar migration specific data
 */
export type Northstar = {
    migration?: Migration | undefined;
};

export type NorthstarMigration = {
    /**
     * The ID of the team we created for this user.
     */
    teamId: string;
    /**
     * The number of projects migrated for this user.
     */
    projects: number;
    /**
     * The number of stores migrated for this user.
     */
    stores: number;
    /**
     * The number of integration configurations migrated for this user.
     */
    integrationConfigurations: number;
    /**
     * The number of integration clients migrated for this user.
     */
    integrationClients: number;
    /**
     * The migration start time timestamp for this user.
     */
    startTime: number;
    /**
     * The migration end time timestamp for this user.
     */
    endTime: number;
};

/**
 * The user's version. Will either be unset or `northstar`.
 */
export enum Version {
    Northstar = "northstar",
}

/**
 * Data for the currently authenticated User.
 */
export type AuthUser = {
    /**
     * UNIX timestamp (in milliseconds) when the User account was created.
     */
    createdAt: number;
    /**
     * When the User account has been "soft blocked", this property will contain the date when the restriction was enacted, and the identifier for why.
     */
    softBlock: SoftBlock | null;
    /**
     * An object containing billing infomation associated with the User account.
     */
    billing: Billing | null;
    /**
     * An object containing infomation related to the amount of platform resources may be allocated to the User account.
     */
    resourceConfig: ResourceConfig;
    /**
     * Prefix that will be used in the URL of "Preview" deployments created by the User account.
     */
    stagingPrefix: string;
    /**
     * set of dashboard view preferences (cards or list) per scopeId
     */
    activeDashboardViews?: Array<ActiveDashboardViews> | undefined;
    importFlowGitNamespace?: string | number | null | undefined;
    importFlowGitNamespaceId?: string | number | null | undefined;
    importFlowGitProvider?: ImportFlowGitProvider | undefined;
    preferredScopesAndGitNamespaces?: Array<PreferredScopesAndGitNamespaces> | undefined;
    /**
     * A record of when, under a certain scopeId, a toast was dismissed
     */
    dismissedToasts?: Array<DismissedToasts> | undefined;
    /**
     * A list of projects and spaces across teams that a user has marked as a favorite.
     */
    favoriteProjectsAndSpaces?:
        | Array<FavoriteProjectsAndSpaces1 | FavoriteProjectsAndSpaces2>
        | undefined;
    /**
     * Whether the user has a trial available for a paid plan subscription.
     */
    hasTrialAvailable: boolean;
    /**
     * remote caching settings
     */
    remoteCaching?: RemoteCaching | undefined;
    /**
     * data cache settings
     */
    dataCache?: DataCache | undefined;
    /**
     * Feature blocks for the user
     */
    featureBlocks?: FeatureBlocks | undefined;
    /**
     * Northstar migration specific data
     */
    northstar?: Northstar | undefined;
    northstarMigration?: NorthstarMigration | undefined;
    /**
     * The User's unique identifier.
     */
    id: string;
    /**
     * Email address associated with the User account.
     */
    email: string;
    /**
     * Name associated with the User account, or `null` if none has been provided.
     */
    name: string | null;
    /**
     * Unique username associated with the User account.
     */
    username: string;
    /**
     * SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.
     */
    avatar: string | null;
    /**
     * The user's default team. Only applies if the user's `version` is `'northstar'`.
     */
    defaultTeamId: string | null;
    /**
     * The user's version. Will either be unset or `northstar`.
     */
    version: Version | null;
};

/** @internal */
export namespace Reason$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Reason> = z.nativeEnum(Reason);
    export const outboundSchema: z.ZodNativeEnum<typeof Reason> = inboundSchema;
}

/** @internal */
export namespace BlockedDueToOverageType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof BlockedDueToOverageType> =
        z.nativeEnum(BlockedDueToOverageType);
    export const outboundSchema: z.ZodNativeEnum<typeof BlockedDueToOverageType> = inboundSchema;
}

/** @internal */
export namespace SoftBlock$ {
    export const inboundSchema: z.ZodType<SoftBlock, z.ZodTypeDef, unknown> = z.object({
        blockedAt: z.number(),
        reason: Reason$.inboundSchema,
        blockedDueToOverageType: BlockedDueToOverageType$.inboundSchema.optional(),
    });

    export type Outbound = {
        blockedAt: number;
        reason: string;
        blockedDueToOverageType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SoftBlock> = z.object({
        blockedAt: z.number(),
        reason: Reason$.outboundSchema,
        blockedDueToOverageType: BlockedDueToOverageType$.outboundSchema.optional(),
    });
}

/** @internal */
export namespace Currency$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Currency> = z.nativeEnum(Currency);
    export const outboundSchema: z.ZodNativeEnum<typeof Currency> = inboundSchema;
}

/** @internal */
export namespace Period$ {
    export const inboundSchema: z.ZodType<Period, z.ZodTypeDef, unknown> = z.object({
        start: z.number(),
        end: z.number(),
    });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Period> = z.object({
        start: z.number(),
        end: z.number(),
    });
}

/** @internal */
export namespace Contract$ {
    export const inboundSchema: z.ZodType<Contract, z.ZodTypeDef, unknown> = z.object({
        start: z.number(),
        end: z.number(),
    });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Contract> = z.object({
        start: z.number(),
        end: z.number(),
    });
}

/** @internal */
export namespace Plan$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Plan> = z.nativeEnum(Plan);
    export const outboundSchema: z.ZodNativeEnum<typeof Plan> = inboundSchema;
}

/** @internal */
export namespace Platform$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Platform> = z.nativeEnum(Platform);
    export const outboundSchema: z.ZodNativeEnum<typeof Platform> = inboundSchema;
}

/** @internal */
export namespace ProgramType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof ProgramType> = z.nativeEnum(ProgramType);
    export const outboundSchema: z.ZodNativeEnum<typeof ProgramType> = inboundSchema;
}

/** @internal */
export namespace Trial$ {
    export const inboundSchema: z.ZodType<Trial, z.ZodTypeDef, unknown> = z.object({
        start: z.number(),
        end: z.number(),
    });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Trial> = z.object({
        start: z.number(),
        end: z.number(),
    });
}

/** @internal */
export namespace Tax$ {
    export const inboundSchema: z.ZodType<Tax, z.ZodTypeDef, unknown> = z.object({
        type: z.string(),
        id: z.string(),
    });

    export type Outbound = {
        type: string;
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Tax> = z.object({
        type: z.string(),
        id: z.string(),
    });
}

/** @internal */
export namespace Address$ {
    export const inboundSchema: z.ZodType<Address, z.ZodTypeDef, unknown> = z.object({
        line1: z.string().optional(),
        line2: z.string().optional(),
        postalCode: z.string().optional(),
        city: z.string().optional(),
        country: z.string().optional(),
        state: z.string().optional(),
    });

    export type Outbound = {
        line1?: string | undefined;
        line2?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        country?: string | undefined;
        state?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Address> = z.object({
        line1: z.string().optional(),
        line2: z.string().optional(),
        postalCode: z.string().optional(),
        city: z.string().optional(),
        country: z.string().optional(),
        state: z.string().optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsConcurrentBuildsInterval$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsConcurrentBuildsInterval
    > = z.nativeEnum(AuthUserBillingInvoiceItemsConcurrentBuildsInterval);
    export const outboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsConcurrentBuildsInterval
    > = inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsConcurrentBuildsFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsConcurrentBuildsInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsConcurrentBuildsFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsConcurrentBuildsInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace ConcurrentBuilds$ {
    export const inboundSchema: z.ZodType<ConcurrentBuilds, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$.inboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConcurrentBuilds> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsConcurrentBuildsFrequency$.outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace AuthUserInterval$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AuthUserInterval> =
        z.nativeEnum(AuthUserInterval);
    export const outboundSchema: z.ZodNativeEnum<typeof AuthUserInterval> = inboundSchema;
}

/** @internal */
export namespace AuthUserFrequency$ {
    export const inboundSchema: z.ZodType<AuthUserFrequency, z.ZodTypeDef, unknown> = z.object({
        interval: AuthUserInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserFrequency> = z.object({
        interval: AuthUserInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace AuthUserWebAnalytics$ {
    export const inboundSchema: z.ZodType<AuthUserWebAnalytics, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z.lazy(() => AuthUserFrequency$.inboundSchema).optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserWebAnalytics> = z.object(
        {
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => AuthUserFrequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        }
    );
}

/** @internal */
export namespace AuthUserBillingInterval$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AuthUserBillingInterval> =
        z.nativeEnum(AuthUserBillingInterval);
    export const outboundSchema: z.ZodNativeEnum<typeof AuthUserBillingInterval> = inboundSchema;
}

/** @internal */
export namespace AuthUserBillingFrequency$ {
    export const inboundSchema: z.ZodType<AuthUserBillingFrequency, z.ZodTypeDef, unknown> =
        z.object({
            interval: AuthUserBillingInterval$.inboundSchema,
            intervalCount: z.number(),
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserBillingFrequency> =
        z.object({
            interval: AuthUserBillingInterval$.outboundSchema,
            intervalCount: z.number(),
        });
}

/** @internal */
export namespace Pro$ {
    export const inboundSchema: z.ZodType<Pro, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z.lazy(() => AuthUserBillingFrequency$.inboundSchema).optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Pro> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z.lazy(() => AuthUserBillingFrequency$.outboundSchema).optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsInterval$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AuthUserBillingInvoiceItemsInterval> =
        z.nativeEnum(AuthUserBillingInvoiceItemsInterval);
    export const outboundSchema: z.ZodNativeEnum<typeof AuthUserBillingInvoiceItemsInterval> =
        inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace Enterprise$ {
    export const inboundSchema: z.ZodType<Enterprise, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z.lazy(() => AuthUserBillingInvoiceItemsFrequency$.inboundSchema).optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingInvoiceItemsFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Enterprise> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z.lazy(() => AuthUserBillingInvoiceItemsFrequency$.outboundSchema).optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsAnalyticsInterval$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsAnalyticsInterval
    > = z.nativeEnum(AuthUserBillingInvoiceItemsAnalyticsInterval);
    export const outboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsAnalyticsInterval
    > = inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsAnalyticsFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsAnalyticsFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsAnalyticsInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsAnalyticsFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsAnalyticsInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace Analytics$ {
    export const inboundSchema: z.ZodType<Analytics, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsAnalyticsFrequency$.inboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingInvoiceItemsAnalyticsFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Analytics> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsAnalyticsFrequency$.outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsMonitoringInterval$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsMonitoringInterval
    > = z.nativeEnum(AuthUserBillingInvoiceItemsMonitoringInterval);
    export const outboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsMonitoringInterval
    > = inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsMonitoringFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsMonitoringFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsMonitoringInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsMonitoringFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsMonitoringInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace Monitoring$ {
    export const inboundSchema: z.ZodType<Monitoring, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsMonitoringFrequency$.inboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingInvoiceItemsMonitoringFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Monitoring> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsMonitoringFrequency$.outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPasswordProtectionInterval$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsPasswordProtectionInterval
    > = z.nativeEnum(AuthUserBillingInvoiceItemsPasswordProtectionInterval);
    export const outboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsPasswordProtectionInterval
    > = inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPasswordProtectionFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsPasswordProtectionFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsPasswordProtectionInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsPasswordProtectionFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsPasswordProtectionInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace PasswordProtection$ {
    export const inboundSchema: z.ZodType<PasswordProtection, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsPasswordProtectionFrequency$.inboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingInvoiceItemsPasswordProtectionFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PasswordProtection> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsPasswordProtectionFrequency$.outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval
    > = z.nativeEnum(AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval);
    export const outboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval
    > = inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsPreviewDeploymentSuffixInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace PreviewDeploymentSuffix$ {
    export const inboundSchema: z.ZodType<PreviewDeploymentSuffix, z.ZodTypeDef, unknown> =
        z.object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PreviewDeploymentSuffix> =
        z.object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        AuthUserBillingInvoiceItemsPreviewDeploymentSuffixFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsSamlInterval$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AuthUserBillingInvoiceItemsSamlInterval> =
        z.nativeEnum(AuthUserBillingInvoiceItemsSamlInterval);
    export const outboundSchema: z.ZodNativeEnum<typeof AuthUserBillingInvoiceItemsSamlInterval> =
        inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsSamlFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsSamlFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsSamlInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsSamlFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsSamlInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace AuthUserSaml$ {
    export const inboundSchema: z.ZodType<AuthUserSaml, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z.lazy(() => AuthUserBillingInvoiceItemsSamlFrequency$.inboundSchema).optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingInvoiceItemsSamlFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserSaml> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsSamlFrequency$.outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsTeamSeatsInterval$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsTeamSeatsInterval
    > = z.nativeEnum(AuthUserBillingInvoiceItemsTeamSeatsInterval);
    export const outboundSchema: z.ZodNativeEnum<
        typeof AuthUserBillingInvoiceItemsTeamSeatsInterval
    > = inboundSchema;
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsTeamSeatsFrequency$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsTeamSeatsFrequency,
        z.ZodTypeDef,
        unknown
    > = z.object({
        interval: AuthUserBillingInvoiceItemsTeamSeatsInterval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsTeamSeatsFrequency
    > = z.object({
        interval: AuthUserBillingInvoiceItemsTeamSeatsInterval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace TeamSeats$ {
    export const inboundSchema: z.ZodType<TeamSeats, z.ZodTypeDef, unknown> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsTeamSeatsFrequency$.inboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: AuthUserBillingInvoiceItemsTeamSeatsFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TeamSeats> = z.object({
        tier: z.number().optional(),
        price: z.number(),
        quantity: z.number(),
        highestQuantity: z.number().optional(),
        name: z.string().optional(),
        hidden: z.boolean(),
        createdAt: z.number().optional(),
        disabledAt: z.nullable(z.number()).optional(),
        frequency: z
            .lazy(() => AuthUserBillingInvoiceItemsTeamSeatsFrequency$.outboundSchema)
            .optional(),
        maxQuantity: z.number().optional(),
    });
}

/** @internal */
export namespace Matrix$ {
    export const inboundSchema: z.ZodType<Matrix, z.ZodTypeDef, unknown> = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Matrix> = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace AnalyticsUsage$ {
    export const inboundSchema: z.ZodType<AnalyticsUsage, z.ZodTypeDef, unknown> = z.object({
        matrix: z.lazy(() => Matrix$.inboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: Matrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AnalyticsUsage> = z.object({
        matrix: z.lazy(() => Matrix$.outboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserMatrix$ {
    export const inboundSchema: z.ZodType<AuthUserMatrix, z.ZodTypeDef, unknown> = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserMatrix> = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace ArtifactsModel$ {
    export const inboundSchema: z.ZodType<ArtifactsModel, z.ZodTypeDef, unknown> = z.object({
        matrix: z.lazy(() => AuthUserMatrix$.inboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ArtifactsModel> = z.object({
        matrix: z.lazy(() => AuthUserMatrix$.outboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingMatrix$ {
    export const inboundSchema: z.ZodType<AuthUserBillingMatrix, z.ZodTypeDef, unknown> = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserBillingMatrix> =
        z.object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        });
}

/** @internal */
export namespace Bandwidth$ {
    export const inboundSchema: z.ZodType<Bandwidth, z.ZodTypeDef, unknown> = z.object({
        matrix: z.lazy(() => AuthUserBillingMatrix$.inboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Bandwidth> = z.object({
        matrix: z.lazy(() => AuthUserBillingMatrix$.outboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace BlobStores$ {
    export const inboundSchema: z.ZodType<BlobStores, z.ZodTypeDef, unknown> = z.object({
        matrix: z.lazy(() => AuthUserBillingInvoiceItemsMatrix$.inboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobStores> = z.object({
        matrix: z.lazy(() => AuthUserBillingInvoiceItemsMatrix$.outboundSchema).optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace BlobTotalAdvancedRequests$ {
    export const inboundSchema: z.ZodType<BlobTotalAdvancedRequests, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobTotalAdvancedRequests> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsBlobTotalAdvancedRequestsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace BlobTotalAvgSizeInBytes$ {
    export const inboundSchema: z.ZodType<BlobTotalAvgSizeInBytes, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(() => AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$.inboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobTotalAvgSizeInBytes> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsBlobTotalAvgSizeInBytesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace BlobTotalGetResponseObjectSizeInBytes$ {
    export const inboundSchema: z.ZodType<
        BlobTotalGetResponseObjectSizeInBytes,
        z.ZodTypeDef,
        unknown
    > = z.object({
        matrix: z
            .lazy(
                () =>
                    AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$.inboundSchema
            )
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?:
            | AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        BlobTotalGetResponseObjectSizeInBytes
    > = z.object({
        matrix: z
            .lazy(
                () =>
                    AuthUserBillingInvoiceItemsBlobTotalGetResponseObjectSizeInBytesMatrix$.outboundSchema
            )
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace BlobTotalSimpleRequests$ {
    export const inboundSchema: z.ZodType<BlobTotalSimpleRequests, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(() => AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$.inboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobTotalSimpleRequests> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsBlobTotalSimpleRequestsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsBuildMinuteMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsBuildMinuteMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsBuildMinuteMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace BuildMinute$ {
    export const inboundSchema: z.ZodType<BuildMinute, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsBuildMinuteMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsBuildMinuteMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BuildMinute> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsBuildMinuteMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsDataCacheReadMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsDataCacheReadMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsDataCacheReadMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace DataCacheRead$ {
    export const inboundSchema: z.ZodType<DataCacheRead, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsDataCacheReadMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsDataCacheReadMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataCacheRead> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsDataCacheReadMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace DataCacheRevalidation$ {
    export const inboundSchema: z.ZodType<DataCacheRevalidation, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataCacheRevalidation> =
        z.object({
            matrix: z
                .lazy(() => AuthUserBillingInvoiceItemsDataCacheRevalidationMatrix$.outboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsDataCacheWriteMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsDataCacheWriteMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsDataCacheWriteMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace DataCacheWrite$ {
    export const inboundSchema: z.ZodType<DataCacheWrite, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsDataCacheWriteMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsDataCacheWriteMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataCacheWrite> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsDataCacheWriteMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsEdgeConfigReadMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsEdgeConfigReadMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace EdgeConfigRead$ {
    export const inboundSchema: z.ZodType<EdgeConfigRead, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeConfigRead> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeConfigReadMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace EdgeConfigWrite$ {
    export const inboundSchema: z.ZodType<EdgeConfigWrite, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeConfigWrite> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeConfigWriteMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace EdgeFunctionExecutionUnits$ {
    export const inboundSchema: z.ZodType<EdgeFunctionExecutionUnits, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeFunctionExecutionUnits> =
        z.object({
            matrix: z
                .lazy(
                    () =>
                        AuthUserBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace EdgeMiddlewareInvocations$ {
    export const inboundSchema: z.ZodType<EdgeMiddlewareInvocations, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeMiddlewareInvocations> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsEdgeRequestMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsEdgeRequestMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsEdgeRequestMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace EdgeRequest$ {
    export const inboundSchema: z.ZodType<EdgeRequest, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeRequestMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsEdgeRequestMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeRequest> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsEdgeRequestMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace EdgeRequestAdditionalCpuDuration$ {
    export const inboundSchema: z.ZodType<EdgeRequestAdditionalCpuDuration, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(
                    () =>
                        AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?:
            | AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        EdgeRequestAdditionalCpuDuration
    > = z.object({
        matrix: z
            .lazy(
                () =>
                    AuthUserBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.outboundSchema
            )
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsFastDataTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsFastDataTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsFastDataTransferMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace FastDataTransfer$ {
    export const inboundSchema: z.ZodType<FastDataTransfer, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFastDataTransferMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsFastDataTransferMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FastDataTransfer> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFastDataTransferMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsFastOriginTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsFastOriginTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsFastOriginTransferMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace FastOriginTransfer$ {
    export const inboundSchema: z.ZodType<FastOriginTransfer, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFastOriginTransferMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsFastOriginTransferMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FastOriginTransfer> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFastOriginTransferMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsFunctionDurationMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsFunctionDurationMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsFunctionDurationMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace FunctionDuration$ {
    export const inboundSchema: z.ZodType<FunctionDuration, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFunctionDurationMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsFunctionDurationMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FunctionDuration> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFunctionDurationMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsFunctionInvocationMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsFunctionInvocationMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsFunctionInvocationMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace FunctionInvocation$ {
    export const inboundSchema: z.ZodType<FunctionInvocation, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFunctionInvocationMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsFunctionInvocationMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FunctionInvocation> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsFunctionInvocationMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace LogDrainsVolume$ {
    export const inboundSchema: z.ZodType<LogDrainsVolume, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LogDrainsVolume> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsLogDrainsVolumeMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsMonitoringMetricMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsMonitoringMetricMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsMonitoringMetricMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace MonitoringMetric$ {
    export const inboundSchema: z.ZodType<MonitoringMetric, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsMonitoringMetricMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsMonitoringMetricMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MonitoringMetric> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsMonitoringMetricMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace PostgresComputeTime$ {
    export const inboundSchema: z.ZodType<PostgresComputeTime, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresComputeTime> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresComputeTimeMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsPostgresDataStorageMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsPostgresDataStorageMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace PostgresDataStorage$ {
    export const inboundSchema: z.ZodType<PostgresDataStorage, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresDataStorage> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresDataStorageMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsPostgresDataTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsPostgresDataTransferMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace PostgresDataTransfer$ {
    export const inboundSchema: z.ZodType<PostgresDataTransfer, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresDataTransfer> = z.object(
        {
            matrix: z
                .lazy(() => AuthUserBillingInvoiceItemsPostgresDataTransferMatrix$.outboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        }
    );
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsPostgresDatabaseMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsPostgresDatabaseMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace PostgresDatabase$ {
    export const inboundSchema: z.ZodType<PostgresDatabase, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresDatabase> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresDatabaseMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace PostgresWrittenData$ {
    export const inboundSchema: z.ZodType<PostgresWrittenData, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresWrittenData> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsPostgresWrittenDataMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace ServerlessFunctionExecution$ {
    export const inboundSchema: z.ZodType<ServerlessFunctionExecution, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(
                    () =>
                        AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ServerlessFunctionExecution> =
        z.object({
            matrix: z
                .lazy(
                    () =>
                        AuthUserBillingInvoiceItemsServerlessFunctionExecutionMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsSourceImagesMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsSourceImagesMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsSourceImagesMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace SourceImages$ {
    export const inboundSchema: z.ZodType<SourceImages, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsSourceImagesMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsSourceImagesMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SourceImages> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsSourceImagesMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace StorageRedisTotalBandwidthInBytes$ {
    export const inboundSchema: z.ZodType<
        StorageRedisTotalBandwidthInBytes,
        z.ZodTypeDef,
        unknown
    > = z.object({
        matrix: z
            .lazy(
                () =>
                    AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.inboundSchema
            )
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?:
            | AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        StorageRedisTotalBandwidthInBytes
    > = z.object({
        matrix: z
            .lazy(
                () =>
                    AuthUserBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.outboundSchema
            )
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace StorageRedisTotalCommands$ {
    export const inboundSchema: z.ZodType<StorageRedisTotalCommands, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StorageRedisTotalCommands> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace StorageRedisTotalDailyAvgStorageInBytes$ {
    export const inboundSchema: z.ZodType<
        StorageRedisTotalDailyAvgStorageInBytes,
        z.ZodTypeDef,
        unknown
    > = z.object({
        matrix: z
            .lazy(
                () =>
                    AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.inboundSchema
            )
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?:
            | AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        StorageRedisTotalDailyAvgStorageInBytes
    > = z.object({
        matrix: z
            .lazy(
                () =>
                    AuthUserBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.outboundSchema
            )
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace StorageRedisTotalDatabases$ {
    export const inboundSchema: z.ZodType<StorageRedisTotalDatabases, z.ZodTypeDef, unknown> =
        z.object({
            matrix: z
                .lazy(
                    () => AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StorageRedisTotalDatabases> =
        z.object({
            matrix: z
                .lazy(
                    () =>
                        AuthUserBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace WafOwaspExcessBytes$ {
    export const inboundSchema: z.ZodType<WafOwaspExcessBytes, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WafOwaspExcessBytes> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWafOwaspExcessBytesMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace WafOwaspRequests$ {
    export const inboundSchema: z.ZodType<WafOwaspRequests, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WafOwaspRequests> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWafOwaspRequestsMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$ {
    export const inboundSchema: z.ZodType<
        AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix,
        z.ZodTypeDef,
        unknown
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: { [k: string]: string };
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix
    > = z.object({
        defaultUnitPrice: z.string(),
        dimensionPrices: z.record(z.string()),
    });
}

/** @internal */
export namespace WebAnalyticsEvent$ {
    export const inboundSchema: z.ZodType<WebAnalyticsEvent, z.ZodTypeDef, unknown> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$.inboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        matrix?: AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebAnalyticsEvent> = z.object({
        matrix: z
            .lazy(() => AuthUserBillingInvoiceItemsWebAnalyticsEventMatrix$.outboundSchema)
            .optional(),
        tier: z.number().optional(),
        price: z.number(),
        batch: z.number(),
        threshold: z.number(),
        name: z.string().optional(),
        hidden: z.boolean(),
        disabledAt: z.nullable(z.number()).optional(),
        enabledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace InvoiceItems$ {
    export const inboundSchema: z.ZodType<InvoiceItems, z.ZodTypeDef, unknown> = z.object({
        concurrentBuilds: z.lazy(() => ConcurrentBuilds$.inboundSchema).optional(),
        webAnalytics: z.lazy(() => AuthUserWebAnalytics$.inboundSchema).optional(),
        pro: z.lazy(() => Pro$.inboundSchema).optional(),
        enterprise: z.lazy(() => Enterprise$.inboundSchema).optional(),
        analytics: z.lazy(() => Analytics$.inboundSchema).optional(),
        monitoring: z.lazy(() => Monitoring$.inboundSchema).optional(),
        passwordProtection: z.lazy(() => PasswordProtection$.inboundSchema).optional(),
        previewDeploymentSuffix: z.lazy(() => PreviewDeploymentSuffix$.inboundSchema).optional(),
        saml: z.lazy(() => AuthUserSaml$.inboundSchema).optional(),
        teamSeats: z.lazy(() => TeamSeats$.inboundSchema).optional(),
        analyticsUsage: z.lazy(() => AnalyticsUsage$.inboundSchema).optional(),
        artifacts: z.lazy(() => ArtifactsModel$.inboundSchema).optional(),
        bandwidth: z.lazy(() => Bandwidth$.inboundSchema).optional(),
        blobStores: z.lazy(() => BlobStores$.inboundSchema).optional(),
        blobTotalAdvancedRequests: z
            .lazy(() => BlobTotalAdvancedRequests$.inboundSchema)
            .optional(),
        blobTotalAvgSizeInBytes: z.lazy(() => BlobTotalAvgSizeInBytes$.inboundSchema).optional(),
        blobTotalGetResponseObjectSizeInBytes: z
            .lazy(() => BlobTotalGetResponseObjectSizeInBytes$.inboundSchema)
            .optional(),
        blobTotalSimpleRequests: z.lazy(() => BlobTotalSimpleRequests$.inboundSchema).optional(),
        buildMinute: z.lazy(() => BuildMinute$.inboundSchema).optional(),
        dataCacheRead: z.lazy(() => DataCacheRead$.inboundSchema).optional(),
        dataCacheRevalidation: z.lazy(() => DataCacheRevalidation$.inboundSchema).optional(),
        dataCacheWrite: z.lazy(() => DataCacheWrite$.inboundSchema).optional(),
        edgeConfigRead: z.lazy(() => EdgeConfigRead$.inboundSchema).optional(),
        edgeConfigWrite: z.lazy(() => EdgeConfigWrite$.inboundSchema).optional(),
        edgeFunctionExecutionUnits: z
            .lazy(() => EdgeFunctionExecutionUnits$.inboundSchema)
            .optional(),
        edgeMiddlewareInvocations: z
            .lazy(() => EdgeMiddlewareInvocations$.inboundSchema)
            .optional(),
        edgeRequest: z.lazy(() => EdgeRequest$.inboundSchema).optional(),
        edgeRequestAdditionalCpuDuration: z
            .lazy(() => EdgeRequestAdditionalCpuDuration$.inboundSchema)
            .optional(),
        fastDataTransfer: z.lazy(() => FastDataTransfer$.inboundSchema).optional(),
        fastOriginTransfer: z.lazy(() => FastOriginTransfer$.inboundSchema).optional(),
        functionDuration: z.lazy(() => FunctionDuration$.inboundSchema).optional(),
        functionInvocation: z.lazy(() => FunctionInvocation$.inboundSchema).optional(),
        logDrainsVolume: z.lazy(() => LogDrainsVolume$.inboundSchema).optional(),
        monitoringMetric: z.lazy(() => MonitoringMetric$.inboundSchema).optional(),
        postgresComputeTime: z.lazy(() => PostgresComputeTime$.inboundSchema).optional(),
        postgresDataStorage: z.lazy(() => PostgresDataStorage$.inboundSchema).optional(),
        postgresDataTransfer: z.lazy(() => PostgresDataTransfer$.inboundSchema).optional(),
        postgresDatabase: z.lazy(() => PostgresDatabase$.inboundSchema).optional(),
        postgresWrittenData: z.lazy(() => PostgresWrittenData$.inboundSchema).optional(),
        serverlessFunctionExecution: z
            .lazy(() => ServerlessFunctionExecution$.inboundSchema)
            .optional(),
        sourceImages: z.lazy(() => SourceImages$.inboundSchema).optional(),
        storageRedisTotalBandwidthInBytes: z
            .lazy(() => StorageRedisTotalBandwidthInBytes$.inboundSchema)
            .optional(),
        storageRedisTotalCommands: z
            .lazy(() => StorageRedisTotalCommands$.inboundSchema)
            .optional(),
        storageRedisTotalDailyAvgStorageInBytes: z
            .lazy(() => StorageRedisTotalDailyAvgStorageInBytes$.inboundSchema)
            .optional(),
        storageRedisTotalDatabases: z
            .lazy(() => StorageRedisTotalDatabases$.inboundSchema)
            .optional(),
        wafOwaspExcessBytes: z.lazy(() => WafOwaspExcessBytes$.inboundSchema).optional(),
        wafOwaspRequests: z.lazy(() => WafOwaspRequests$.inboundSchema).optional(),
        webAnalyticsEvent: z.lazy(() => WebAnalyticsEvent$.inboundSchema).optional(),
    });

    export type Outbound = {
        concurrentBuilds?: ConcurrentBuilds$.Outbound | undefined;
        webAnalytics?: AuthUserWebAnalytics$.Outbound | undefined;
        pro?: Pro$.Outbound | undefined;
        enterprise?: Enterprise$.Outbound | undefined;
        analytics?: Analytics$.Outbound | undefined;
        monitoring?: Monitoring$.Outbound | undefined;
        passwordProtection?: PasswordProtection$.Outbound | undefined;
        previewDeploymentSuffix?: PreviewDeploymentSuffix$.Outbound | undefined;
        saml?: AuthUserSaml$.Outbound | undefined;
        teamSeats?: TeamSeats$.Outbound | undefined;
        analyticsUsage?: AnalyticsUsage$.Outbound | undefined;
        artifacts?: ArtifactsModel$.Outbound | undefined;
        bandwidth?: Bandwidth$.Outbound | undefined;
        blobStores?: BlobStores$.Outbound | undefined;
        blobTotalAdvancedRequests?: BlobTotalAdvancedRequests$.Outbound | undefined;
        blobTotalAvgSizeInBytes?: BlobTotalAvgSizeInBytes$.Outbound | undefined;
        blobTotalGetResponseObjectSizeInBytes?:
            | BlobTotalGetResponseObjectSizeInBytes$.Outbound
            | undefined;
        blobTotalSimpleRequests?: BlobTotalSimpleRequests$.Outbound | undefined;
        buildMinute?: BuildMinute$.Outbound | undefined;
        dataCacheRead?: DataCacheRead$.Outbound | undefined;
        dataCacheRevalidation?: DataCacheRevalidation$.Outbound | undefined;
        dataCacheWrite?: DataCacheWrite$.Outbound | undefined;
        edgeConfigRead?: EdgeConfigRead$.Outbound | undefined;
        edgeConfigWrite?: EdgeConfigWrite$.Outbound | undefined;
        edgeFunctionExecutionUnits?: EdgeFunctionExecutionUnits$.Outbound | undefined;
        edgeMiddlewareInvocations?: EdgeMiddlewareInvocations$.Outbound | undefined;
        edgeRequest?: EdgeRequest$.Outbound | undefined;
        edgeRequestAdditionalCpuDuration?: EdgeRequestAdditionalCpuDuration$.Outbound | undefined;
        fastDataTransfer?: FastDataTransfer$.Outbound | undefined;
        fastOriginTransfer?: FastOriginTransfer$.Outbound | undefined;
        functionDuration?: FunctionDuration$.Outbound | undefined;
        functionInvocation?: FunctionInvocation$.Outbound | undefined;
        logDrainsVolume?: LogDrainsVolume$.Outbound | undefined;
        monitoringMetric?: MonitoringMetric$.Outbound | undefined;
        postgresComputeTime?: PostgresComputeTime$.Outbound | undefined;
        postgresDataStorage?: PostgresDataStorage$.Outbound | undefined;
        postgresDataTransfer?: PostgresDataTransfer$.Outbound | undefined;
        postgresDatabase?: PostgresDatabase$.Outbound | undefined;
        postgresWrittenData?: PostgresWrittenData$.Outbound | undefined;
        serverlessFunctionExecution?: ServerlessFunctionExecution$.Outbound | undefined;
        sourceImages?: SourceImages$.Outbound | undefined;
        storageRedisTotalBandwidthInBytes?: StorageRedisTotalBandwidthInBytes$.Outbound | undefined;
        storageRedisTotalCommands?: StorageRedisTotalCommands$.Outbound | undefined;
        storageRedisTotalDailyAvgStorageInBytes?:
            | StorageRedisTotalDailyAvgStorageInBytes$.Outbound
            | undefined;
        storageRedisTotalDatabases?: StorageRedisTotalDatabases$.Outbound | undefined;
        wafOwaspExcessBytes?: WafOwaspExcessBytes$.Outbound | undefined;
        wafOwaspRequests?: WafOwaspRequests$.Outbound | undefined;
        webAnalyticsEvent?: WebAnalyticsEvent$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceItems> = z.object({
        concurrentBuilds: z.lazy(() => ConcurrentBuilds$.outboundSchema).optional(),
        webAnalytics: z.lazy(() => AuthUserWebAnalytics$.outboundSchema).optional(),
        pro: z.lazy(() => Pro$.outboundSchema).optional(),
        enterprise: z.lazy(() => Enterprise$.outboundSchema).optional(),
        analytics: z.lazy(() => Analytics$.outboundSchema).optional(),
        monitoring: z.lazy(() => Monitoring$.outboundSchema).optional(),
        passwordProtection: z.lazy(() => PasswordProtection$.outboundSchema).optional(),
        previewDeploymentSuffix: z.lazy(() => PreviewDeploymentSuffix$.outboundSchema).optional(),
        saml: z.lazy(() => AuthUserSaml$.outboundSchema).optional(),
        teamSeats: z.lazy(() => TeamSeats$.outboundSchema).optional(),
        analyticsUsage: z.lazy(() => AnalyticsUsage$.outboundSchema).optional(),
        artifacts: z.lazy(() => ArtifactsModel$.outboundSchema).optional(),
        bandwidth: z.lazy(() => Bandwidth$.outboundSchema).optional(),
        blobStores: z.lazy(() => BlobStores$.outboundSchema).optional(),
        blobTotalAdvancedRequests: z
            .lazy(() => BlobTotalAdvancedRequests$.outboundSchema)
            .optional(),
        blobTotalAvgSizeInBytes: z.lazy(() => BlobTotalAvgSizeInBytes$.outboundSchema).optional(),
        blobTotalGetResponseObjectSizeInBytes: z
            .lazy(() => BlobTotalGetResponseObjectSizeInBytes$.outboundSchema)
            .optional(),
        blobTotalSimpleRequests: z.lazy(() => BlobTotalSimpleRequests$.outboundSchema).optional(),
        buildMinute: z.lazy(() => BuildMinute$.outboundSchema).optional(),
        dataCacheRead: z.lazy(() => DataCacheRead$.outboundSchema).optional(),
        dataCacheRevalidation: z.lazy(() => DataCacheRevalidation$.outboundSchema).optional(),
        dataCacheWrite: z.lazy(() => DataCacheWrite$.outboundSchema).optional(),
        edgeConfigRead: z.lazy(() => EdgeConfigRead$.outboundSchema).optional(),
        edgeConfigWrite: z.lazy(() => EdgeConfigWrite$.outboundSchema).optional(),
        edgeFunctionExecutionUnits: z
            .lazy(() => EdgeFunctionExecutionUnits$.outboundSchema)
            .optional(),
        edgeMiddlewareInvocations: z
            .lazy(() => EdgeMiddlewareInvocations$.outboundSchema)
            .optional(),
        edgeRequest: z.lazy(() => EdgeRequest$.outboundSchema).optional(),
        edgeRequestAdditionalCpuDuration: z
            .lazy(() => EdgeRequestAdditionalCpuDuration$.outboundSchema)
            .optional(),
        fastDataTransfer: z.lazy(() => FastDataTransfer$.outboundSchema).optional(),
        fastOriginTransfer: z.lazy(() => FastOriginTransfer$.outboundSchema).optional(),
        functionDuration: z.lazy(() => FunctionDuration$.outboundSchema).optional(),
        functionInvocation: z.lazy(() => FunctionInvocation$.outboundSchema).optional(),
        logDrainsVolume: z.lazy(() => LogDrainsVolume$.outboundSchema).optional(),
        monitoringMetric: z.lazy(() => MonitoringMetric$.outboundSchema).optional(),
        postgresComputeTime: z.lazy(() => PostgresComputeTime$.outboundSchema).optional(),
        postgresDataStorage: z.lazy(() => PostgresDataStorage$.outboundSchema).optional(),
        postgresDataTransfer: z.lazy(() => PostgresDataTransfer$.outboundSchema).optional(),
        postgresDatabase: z.lazy(() => PostgresDatabase$.outboundSchema).optional(),
        postgresWrittenData: z.lazy(() => PostgresWrittenData$.outboundSchema).optional(),
        serverlessFunctionExecution: z
            .lazy(() => ServerlessFunctionExecution$.outboundSchema)
            .optional(),
        sourceImages: z.lazy(() => SourceImages$.outboundSchema).optional(),
        storageRedisTotalBandwidthInBytes: z
            .lazy(() => StorageRedisTotalBandwidthInBytes$.outboundSchema)
            .optional(),
        storageRedisTotalCommands: z
            .lazy(() => StorageRedisTotalCommands$.outboundSchema)
            .optional(),
        storageRedisTotalDailyAvgStorageInBytes: z
            .lazy(() => StorageRedisTotalDailyAvgStorageInBytes$.outboundSchema)
            .optional(),
        storageRedisTotalDatabases: z
            .lazy(() => StorageRedisTotalDatabases$.outboundSchema)
            .optional(),
        wafOwaspExcessBytes: z.lazy(() => WafOwaspExcessBytes$.outboundSchema).optional(),
        wafOwaspRequests: z.lazy(() => WafOwaspRequests$.outboundSchema).optional(),
        webAnalyticsEvent: z.lazy(() => WebAnalyticsEvent$.outboundSchema).optional(),
    });
}

/** @internal */
export namespace InvoiceSettings$ {
    export const inboundSchema: z.ZodType<InvoiceSettings, z.ZodTypeDef, unknown> = z.object({
        footer: z.string().optional(),
    });

    export type Outbound = {
        footer?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceSettings> = z.object({
        footer: z.string().optional(),
    });
}

/** @internal */
export namespace AuthUserTrial$ {
    export const inboundSchema: z.ZodType<AuthUserTrial, z.ZodTypeDef, unknown> = z.object({
        start: z.number(),
        end: z.number(),
    });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserTrial> = z.object({
        start: z.number(),
        end: z.number(),
    });
}

/** @internal */
export namespace AuthUserPeriod$ {
    export const inboundSchema: z.ZodType<AuthUserPeriod, z.ZodTypeDef, unknown> = z.object({
        start: z.number(),
        end: z.number(),
    });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUserPeriod> = z.object({
        start: z.number(),
        end: z.number(),
    });
}

/** @internal */
export namespace Interval$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Interval> = z.nativeEnum(Interval);
    export const outboundSchema: z.ZodNativeEnum<typeof Interval> = inboundSchema;
}

/** @internal */
export namespace Frequency$ {
    export const inboundSchema: z.ZodType<Frequency, z.ZodTypeDef, unknown> = z.object({
        interval: Interval$.inboundSchema,
        intervalCount: z.number(),
    });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Frequency> = z.object({
        interval: Interval$.outboundSchema,
        intervalCount: z.number(),
    });
}

/** @internal */
export namespace Duration$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Duration> = z.nativeEnum(Duration);
    export const outboundSchema: z.ZodNativeEnum<typeof Duration> = inboundSchema;
}

/** @internal */
export namespace Coupon$ {
    export const inboundSchema: z.ZodType<Coupon, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
        name: z.nullable(z.string()),
        amountOff: z.nullable(z.number()),
        percentageOff: z.nullable(z.number()),
        durationInMonths: z.nullable(z.number()),
        duration: Duration$.inboundSchema,
    });

    export type Outbound = {
        id: string;
        name: string | null;
        amountOff: number | null;
        percentageOff: number | null;
        durationInMonths: number | null;
        duration: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Coupon> = z.object({
        id: z.string(),
        name: z.nullable(z.string()),
        amountOff: z.nullable(z.number()),
        percentageOff: z.nullable(z.number()),
        durationInMonths: z.nullable(z.number()),
        duration: Duration$.outboundSchema,
    });
}

/** @internal */
export namespace Discount$ {
    export const inboundSchema: z.ZodType<Discount, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
        coupon: z.lazy(() => Coupon$.inboundSchema),
    });

    export type Outbound = {
        id: string;
        coupon: Coupon$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Discount> = z.object({
        id: z.string(),
        coupon: z.lazy(() => Coupon$.outboundSchema),
    });
}

/** @internal */
export namespace Items$ {
    export const inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
        priceId: z.string(),
        productId: z.string(),
        amount: z.number(),
        quantity: z.number(),
    });

    export type Outbound = {
        id: string;
        priceId: string;
        productId: string;
        amount: number;
        quantity: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Items> = z.object({
        id: z.string(),
        priceId: z.string(),
        productId: z.string(),
        amount: z.number(),
        quantity: z.number(),
    });
}

/** @internal */
export namespace Subscriptions$ {
    export const inboundSchema: z.ZodType<Subscriptions, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
        trial: z.nullable(z.lazy(() => AuthUserTrial$.inboundSchema)),
        period: z.lazy(() => AuthUserPeriod$.inboundSchema),
        frequency: z.lazy(() => Frequency$.inboundSchema),
        discount: z.nullable(z.lazy(() => Discount$.inboundSchema)),
        items: z.array(z.lazy(() => Items$.inboundSchema)),
    });

    export type Outbound = {
        id: string;
        trial: AuthUserTrial$.Outbound | null;
        period: AuthUserPeriod$.Outbound;
        frequency: Frequency$.Outbound;
        discount: Discount$.Outbound | null;
        items: Array<Items$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Subscriptions> = z.object({
        id: z.string(),
        trial: z.nullable(z.lazy(() => AuthUserTrial$.outboundSchema)),
        period: z.lazy(() => AuthUserPeriod$.outboundSchema),
        frequency: z.lazy(() => Frequency$.outboundSchema),
        discount: z.nullable(z.lazy(() => Discount$.outboundSchema)),
        items: z.array(z.lazy(() => Items$.outboundSchema)),
    });
}

/** @internal */
export namespace Controls$ {
    export const inboundSchema: z.ZodType<Controls, z.ZodTypeDef, unknown> = z.object({
        analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
        analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        analyticsSampleRateInPercent?: number | null | undefined;
        analyticsSpendLimitInDollars?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Controls> = z.object({
        analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
        analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace Status$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Status> = z.nativeEnum(Status);
    export const outboundSchema: z.ZodNativeEnum<typeof Status> = inboundSchema;
}

/** @internal */
export namespace PricingExperiment$ {
    export const inboundSchema: z.ZodNativeEnum<typeof PricingExperiment> =
        z.nativeEnum(PricingExperiment);
    export const outboundSchema: z.ZodNativeEnum<typeof PricingExperiment> = inboundSchema;
}

/** @internal */
export namespace Billing$ {
    export const inboundSchema: z.ZodType<Billing, z.ZodTypeDef, unknown> = z.object({
        currency: Currency$.inboundSchema.optional(),
        cancelation: z.nullable(z.number()).optional(),
        period: z.nullable(z.lazy(() => Period$.inboundSchema)),
        contract: z.nullable(z.lazy(() => Contract$.inboundSchema)).optional(),
        plan: Plan$.inboundSchema,
        planIteration: z.string().optional(),
        platform: Platform$.inboundSchema.optional(),
        orbCustomerId: z.string().optional(),
        syncedAt: z.number().optional(),
        programType: ProgramType$.inboundSchema.optional(),
        trial: z.nullable(z.lazy(() => Trial$.inboundSchema)).optional(),
        email: z.nullable(z.string()).optional(),
        tax: z.nullable(z.lazy(() => Tax$.inboundSchema)).optional(),
        language: z.nullable(z.string()).optional(),
        address: z.nullable(z.lazy(() => Address$.inboundSchema)).optional(),
        name: z.nullable(z.string()).optional(),
        invoiceItems: z.nullable(z.lazy(() => InvoiceItems$.inboundSchema)).optional(),
        invoiceSettings: z.lazy(() => InvoiceSettings$.inboundSchema).optional(),
        subscriptions: z.nullable(z.array(z.lazy(() => Subscriptions$.inboundSchema))).optional(),
        controls: z.nullable(z.lazy(() => Controls$.inboundSchema)).optional(),
        purchaseOrder: z.nullable(z.string()).optional(),
        status: Status$.inboundSchema.optional(),
        pricingExperiment: PricingExperiment$.inboundSchema.optional(),
        orbMigrationScheduledAt: z.nullable(z.number()).optional(),
    });

    export type Outbound = {
        currency?: string | undefined;
        cancelation?: number | null | undefined;
        period: Period$.Outbound | null;
        contract?: Contract$.Outbound | null | undefined;
        plan: string;
        planIteration?: string | undefined;
        platform?: string | undefined;
        orbCustomerId?: string | undefined;
        syncedAt?: number | undefined;
        programType?: string | undefined;
        trial?: Trial$.Outbound | null | undefined;
        email?: string | null | undefined;
        tax?: Tax$.Outbound | null | undefined;
        language?: string | null | undefined;
        address?: Address$.Outbound | null | undefined;
        name?: string | null | undefined;
        invoiceItems?: InvoiceItems$.Outbound | null | undefined;
        invoiceSettings?: InvoiceSettings$.Outbound | undefined;
        subscriptions?: Array<Subscriptions$.Outbound> | null | undefined;
        controls?: Controls$.Outbound | null | undefined;
        purchaseOrder?: string | null | undefined;
        status?: string | undefined;
        pricingExperiment?: string | undefined;
        orbMigrationScheduledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Billing> = z.object({
        currency: Currency$.outboundSchema.optional(),
        cancelation: z.nullable(z.number()).optional(),
        period: z.nullable(z.lazy(() => Period$.outboundSchema)),
        contract: z.nullable(z.lazy(() => Contract$.outboundSchema)).optional(),
        plan: Plan$.outboundSchema,
        planIteration: z.string().optional(),
        platform: Platform$.outboundSchema.optional(),
        orbCustomerId: z.string().optional(),
        syncedAt: z.number().optional(),
        programType: ProgramType$.outboundSchema.optional(),
        trial: z.nullable(z.lazy(() => Trial$.outboundSchema)).optional(),
        email: z.nullable(z.string()).optional(),
        tax: z.nullable(z.lazy(() => Tax$.outboundSchema)).optional(),
        language: z.nullable(z.string()).optional(),
        address: z.nullable(z.lazy(() => Address$.outboundSchema)).optional(),
        name: z.nullable(z.string()).optional(),
        invoiceItems: z.nullable(z.lazy(() => InvoiceItems$.outboundSchema)).optional(),
        invoiceSettings: z.lazy(() => InvoiceSettings$.outboundSchema).optional(),
        subscriptions: z.nullable(z.array(z.lazy(() => Subscriptions$.outboundSchema))).optional(),
        controls: z.nullable(z.lazy(() => Controls$.outboundSchema)).optional(),
        purchaseOrder: z.nullable(z.string()).optional(),
        status: Status$.outboundSchema.optional(),
        pricingExperiment: PricingExperiment$.outboundSchema.optional(),
        orbMigrationScheduledAt: z.nullable(z.number()).optional(),
    });
}

/** @internal */
export namespace ResourceConfig$ {
    export const inboundSchema: z.ZodType<ResourceConfig, z.ZodTypeDef, unknown> = z.object({
        blobStores: z.number().optional(),
        nodeType: z.string().optional(),
        concurrentBuilds: z.number().optional(),
        awsAccountType: z.string().optional(),
        awsAccountIds: z.array(z.string()).optional(),
        cfZoneName: z.string().optional(),
        edgeConfigs: z.number().optional(),
        edgeConfigSize: z.number().optional(),
        edgeFunctionMaxSizeBytes: z.number().optional(),
        edgeFunctionExecutionTimeoutMs: z.number().optional(),
        serverlessFunctionDefaultMaxExecutionTime: z.number().optional(),
        kvDatabases: z.number().optional(),
        postgresDatabases: z.number().optional(),
        integrationStores: z.number().optional(),
        cronJobs: z.number().optional(),
        cronJobsPerProject: z.number().optional(),
    });

    export type Outbound = {
        blobStores?: number | undefined;
        nodeType?: string | undefined;
        concurrentBuilds?: number | undefined;
        awsAccountType?: string | undefined;
        awsAccountIds?: Array<string> | undefined;
        cfZoneName?: string | undefined;
        edgeConfigs?: number | undefined;
        edgeConfigSize?: number | undefined;
        edgeFunctionMaxSizeBytes?: number | undefined;
        edgeFunctionExecutionTimeoutMs?: number | undefined;
        serverlessFunctionDefaultMaxExecutionTime?: number | undefined;
        kvDatabases?: number | undefined;
        postgresDatabases?: number | undefined;
        integrationStores?: number | undefined;
        cronJobs?: number | undefined;
        cronJobsPerProject?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ResourceConfig> = z.object({
        blobStores: z.number().optional(),
        nodeType: z.string().optional(),
        concurrentBuilds: z.number().optional(),
        awsAccountType: z.string().optional(),
        awsAccountIds: z.array(z.string()).optional(),
        cfZoneName: z.string().optional(),
        edgeConfigs: z.number().optional(),
        edgeConfigSize: z.number().optional(),
        edgeFunctionMaxSizeBytes: z.number().optional(),
        edgeFunctionExecutionTimeoutMs: z.number().optional(),
        serverlessFunctionDefaultMaxExecutionTime: z.number().optional(),
        kvDatabases: z.number().optional(),
        postgresDatabases: z.number().optional(),
        integrationStores: z.number().optional(),
        cronJobs: z.number().optional(),
        cronJobsPerProject: z.number().optional(),
    });
}

/** @internal */
export namespace ViewPreference$ {
    export const inboundSchema: z.ZodNativeEnum<typeof ViewPreference> =
        z.nativeEnum(ViewPreference);
    export const outboundSchema: z.ZodNativeEnum<typeof ViewPreference> = inboundSchema;
}

/** @internal */
export namespace FavoritesViewPreference$ {
    export const inboundSchema: z.ZodNativeEnum<typeof FavoritesViewPreference> =
        z.nativeEnum(FavoritesViewPreference);
    export const outboundSchema: z.ZodNativeEnum<typeof FavoritesViewPreference> = inboundSchema;
}

/** @internal */
export namespace RecentsViewPreference$ {
    export const inboundSchema: z.ZodNativeEnum<typeof RecentsViewPreference> =
        z.nativeEnum(RecentsViewPreference);
    export const outboundSchema: z.ZodNativeEnum<typeof RecentsViewPreference> = inboundSchema;
}

/** @internal */
export namespace ActiveDashboardViews$ {
    export const inboundSchema: z.ZodType<ActiveDashboardViews, z.ZodTypeDef, unknown> = z.object({
        scopeId: z.string(),
        viewPreference: ViewPreference$.inboundSchema.optional(),
        favoritesViewPreference: FavoritesViewPreference$.inboundSchema.optional(),
        recentsViewPreference: RecentsViewPreference$.inboundSchema.optional(),
    });

    export type Outbound = {
        scopeId: string;
        viewPreference?: string | undefined;
        favoritesViewPreference?: string | undefined;
        recentsViewPreference?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ActiveDashboardViews> = z.object(
        {
            scopeId: z.string(),
            viewPreference: ViewPreference$.outboundSchema.optional(),
            favoritesViewPreference: FavoritesViewPreference$.outboundSchema.optional(),
            recentsViewPreference: RecentsViewPreference$.outboundSchema.optional(),
        }
    );
}

/** @internal */
export namespace ImportFlowGitNamespace$ {
    export const inboundSchema: z.ZodType<ImportFlowGitNamespace, z.ZodTypeDef, unknown> = z.union([
        z.string(),
        z.number(),
    ]);

    export type Outbound = string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ImportFlowGitNamespace> =
        z.union([z.string(), z.number()]);
}

/** @internal */
export namespace ImportFlowGitNamespaceId$ {
    export const inboundSchema: z.ZodType<ImportFlowGitNamespaceId, z.ZodTypeDef, unknown> =
        z.union([z.string(), z.number()]);

    export type Outbound = string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ImportFlowGitNamespaceId> =
        z.union([z.string(), z.number()]);
}

/** @internal */
export namespace ImportFlowGitProvider$ {
    export const inboundSchema: z.ZodNativeEnum<typeof ImportFlowGitProvider> =
        z.nativeEnum(ImportFlowGitProvider);
    export const outboundSchema: z.ZodNativeEnum<typeof ImportFlowGitProvider> = inboundSchema;
}

/** @internal */
export namespace GitNamespaceId$ {
    export const inboundSchema: z.ZodType<GitNamespaceId, z.ZodTypeDef, unknown> = z.union([
        z.string(),
        z.number(),
    ]);

    export type Outbound = string | number;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GitNamespaceId> = z.union([
        z.string(),
        z.number(),
    ]);
}

/** @internal */
export namespace PreferredScopesAndGitNamespaces$ {
    export const inboundSchema: z.ZodType<PreferredScopesAndGitNamespaces, z.ZodTypeDef, unknown> =
        z.object({
            scopeId: z.string(),
            gitNamespaceId: z.nullable(z.union([z.string(), z.number()])),
        });

    export type Outbound = {
        scopeId: string;
        gitNamespaceId: string | number | null;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PreferredScopesAndGitNamespaces
    > = z.object({
        scopeId: z.string(),
        gitNamespaceId: z.nullable(z.union([z.string(), z.number()])),
    });
}

/** @internal */
export namespace Dismissals$ {
    export const inboundSchema: z.ZodType<Dismissals, z.ZodTypeDef, unknown> = z.object({
        scopeId: z.string(),
        createdAt: z.number(),
    });

    export type Outbound = {
        scopeId: string;
        createdAt: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Dismissals> = z.object({
        scopeId: z.string(),
        createdAt: z.number(),
    });
}

/** @internal */
export namespace DismissedToasts$ {
    export const inboundSchema: z.ZodType<DismissedToasts, z.ZodTypeDef, unknown> = z.object({
        name: z.string(),
        dismissals: z.array(z.lazy(() => Dismissals$.inboundSchema)),
    });

    export type Outbound = {
        name: string;
        dismissals: Array<Dismissals$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DismissedToasts> = z.object({
        name: z.string(),
        dismissals: z.array(z.lazy(() => Dismissals$.outboundSchema)),
    });
}

/** @internal */
export namespace FavoriteProjectsAndSpaces2$ {
    export const inboundSchema: z.ZodType<FavoriteProjectsAndSpaces2, z.ZodTypeDef, unknown> =
        z.object({
            spaceId: z.string(),
            scopeSlug: z.string(),
            scopeId: z.string(),
        });

    export type Outbound = {
        spaceId: string;
        scopeSlug: string;
        scopeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FavoriteProjectsAndSpaces2> =
        z.object({
            spaceId: z.string(),
            scopeSlug: z.string(),
            scopeId: z.string(),
        });
}

/** @internal */
export namespace FavoriteProjectsAndSpaces1$ {
    export const inboundSchema: z.ZodType<FavoriteProjectsAndSpaces1, z.ZodTypeDef, unknown> =
        z.object({
            projectId: z.string(),
            scopeSlug: z.string(),
            scopeId: z.string(),
        });

    export type Outbound = {
        projectId: string;
        scopeSlug: string;
        scopeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FavoriteProjectsAndSpaces1> =
        z.object({
            projectId: z.string(),
            scopeSlug: z.string(),
            scopeId: z.string(),
        });
}

/** @internal */
export namespace FavoriteProjectsAndSpaces$ {
    export const inboundSchema: z.ZodType<FavoriteProjectsAndSpaces, z.ZodTypeDef, unknown> =
        z.union([
            z.lazy(() => FavoriteProjectsAndSpaces1$.inboundSchema),
            z.lazy(() => FavoriteProjectsAndSpaces2$.inboundSchema),
        ]);

    export type Outbound =
        | FavoriteProjectsAndSpaces1$.Outbound
        | FavoriteProjectsAndSpaces2$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FavoriteProjectsAndSpaces> =
        z.union([
            z.lazy(() => FavoriteProjectsAndSpaces1$.outboundSchema),
            z.lazy(() => FavoriteProjectsAndSpaces2$.outboundSchema),
        ]);
}

/** @internal */
export namespace RemoteCaching$ {
    export const inboundSchema: z.ZodType<RemoteCaching, z.ZodTypeDef, unknown> = z.object({
        enabled: z.boolean().optional(),
    });

    export type Outbound = {
        enabled?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoteCaching> = z.object({
        enabled: z.boolean().optional(),
    });
}

/** @internal */
export namespace DataCache$ {
    export const inboundSchema: z.ZodType<DataCache, z.ZodTypeDef, unknown> = z.object({
        excessBillingEnabled: z.boolean().optional(),
    });

    export type Outbound = {
        excessBillingEnabled?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataCache> = z.object({
        excessBillingEnabled: z.boolean().optional(),
    });
}

/** @internal */
export namespace WebAnalytics$ {
    export const inboundSchema: z.ZodType<WebAnalytics, z.ZodTypeDef, unknown> = z.object({
        blockedFrom: z.number().optional(),
        blockedUntil: z.number().optional(),
        isCurrentlyBlocked: z.boolean(),
    });

    export type Outbound = {
        blockedFrom?: number | undefined;
        blockedUntil?: number | undefined;
        isCurrentlyBlocked: boolean;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebAnalytics> = z.object({
        blockedFrom: z.number().optional(),
        blockedUntil: z.number().optional(),
        isCurrentlyBlocked: z.boolean(),
    });
}

/** @internal */
export namespace FeatureBlocks$ {
    export const inboundSchema: z.ZodType<FeatureBlocks, z.ZodTypeDef, unknown> = z.object({
        webAnalytics: z.lazy(() => WebAnalytics$.inboundSchema).optional(),
    });

    export type Outbound = {
        webAnalytics?: WebAnalytics$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FeatureBlocks> = z.object({
        webAnalytics: z.lazy(() => WebAnalytics$.outboundSchema).optional(),
    });
}

/** @internal */
export namespace AuthUserStatus$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AuthUserStatus> =
        z.nativeEnum(AuthUserStatus);
    export const outboundSchema: z.ZodNativeEnum<typeof AuthUserStatus> = inboundSchema;
}

/** @internal */
export namespace Migration$ {
    export const inboundSchema: z.ZodType<Migration, z.ZodTypeDef, unknown> = z.object({
        teamId: z.string().optional(),
        status: AuthUserStatus$.inboundSchema,
    });

    export type Outbound = {
        teamId?: string | undefined;
        status: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Migration> = z.object({
        teamId: z.string().optional(),
        status: AuthUserStatus$.outboundSchema,
    });
}

/** @internal */
export namespace Northstar$ {
    export const inboundSchema: z.ZodType<Northstar, z.ZodTypeDef, unknown> = z.object({
        migration: z.lazy(() => Migration$.inboundSchema).optional(),
    });

    export type Outbound = {
        migration?: Migration$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Northstar> = z.object({
        migration: z.lazy(() => Migration$.outboundSchema).optional(),
    });
}

/** @internal */
export namespace NorthstarMigration$ {
    export const inboundSchema: z.ZodType<NorthstarMigration, z.ZodTypeDef, unknown> = z.object({
        teamId: z.string(),
        projects: z.number(),
        stores: z.number(),
        integrationConfigurations: z.number(),
        integrationClients: z.number(),
        startTime: z.number(),
        endTime: z.number(),
    });

    export type Outbound = {
        teamId: string;
        projects: number;
        stores: number;
        integrationConfigurations: number;
        integrationClients: number;
        startTime: number;
        endTime: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NorthstarMigration> = z.object({
        teamId: z.string(),
        projects: z.number(),
        stores: z.number(),
        integrationConfigurations: z.number(),
        integrationClients: z.number(),
        startTime: z.number(),
        endTime: z.number(),
    });
}

/** @internal */
export namespace Version$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Version> = z.nativeEnum(Version);
    export const outboundSchema: z.ZodNativeEnum<typeof Version> = inboundSchema;
}

/** @internal */
export namespace AuthUser$ {
    export const inboundSchema: z.ZodType<AuthUser, z.ZodTypeDef, unknown> = z.object({
        createdAt: z.number(),
        softBlock: z.nullable(z.lazy(() => SoftBlock$.inboundSchema)),
        billing: z.nullable(z.lazy(() => Billing$.inboundSchema)),
        resourceConfig: z.lazy(() => ResourceConfig$.inboundSchema),
        stagingPrefix: z.string(),
        activeDashboardViews: z.array(z.lazy(() => ActiveDashboardViews$.inboundSchema)).optional(),
        importFlowGitNamespace: z.nullable(z.union([z.string(), z.number()])).optional(),
        importFlowGitNamespaceId: z.nullable(z.union([z.string(), z.number()])).optional(),
        importFlowGitProvider: ImportFlowGitProvider$.inboundSchema.optional(),
        preferredScopesAndGitNamespaces: z
            .array(z.lazy(() => PreferredScopesAndGitNamespaces$.inboundSchema))
            .optional(),
        dismissedToasts: z.array(z.lazy(() => DismissedToasts$.inboundSchema)).optional(),
        favoriteProjectsAndSpaces: z
            .array(
                z.union([
                    z.lazy(() => FavoriteProjectsAndSpaces1$.inboundSchema),
                    z.lazy(() => FavoriteProjectsAndSpaces2$.inboundSchema),
                ])
            )
            .optional(),
        hasTrialAvailable: z.boolean(),
        remoteCaching: z.lazy(() => RemoteCaching$.inboundSchema).optional(),
        dataCache: z.lazy(() => DataCache$.inboundSchema).optional(),
        featureBlocks: z.lazy(() => FeatureBlocks$.inboundSchema).optional(),
        northstar: z.lazy(() => Northstar$.inboundSchema).optional(),
        northstarMigration: z.lazy(() => NorthstarMigration$.inboundSchema).optional(),
        id: z.string(),
        email: z.string(),
        name: z.nullable(z.string()),
        username: z.string(),
        avatar: z.nullable(z.string()),
        defaultTeamId: z.nullable(z.string()),
        version: z.nullable(Version$.inboundSchema),
    });

    export type Outbound = {
        createdAt: number;
        softBlock: SoftBlock$.Outbound | null;
        billing: Billing$.Outbound | null;
        resourceConfig: ResourceConfig$.Outbound;
        stagingPrefix: string;
        activeDashboardViews?: Array<ActiveDashboardViews$.Outbound> | undefined;
        importFlowGitNamespace?: string | number | null | undefined;
        importFlowGitNamespaceId?: string | number | null | undefined;
        importFlowGitProvider?: string | undefined;
        preferredScopesAndGitNamespaces?:
            | Array<PreferredScopesAndGitNamespaces$.Outbound>
            | undefined;
        dismissedToasts?: Array<DismissedToasts$.Outbound> | undefined;
        favoriteProjectsAndSpaces?:
            | Array<FavoriteProjectsAndSpaces1$.Outbound | FavoriteProjectsAndSpaces2$.Outbound>
            | undefined;
        hasTrialAvailable: boolean;
        remoteCaching?: RemoteCaching$.Outbound | undefined;
        dataCache?: DataCache$.Outbound | undefined;
        featureBlocks?: FeatureBlocks$.Outbound | undefined;
        northstar?: Northstar$.Outbound | undefined;
        northstarMigration?: NorthstarMigration$.Outbound | undefined;
        id: string;
        email: string;
        name: string | null;
        username: string;
        avatar: string | null;
        defaultTeamId: string | null;
        version: string | null;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthUser> = z.object({
        createdAt: z.number(),
        softBlock: z.nullable(z.lazy(() => SoftBlock$.outboundSchema)),
        billing: z.nullable(z.lazy(() => Billing$.outboundSchema)),
        resourceConfig: z.lazy(() => ResourceConfig$.outboundSchema),
        stagingPrefix: z.string(),
        activeDashboardViews: z
            .array(z.lazy(() => ActiveDashboardViews$.outboundSchema))
            .optional(),
        importFlowGitNamespace: z.nullable(z.union([z.string(), z.number()])).optional(),
        importFlowGitNamespaceId: z.nullable(z.union([z.string(), z.number()])).optional(),
        importFlowGitProvider: ImportFlowGitProvider$.outboundSchema.optional(),
        preferredScopesAndGitNamespaces: z
            .array(z.lazy(() => PreferredScopesAndGitNamespaces$.outboundSchema))
            .optional(),
        dismissedToasts: z.array(z.lazy(() => DismissedToasts$.outboundSchema)).optional(),
        favoriteProjectsAndSpaces: z
            .array(
                z.union([
                    z.lazy(() => FavoriteProjectsAndSpaces1$.outboundSchema),
                    z.lazy(() => FavoriteProjectsAndSpaces2$.outboundSchema),
                ])
            )
            .optional(),
        hasTrialAvailable: z.boolean(),
        remoteCaching: z.lazy(() => RemoteCaching$.outboundSchema).optional(),
        dataCache: z.lazy(() => DataCache$.outboundSchema).optional(),
        featureBlocks: z.lazy(() => FeatureBlocks$.outboundSchema).optional(),
        northstar: z.lazy(() => Northstar$.outboundSchema).optional(),
        northstarMigration: z.lazy(() => NorthstarMigration$.outboundSchema).optional(),
        id: z.string(),
        email: z.string(),
        name: z.nullable(z.string()),
        username: z.string(),
        avatar: z.nullable(z.string()),
        defaultTeamId: z.nullable(z.string()),
        version: z.nullable(Version$.outboundSchema),
    });
}
