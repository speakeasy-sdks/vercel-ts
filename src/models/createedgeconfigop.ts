/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import * as z from "zod";

export type CreateEdgeConfigRequestBody = {
    slug: string;
    items?: any | undefined;
};

export type CreateEdgeConfigRequest = {
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody?: CreateEdgeConfigRequestBody | undefined;
};

/**
 * Keeps track of the current state of the Edge Config while it gets transferred.
 */
export type CreateEdgeConfigTransfer = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};

export type CreateEdgeConfigSchema = {};

/**
 * An Edge Config
 */
export type CreateEdgeConfigResponseBody = {
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    id?: string | undefined;
    /**
     * Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
     */
    slug?: string | undefined;
    ownerId?: string | undefined;
    digest?: string | undefined;
    /**
     * Keeps track of the current state of the Edge Config while it gets transferred.
     */
    transfer?: CreateEdgeConfigTransfer | undefined;
    schema?: CreateEdgeConfigSchema | undefined;
    sizeInBytes: number;
    itemCount: number;
};

/** @internal */
export const CreateEdgeConfigRequestBody$inboundSchema: z.ZodType<
    CreateEdgeConfigRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    slug: z.string(),
    items: z.any().optional(),
});

/** @internal */
export type CreateEdgeConfigRequestBody$Outbound = {
    slug: string;
    items?: any | undefined;
};

/** @internal */
export const CreateEdgeConfigRequestBody$outboundSchema: z.ZodType<
    CreateEdgeConfigRequestBody$Outbound,
    z.ZodTypeDef,
    CreateEdgeConfigRequestBody
> = z.object({
    slug: z.string(),
    items: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEdgeConfigRequestBody$ {
    /** @deprecated use `CreateEdgeConfigRequestBody$inboundSchema` instead. */
    export const inboundSchema = CreateEdgeConfigRequestBody$inboundSchema;
    /** @deprecated use `CreateEdgeConfigRequestBody$outboundSchema` instead. */
    export const outboundSchema = CreateEdgeConfigRequestBody$outboundSchema;
    /** @deprecated use `CreateEdgeConfigRequestBody$Outbound` instead. */
    export type Outbound = CreateEdgeConfigRequestBody$Outbound;
}

/** @internal */
export const CreateEdgeConfigRequest$inboundSchema: z.ZodType<
    CreateEdgeConfigRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        teamId: z.string().optional(),
        slug: z.string().optional(),
        RequestBody: z.lazy(() => CreateEdgeConfigRequestBody$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type CreateEdgeConfigRequest$Outbound = {
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody?: CreateEdgeConfigRequestBody$Outbound | undefined;
};

/** @internal */
export const CreateEdgeConfigRequest$outboundSchema: z.ZodType<
    CreateEdgeConfigRequest$Outbound,
    z.ZodTypeDef,
    CreateEdgeConfigRequest
> = z
    .object({
        teamId: z.string().optional(),
        slug: z.string().optional(),
        requestBody: z.lazy(() => CreateEdgeConfigRequestBody$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEdgeConfigRequest$ {
    /** @deprecated use `CreateEdgeConfigRequest$inboundSchema` instead. */
    export const inboundSchema = CreateEdgeConfigRequest$inboundSchema;
    /** @deprecated use `CreateEdgeConfigRequest$outboundSchema` instead. */
    export const outboundSchema = CreateEdgeConfigRequest$outboundSchema;
    /** @deprecated use `CreateEdgeConfigRequest$Outbound` instead. */
    export type Outbound = CreateEdgeConfigRequest$Outbound;
}

/** @internal */
export const CreateEdgeConfigTransfer$inboundSchema: z.ZodType<
    CreateEdgeConfigTransfer,
    z.ZodTypeDef,
    unknown
> = z.object({
    fromAccountId: z.string(),
    startedAt: z.number(),
    doneAt: z.nullable(z.number()),
});

/** @internal */
export type CreateEdgeConfigTransfer$Outbound = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};

/** @internal */
export const CreateEdgeConfigTransfer$outboundSchema: z.ZodType<
    CreateEdgeConfigTransfer$Outbound,
    z.ZodTypeDef,
    CreateEdgeConfigTransfer
> = z.object({
    fromAccountId: z.string(),
    startedAt: z.number(),
    doneAt: z.nullable(z.number()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEdgeConfigTransfer$ {
    /** @deprecated use `CreateEdgeConfigTransfer$inboundSchema` instead. */
    export const inboundSchema = CreateEdgeConfigTransfer$inboundSchema;
    /** @deprecated use `CreateEdgeConfigTransfer$outboundSchema` instead. */
    export const outboundSchema = CreateEdgeConfigTransfer$outboundSchema;
    /** @deprecated use `CreateEdgeConfigTransfer$Outbound` instead. */
    export type Outbound = CreateEdgeConfigTransfer$Outbound;
}

/** @internal */
export const CreateEdgeConfigSchema$inboundSchema: z.ZodType<
    CreateEdgeConfigSchema,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type CreateEdgeConfigSchema$Outbound = {};

/** @internal */
export const CreateEdgeConfigSchema$outboundSchema: z.ZodType<
    CreateEdgeConfigSchema$Outbound,
    z.ZodTypeDef,
    CreateEdgeConfigSchema
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEdgeConfigSchema$ {
    /** @deprecated use `CreateEdgeConfigSchema$inboundSchema` instead. */
    export const inboundSchema = CreateEdgeConfigSchema$inboundSchema;
    /** @deprecated use `CreateEdgeConfigSchema$outboundSchema` instead. */
    export const outboundSchema = CreateEdgeConfigSchema$outboundSchema;
    /** @deprecated use `CreateEdgeConfigSchema$Outbound` instead. */
    export type Outbound = CreateEdgeConfigSchema$Outbound;
}

/** @internal */
export const CreateEdgeConfigResponseBody$inboundSchema: z.ZodType<
    CreateEdgeConfigResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    id: z.string().optional(),
    slug: z.string().optional(),
    ownerId: z.string().optional(),
    digest: z.string().optional(),
    transfer: z.lazy(() => CreateEdgeConfigTransfer$inboundSchema).optional(),
    schema: z.lazy(() => CreateEdgeConfigSchema$inboundSchema).optional(),
    sizeInBytes: z.number(),
    itemCount: z.number(),
});

/** @internal */
export type CreateEdgeConfigResponseBody$Outbound = {
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    id?: string | undefined;
    slug?: string | undefined;
    ownerId?: string | undefined;
    digest?: string | undefined;
    transfer?: CreateEdgeConfigTransfer$Outbound | undefined;
    schema?: CreateEdgeConfigSchema$Outbound | undefined;
    sizeInBytes: number;
    itemCount: number;
};

/** @internal */
export const CreateEdgeConfigResponseBody$outboundSchema: z.ZodType<
    CreateEdgeConfigResponseBody$Outbound,
    z.ZodTypeDef,
    CreateEdgeConfigResponseBody
> = z.object({
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    id: z.string().optional(),
    slug: z.string().optional(),
    ownerId: z.string().optional(),
    digest: z.string().optional(),
    transfer: z.lazy(() => CreateEdgeConfigTransfer$outboundSchema).optional(),
    schema: z.lazy(() => CreateEdgeConfigSchema$outboundSchema).optional(),
    sizeInBytes: z.number(),
    itemCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEdgeConfigResponseBody$ {
    /** @deprecated use `CreateEdgeConfigResponseBody$inboundSchema` instead. */
    export const inboundSchema = CreateEdgeConfigResponseBody$inboundSchema;
    /** @deprecated use `CreateEdgeConfigResponseBody$outboundSchema` instead. */
    export const outboundSchema = CreateEdgeConfigResponseBody$outboundSchema;
    /** @deprecated use `CreateEdgeConfigResponseBody$Outbound` instead. */
    export type Outbound = CreateEdgeConfigResponseBody$Outbound;
}
