/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../types/enums.js";
import {
    Pagination,
    Pagination$inboundSchema,
    Pagination$Outbound,
    Pagination$outboundSchema,
} from "./pagination.js";
import * as z from "zod";

/**
 * If true, the environment variable value will be decrypted
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export const Decrypt = {
    True: "true",
    False: "false",
} as const;
/**
 * If true, the environment variable value will be decrypted
 *
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type Decrypt = ClosedEnum<typeof Decrypt>;

export type FilterProjectEnvsRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * If defined, the git branch of the environment variable to filter the results (must have target=preview)
     */
    gitBranch?: string | undefined;
    /**
     * If true, the environment variable value will be decrypted
     */
    decrypt?: Decrypt | undefined;
    /**
     * The source that is calling the endpoint.
     */
    source?: string | undefined;
    customEnvironmentId?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};

export const FilterProjectEnvsTargetProjectsResponse2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
} as const;
export type FilterProjectEnvsTargetProjectsResponse2 = ClosedEnum<
    typeof FilterProjectEnvsTargetProjectsResponse2
>;

export const FilterProjectEnvsTargetProjectsResponse1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
} as const;
export type FilterProjectEnvsTargetProjectsResponse1 = ClosedEnum<
    typeof FilterProjectEnvsTargetProjectsResponse1
>;

export type FilterProjectEnvsResponseBodyProjectsResponseTarget =
    | Array<FilterProjectEnvsTargetProjectsResponse1>
    | FilterProjectEnvsTargetProjectsResponse2;

export const FilterProjectEnvsResponseBodyProjectsResponse200Type = {
    Secret: "secret",
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
} as const;
export type FilterProjectEnvsResponseBodyProjectsResponse200Type = ClosedEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200Type
>;

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type =
    {
        IntegrationStoreSecret: "integration-store-secret",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse14 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type =
    {
        PostgresUrlNoSsl: "postgres-url-no-ssl",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse13 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type =
    {
        PostgresDatabase: "postgres-database",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse12 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type =
    {
        PostgresPassword: "postgres-password",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse11 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type =
    {
        PostgresHost: "postgres-host",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse10 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type =
    {
        PostgresUser: "postgres-user",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse9 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type =
    {
        PostgresPrismaUrl: "postgres-prisma-url",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse8 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type =
    {
        PostgresUrlNonPooling: "postgres-url-non-pooling",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse7 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type =
    {
        PostgresUrl: "postgres-url",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse6 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type =
    {
        BlobReadWriteToken: "blob-read-write-token",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse5 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type =
    {
        RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse4 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type =
    {
        RedisRestApiToken: "redis-rest-api-token",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse3 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType = {
    RedisRestApiUrl: "redis-rest-api-url",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType
    >;

export type FilterProjectEnvsContentHintProjectsResponse2 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type = {
    RedisUrl: "redis-url",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type
    >;

export type FilterProjectEnvsContentHintProjectsResponse1 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type;
    storeId: string;
};

export type FilterProjectEnvsResponseBodyProjectsContentHint =
    | FilterProjectEnvsContentHintProjectsResponse1
    | FilterProjectEnvsContentHintProjectsResponse2
    | FilterProjectEnvsContentHintProjectsResponse3
    | FilterProjectEnvsContentHintProjectsResponse4
    | FilterProjectEnvsContentHintProjectsResponse5
    | FilterProjectEnvsContentHintProjectsResponse6
    | FilterProjectEnvsContentHintProjectsResponse7
    | FilterProjectEnvsContentHintProjectsResponse8
    | FilterProjectEnvsContentHintProjectsResponse9
    | FilterProjectEnvsContentHintProjectsResponse10
    | FilterProjectEnvsContentHintProjectsResponse11
    | FilterProjectEnvsContentHintProjectsResponse12
    | FilterProjectEnvsContentHintProjectsResponse13
    | FilterProjectEnvsContentHintProjectsResponse14;

export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type = {
    FlagsSecret: "flags-secret",
} as const;
export type FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type = ClosedEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type FilterProjectEnvsResponseBodyProjectsInternalContentHint = {
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};

export type ResponseBodyEnvs = {
    target?:
        | Array<FilterProjectEnvsTargetProjectsResponse1>
        | FilterProjectEnvsTargetProjectsResponse2
        | undefined;
    type?: FilterProjectEnvsResponseBodyProjectsResponse200Type | undefined;
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | FilterProjectEnvsContentHintProjectsResponse1
        | FilterProjectEnvsContentHintProjectsResponse2
        | FilterProjectEnvsContentHintProjectsResponse3
        | FilterProjectEnvsContentHintProjectsResponse4
        | FilterProjectEnvsContentHintProjectsResponse5
        | FilterProjectEnvsContentHintProjectsResponse6
        | FilterProjectEnvsContentHintProjectsResponse7
        | FilterProjectEnvsContentHintProjectsResponse8
        | FilterProjectEnvsContentHintProjectsResponse9
        | FilterProjectEnvsContentHintProjectsResponse10
        | FilterProjectEnvsContentHintProjectsResponse11
        | FilterProjectEnvsContentHintProjectsResponse12
        | FilterProjectEnvsContentHintProjectsResponse13
        | FilterProjectEnvsContentHintProjectsResponse14
        | null
        | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?:
        | FilterProjectEnvsResponseBodyProjectsInternalContentHint
        | null
        | undefined;
    /**
     * Whether `value` is decrypted.
     */
    decrypted?: boolean | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
    system?: boolean | undefined;
};

/**
 * The list of environment variables for the given project
 */
export type FilterProjectEnvsResponseBody3 = {
    envs: Array<ResponseBodyEnvs>;
};

export const FilterProjectEnvsTargetProjects2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
} as const;
export type FilterProjectEnvsTargetProjects2 = ClosedEnum<typeof FilterProjectEnvsTargetProjects2>;

export const FilterProjectEnvsTargetProjects1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
} as const;
export type FilterProjectEnvsTargetProjects1 = ClosedEnum<typeof FilterProjectEnvsTargetProjects1>;

export type FilterProjectEnvsResponseBodyProjectsTarget =
    | Array<FilterProjectEnvsTargetProjects1>
    | FilterProjectEnvsTargetProjects2;

export const FilterProjectEnvsResponseBodyProjectsResponseType = {
    Secret: "secret",
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
} as const;
export type FilterProjectEnvsResponseBodyProjectsResponseType = ClosedEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponseType
>;

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type =
    {
        IntegrationStoreSecret: "integration-store-secret",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type
    >;

export type FilterProjectEnvsContentHintProjects14 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type =
    {
        PostgresUrlNoSsl: "postgres-url-no-ssl",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type
    >;

export type FilterProjectEnvsContentHintProjects13 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type =
    {
        PostgresDatabase: "postgres-database",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type
    >;

export type FilterProjectEnvsContentHintProjects12 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type =
    {
        PostgresPassword: "postgres-password",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type
    >;

export type FilterProjectEnvsContentHintProjects11 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type =
    {
        PostgresHost: "postgres-host",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type
    >;

export type FilterProjectEnvsContentHintProjects10 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type =
    {
        PostgresUser: "postgres-user",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type
    >;

export type FilterProjectEnvsContentHintProjects9 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type =
    {
        PostgresPrismaUrl: "postgres-prisma-url",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type
    >;

export type FilterProjectEnvsContentHintProjects8 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type =
    {
        PostgresUrlNonPooling: "postgres-url-non-pooling",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type
    >;

export type FilterProjectEnvsContentHintProjects7 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type =
    {
        PostgresUrl: "postgres-url",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type
    >;

export type FilterProjectEnvsContentHintProjects6 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type =
    {
        BlobReadWriteToken: "blob-read-write-token",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type
    >;

export type FilterProjectEnvsContentHintProjects5 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type =
    {
        RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type
    >;

export type FilterProjectEnvsContentHintProjects4 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type =
    {
        RedisRestApiToken: "redis-rest-api-token",
    } as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type
    >;

export type FilterProjectEnvsContentHintProjects3 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType = {
    RedisRestApiUrl: "redis-rest-api-url",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType
    >;

export type FilterProjectEnvsContentHintProjects2 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type = {
    RedisUrl: "redis-url",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type
    >;

export type FilterProjectEnvsContentHintProjects1 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type;
    storeId: string;
};

export type FilterProjectEnvsResponseBodyContentHint =
    | FilterProjectEnvsContentHintProjects1
    | FilterProjectEnvsContentHintProjects2
    | FilterProjectEnvsContentHintProjects3
    | FilterProjectEnvsContentHintProjects4
    | FilterProjectEnvsContentHintProjects5
    | FilterProjectEnvsContentHintProjects6
    | FilterProjectEnvsContentHintProjects7
    | FilterProjectEnvsContentHintProjects8
    | FilterProjectEnvsContentHintProjects9
    | FilterProjectEnvsContentHintProjects10
    | FilterProjectEnvsContentHintProjects11
    | FilterProjectEnvsContentHintProjects12
    | FilterProjectEnvsContentHintProjects13
    | FilterProjectEnvsContentHintProjects14;

export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType = {
    FlagsSecret: "flags-secret",
} as const;
export type FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType = ClosedEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type FilterProjectEnvsResponseBodyInternalContentHint = {
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};

export type Envs = {
    target?: Array<FilterProjectEnvsTargetProjects1> | FilterProjectEnvsTargetProjects2 | undefined;
    type?: FilterProjectEnvsResponseBodyProjectsResponseType | undefined;
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | FilterProjectEnvsContentHintProjects1
        | FilterProjectEnvsContentHintProjects2
        | FilterProjectEnvsContentHintProjects3
        | FilterProjectEnvsContentHintProjects4
        | FilterProjectEnvsContentHintProjects5
        | FilterProjectEnvsContentHintProjects6
        | FilterProjectEnvsContentHintProjects7
        | FilterProjectEnvsContentHintProjects8
        | FilterProjectEnvsContentHintProjects9
        | FilterProjectEnvsContentHintProjects10
        | FilterProjectEnvsContentHintProjects11
        | FilterProjectEnvsContentHintProjects12
        | FilterProjectEnvsContentHintProjects13
        | FilterProjectEnvsContentHintProjects14
        | null
        | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: FilterProjectEnvsResponseBodyInternalContentHint | null | undefined;
    /**
     * Whether `value` is decrypted.
     */
    decrypted?: boolean | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
    system?: boolean | undefined;
};

export type FilterProjectEnvsResponseBody2 = {
    envs: Array<Envs>;
    /**
     * This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.
     */
    pagination: Pagination;
};

export const FilterProjectEnvsTarget2 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
} as const;
export type FilterProjectEnvsTarget2 = ClosedEnum<typeof FilterProjectEnvsTarget2>;

export const FilterProjectEnvsTarget1 = {
    Production: "production",
    Preview: "preview",
    Development: "development",
} as const;
export type FilterProjectEnvsTarget1 = ClosedEnum<typeof FilterProjectEnvsTarget1>;

export type FilterProjectEnvsResponseBodyTarget =
    | Array<FilterProjectEnvsTarget1>
    | FilterProjectEnvsTarget2;

export const FilterProjectEnvsResponseBodyType = {
    Secret: "secret",
    System: "system",
    Encrypted: "encrypted",
    Plain: "plain",
    Sensitive: "sensitive",
} as const;
export type FilterProjectEnvsResponseBodyType = ClosedEnum<
    typeof FilterProjectEnvsResponseBodyType
>;

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type = {
    IntegrationStoreSecret: "integration-store-secret",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type
    >;

export type FilterProjectEnvsContentHint14 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type = {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type
    >;

export type FilterProjectEnvsContentHint13 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type = {
    PostgresDatabase: "postgres-database",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type
    >;

export type FilterProjectEnvsContentHint12 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type = {
    PostgresPassword: "postgres-password",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type
    >;

export type FilterProjectEnvsContentHint11 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type = {
    PostgresHost: "postgres-host",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type
    >;

export type FilterProjectEnvsContentHint10 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type = {
    PostgresUser: "postgres-user",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type
    >;

export type FilterProjectEnvsContentHint9 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type = {
    PostgresPrismaUrl: "postgres-prisma-url",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type
    >;

export type FilterProjectEnvsContentHint8 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type = {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type
    >;

export type FilterProjectEnvsContentHint7 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType = {
    PostgresUrl: "postgres-url",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType =
    ClosedEnum<
        typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType
    >;

export type FilterProjectEnvsContentHint6 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType = {
    BlobReadWriteToken: "blob-read-write-token",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType = ClosedEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType
>;

export type FilterProjectEnvsContentHint5 = {
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponse200Type = {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
} as const;
export type FilterProjectEnvsContentHintProjectsResponse200Type = ClosedEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200Type
>;

export type FilterProjectEnvsContentHint4 = {
    type: FilterProjectEnvsContentHintProjectsResponse200Type;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsResponseType = {
    RedisRestApiToken: "redis-rest-api-token",
} as const;
export type FilterProjectEnvsContentHintProjectsResponseType = ClosedEnum<
    typeof FilterProjectEnvsContentHintProjectsResponseType
>;

export type FilterProjectEnvsContentHint3 = {
    type: FilterProjectEnvsContentHintProjectsResponseType;
    storeId: string;
};

export const FilterProjectEnvsContentHintProjectsType = {
    RedisRestApiUrl: "redis-rest-api-url",
} as const;
export type FilterProjectEnvsContentHintProjectsType = ClosedEnum<
    typeof FilterProjectEnvsContentHintProjectsType
>;

export type FilterProjectEnvsContentHint2 = {
    type: FilterProjectEnvsContentHintProjectsType;
    storeId: string;
};

export const FilterProjectEnvsContentHintType = {
    RedisUrl: "redis-url",
} as const;
export type FilterProjectEnvsContentHintType = ClosedEnum<typeof FilterProjectEnvsContentHintType>;

export type FilterProjectEnvsContentHint1 = {
    type: FilterProjectEnvsContentHintType;
    storeId: string;
};

export type ResponseBodyContentHint =
    | FilterProjectEnvsContentHint1
    | FilterProjectEnvsContentHint2
    | FilterProjectEnvsContentHint3
    | FilterProjectEnvsContentHint4
    | FilterProjectEnvsContentHint5
    | FilterProjectEnvsContentHint6
    | FilterProjectEnvsContentHint7
    | FilterProjectEnvsContentHint8
    | FilterProjectEnvsContentHint9
    | FilterProjectEnvsContentHint10
    | FilterProjectEnvsContentHint11
    | FilterProjectEnvsContentHint12
    | FilterProjectEnvsContentHint13
    | FilterProjectEnvsContentHint14;

export const FilterProjectEnvsResponseBodyProjectsType = {
    FlagsSecret: "flags-secret",
} as const;
export type FilterProjectEnvsResponseBodyProjectsType = ClosedEnum<
    typeof FilterProjectEnvsResponseBodyProjectsType
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type ResponseBodyInternalContentHint = {
    type: FilterProjectEnvsResponseBodyProjectsType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};

export type FilterProjectEnvsResponseBody1 = {
    target?: Array<FilterProjectEnvsTarget1> | FilterProjectEnvsTarget2 | undefined;
    type?: FilterProjectEnvsResponseBodyType | undefined;
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | FilterProjectEnvsContentHint1
        | FilterProjectEnvsContentHint2
        | FilterProjectEnvsContentHint3
        | FilterProjectEnvsContentHint4
        | FilterProjectEnvsContentHint5
        | FilterProjectEnvsContentHint6
        | FilterProjectEnvsContentHint7
        | FilterProjectEnvsContentHint8
        | FilterProjectEnvsContentHint9
        | FilterProjectEnvsContentHint10
        | FilterProjectEnvsContentHint11
        | FilterProjectEnvsContentHint12
        | FilterProjectEnvsContentHint13
        | FilterProjectEnvsContentHint14
        | null
        | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: ResponseBodyInternalContentHint | null | undefined;
    /**
     * Whether `value` is decrypted.
     */
    decrypted?: boolean | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
    system?: boolean | undefined;
};

/**
 * The list of environment variables for the given project
 */
export type FilterProjectEnvsResponseBody =
    | FilterProjectEnvsResponseBody3
    | FilterProjectEnvsResponseBody2
    | FilterProjectEnvsResponseBody1;

/** @internal */
export const Decrypt$inboundSchema: z.ZodNativeEnum<typeof Decrypt> = z.nativeEnum(Decrypt);

/** @internal */
export const Decrypt$outboundSchema: z.ZodNativeEnum<typeof Decrypt> = Decrypt$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Decrypt$ {
    /** @deprecated use `Decrypt$inboundSchema` instead. */
    export const inboundSchema = Decrypt$inboundSchema;
    /** @deprecated use `Decrypt$outboundSchema` instead. */
    export const outboundSchema = Decrypt$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsRequest$inboundSchema: z.ZodType<
    FilterProjectEnvsRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    idOrName: z.string(),
    gitBranch: z.string().optional(),
    decrypt: Decrypt$inboundSchema.optional(),
    source: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});

/** @internal */
export type FilterProjectEnvsRequest$Outbound = {
    idOrName: string;
    gitBranch?: string | undefined;
    decrypt?: string | undefined;
    source?: string | undefined;
    customEnvironmentId?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
};

/** @internal */
export const FilterProjectEnvsRequest$outboundSchema: z.ZodType<
    FilterProjectEnvsRequest$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsRequest
> = z.object({
    idOrName: z.string(),
    gitBranch: z.string().optional(),
    decrypt: Decrypt$outboundSchema.optional(),
    source: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsRequest$ {
    /** @deprecated use `FilterProjectEnvsRequest$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsRequest$inboundSchema;
    /** @deprecated use `FilterProjectEnvsRequest$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsRequest$outboundSchema;
    /** @deprecated use `FilterProjectEnvsRequest$Outbound` instead. */
    export type Outbound = FilterProjectEnvsRequest$Outbound;
}

/** @internal */
export const FilterProjectEnvsTargetProjectsResponse2$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjectsResponse2
> = z.nativeEnum(FilterProjectEnvsTargetProjectsResponse2);

/** @internal */
export const FilterProjectEnvsTargetProjectsResponse2$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjectsResponse2
> = FilterProjectEnvsTargetProjectsResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsTargetProjectsResponse2$ {
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse2$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsTargetProjectsResponse2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse2$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsTargetProjectsResponse2$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsTargetProjectsResponse1$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjectsResponse1
> = z.nativeEnum(FilterProjectEnvsTargetProjectsResponse1);

/** @internal */
export const FilterProjectEnvsTargetProjectsResponse1$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjectsResponse1
> = FilterProjectEnvsTargetProjectsResponse1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsTargetProjectsResponse1$ {
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse1$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsTargetProjectsResponse1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjectsResponse1$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsTargetProjectsResponse1$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsResponseTarget,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.array(FilterProjectEnvsTargetProjectsResponse1$inboundSchema),
    FilterProjectEnvsTargetProjectsResponse2$inboundSchema,
]);

/** @internal */
export type FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound = Array<string> | string;

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBodyProjectsResponseTarget
> = z.union([
    z.array(FilterProjectEnvsTargetProjectsResponse1$outboundSchema),
    FilterProjectEnvsTargetProjectsResponse2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsResponseTarget$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyProjectsResponseTarget$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsResponseBodyProjectsResponseTarget$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBodyProjectsResponseTarget$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200Type
> = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsResponse200Type);

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200Type
> = FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsResponse200Type$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse14$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse14,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse14$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse14$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse14$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse14
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs14Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse14$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse14$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse14$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse14$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse14$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse13$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse13,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse13$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse13$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse13$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse13
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs13Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse13$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse13$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse13$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse13$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse13$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse12$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse12,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse12$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse12$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse12$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse12
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs12Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse12$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse12$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse12$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse12$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse12$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse11$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse11,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse11$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse11$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse11$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse11
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs11Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse11$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse11$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse11$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse11$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse11$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse10$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse10,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse10$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse10$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse10$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse10
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs10Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse10$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse10$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse10$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse10$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse10$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse9$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse9,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse9$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse9$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse9$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse9
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs9Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse9$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse9$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse9$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse9$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse9$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse8$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse8,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse8$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse8$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse8$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse8
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs8Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse8$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse8$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse8$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse8$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse8$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse7$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse7,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse7$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse7$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse7$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse7
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs7Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse7$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse7$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse7$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse7$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse7$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse6$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse6,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse6$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse6$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse6$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse6
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs6Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse6$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse6$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse6$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse6$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse6$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse5$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse5,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse5$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse5$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse5$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse5
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs5Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse5$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse5$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse5$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse5$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse5$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse4$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse4,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse4$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse4$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse4$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse4
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs4Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse4$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse4$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse4$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse4$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse4$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse3$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse3,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse3$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse3$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse3$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse3
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Envs3Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse3$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse3$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse3$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse3$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse2$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse2,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse2$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse2$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse2$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse2
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3EnvsType$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse2$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse2$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse2$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse2$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse1$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse1,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjectsResponse1$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse1$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjectsResponse1$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjectsResponse1
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse1$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponse1$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse1$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjectsResponse1$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsContentHint,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$inboundSchema),
]);

/** @internal */
export type FilterProjectEnvsResponseBodyProjectsContentHint$Outbound =
    | FilterProjectEnvsContentHintProjectsResponse1$Outbound
    | FilterProjectEnvsContentHintProjectsResponse2$Outbound
    | FilterProjectEnvsContentHintProjectsResponse3$Outbound
    | FilterProjectEnvsContentHintProjectsResponse4$Outbound
    | FilterProjectEnvsContentHintProjectsResponse5$Outbound
    | FilterProjectEnvsContentHintProjectsResponse6$Outbound
    | FilterProjectEnvsContentHintProjectsResponse7$Outbound
    | FilterProjectEnvsContentHintProjectsResponse8$Outbound
    | FilterProjectEnvsContentHintProjectsResponse9$Outbound
    | FilterProjectEnvsContentHintProjectsResponse10$Outbound
    | FilterProjectEnvsContentHintProjectsResponse11$Outbound
    | FilterProjectEnvsContentHintProjectsResponse12$Outbound
    | FilterProjectEnvsContentHintProjectsResponse13$Outbound
    | FilterProjectEnvsContentHintProjectsResponse14$Outbound;

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsContentHint$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBodyProjectsContentHint
> = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyProjectsContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyProjectsContentHint$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsContentHint$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBodyProjectsContentHint$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type
> = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type);

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type
> = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsInternalContentHint,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$inboundSchema,
    encryptedValue: z.string(),
});

/** @internal */
export type FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBodyProjectsInternalContentHint
> = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJson3Type$outboundSchema,
    encryptedValue: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsInternalContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound;
}

/** @internal */
export const ResponseBodyEnvs$inboundSchema: z.ZodType<ResponseBodyEnvs, z.ZodTypeDef, unknown> =
    z.object({
        target: z
            .union([
                z.array(FilterProjectEnvsTargetProjectsResponse1$inboundSchema),
                FilterProjectEnvsTargetProjectsResponse2$inboundSchema,
            ])
            .optional(),
        type: FilterProjectEnvsResponseBodyProjectsResponse200Type$inboundSchema.optional(),
        id: z.string().optional(),
        key: z.string().optional(),
        value: z.string().optional(),
        configurationId: z.nullable(z.string()).optional(),
        createdAt: z.number().optional(),
        updatedAt: z.number().optional(),
        createdBy: z.nullable(z.string()).optional(),
        updatedBy: z.nullable(z.string()).optional(),
        gitBranch: z.string().optional(),
        edgeConfigId: z.nullable(z.string()).optional(),
        edgeConfigTokenId: z.nullable(z.string()).optional(),
        contentHint: z
            .nullable(
                z.union([
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$inboundSchema),
                    z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$inboundSchema),
                ])
            )
            .optional(),
        internalContentHint: z
            .nullable(
                z.lazy(() => FilterProjectEnvsResponseBodyProjectsInternalContentHint$inboundSchema)
            )
            .optional(),
        decrypted: z.boolean().optional(),
        comment: z.string().optional(),
        customEnvironmentId: z.string().optional(),
        system: z.boolean().optional(),
    });

/** @internal */
export type ResponseBodyEnvs$Outbound = {
    target?: Array<string> | string | undefined;
    type?: string | undefined;
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | FilterProjectEnvsContentHintProjectsResponse1$Outbound
        | FilterProjectEnvsContentHintProjectsResponse2$Outbound
        | FilterProjectEnvsContentHintProjectsResponse3$Outbound
        | FilterProjectEnvsContentHintProjectsResponse4$Outbound
        | FilterProjectEnvsContentHintProjectsResponse5$Outbound
        | FilterProjectEnvsContentHintProjectsResponse6$Outbound
        | FilterProjectEnvsContentHintProjectsResponse7$Outbound
        | FilterProjectEnvsContentHintProjectsResponse8$Outbound
        | FilterProjectEnvsContentHintProjectsResponse9$Outbound
        | FilterProjectEnvsContentHintProjectsResponse10$Outbound
        | FilterProjectEnvsContentHintProjectsResponse11$Outbound
        | FilterProjectEnvsContentHintProjectsResponse12$Outbound
        | FilterProjectEnvsContentHintProjectsResponse13$Outbound
        | FilterProjectEnvsContentHintProjectsResponse14$Outbound
        | null
        | undefined;
    internalContentHint?:
        | FilterProjectEnvsResponseBodyProjectsInternalContentHint$Outbound
        | null
        | undefined;
    decrypted?: boolean | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
    system?: boolean | undefined;
};

/** @internal */
export const ResponseBodyEnvs$outboundSchema: z.ZodType<
    ResponseBodyEnvs$Outbound,
    z.ZodTypeDef,
    ResponseBodyEnvs
> = z.object({
    target: z
        .union([
            z.array(FilterProjectEnvsTargetProjectsResponse1$outboundSchema),
            FilterProjectEnvsTargetProjectsResponse2$outboundSchema,
        ])
        .optional(),
    type: FilterProjectEnvsResponseBodyProjectsResponse200Type$outboundSchema.optional(),
    id: z.string().optional(),
    key: z.string().optional(),
    value: z.string().optional(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z
        .nullable(
            z.union([
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse1$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse2$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse3$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse4$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse5$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse6$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse7$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse8$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse9$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse10$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse11$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse12$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse13$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjectsResponse14$outboundSchema),
            ])
        )
        .optional(),
    internalContentHint: z
        .nullable(
            z.lazy(() => FilterProjectEnvsResponseBodyProjectsInternalContentHint$outboundSchema)
        )
        .optional(),
    decrypted: z.boolean().optional(),
    comment: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    system: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyEnvs$ {
    /** @deprecated use `ResponseBodyEnvs$inboundSchema` instead. */
    export const inboundSchema = ResponseBodyEnvs$inboundSchema;
    /** @deprecated use `ResponseBodyEnvs$outboundSchema` instead. */
    export const outboundSchema = ResponseBodyEnvs$outboundSchema;
    /** @deprecated use `ResponseBodyEnvs$Outbound` instead. */
    export type Outbound = ResponseBodyEnvs$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBody3$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody3,
    z.ZodTypeDef,
    unknown
> = z.object({
    envs: z.array(z.lazy(() => ResponseBodyEnvs$inboundSchema)),
});

/** @internal */
export type FilterProjectEnvsResponseBody3$Outbound = {
    envs: Array<ResponseBodyEnvs$Outbound>;
};

/** @internal */
export const FilterProjectEnvsResponseBody3$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody3$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBody3
> = z.object({
    envs: z.array(z.lazy(() => ResponseBodyEnvs$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBody3$ {
    /** @deprecated use `FilterProjectEnvsResponseBody3$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBody3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody3$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBody3$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody3$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBody3$Outbound;
}

/** @internal */
export const FilterProjectEnvsTargetProjects2$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjects2
> = z.nativeEnum(FilterProjectEnvsTargetProjects2);

/** @internal */
export const FilterProjectEnvsTargetProjects2$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjects2
> = FilterProjectEnvsTargetProjects2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsTargetProjects2$ {
    /** @deprecated use `FilterProjectEnvsTargetProjects2$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsTargetProjects2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjects2$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsTargetProjects2$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsTargetProjects1$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjects1
> = z.nativeEnum(FilterProjectEnvsTargetProjects1);

/** @internal */
export const FilterProjectEnvsTargetProjects1$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTargetProjects1
> = FilterProjectEnvsTargetProjects1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsTargetProjects1$ {
    /** @deprecated use `FilterProjectEnvsTargetProjects1$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsTargetProjects1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTargetProjects1$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsTargetProjects1$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsTarget,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.array(FilterProjectEnvsTargetProjects1$inboundSchema),
    FilterProjectEnvsTargetProjects2$inboundSchema,
]);

/** @internal */
export type FilterProjectEnvsResponseBodyProjectsTarget$Outbound = Array<string> | string;

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyProjectsTarget$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBodyProjectsTarget
> = z.union([
    z.array(FilterProjectEnvsTargetProjects1$outboundSchema),
    FilterProjectEnvsTargetProjects2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsTarget$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyProjectsTarget$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyProjectsTarget$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsTarget$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBodyProjectsTarget$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponseType
> = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsResponseType);

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponseType
> = FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsResponseType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects14$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects14,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects14$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects14$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects14$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects14
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs14Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects14$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects14$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects14$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects14$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects14$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects13$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects13,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects13$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects13$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects13$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects13
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs13Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects13$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects13$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects13$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects13$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects13$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects12$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects12,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects12$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects12$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects12$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects12
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs12Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects12$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects12$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects12$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects12$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects12$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects11$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects11,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects11$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects11$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects11$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects11
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs11Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects11$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects11$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects11$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects11$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects11$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects10$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects10,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects10$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects10$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects10$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects10
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs10Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects10$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects10$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects10$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects10$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects10$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects9$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects9,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects9$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects9$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects9$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects9
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs9Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects9$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects9$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects9$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects9$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects9$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects8$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects8,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects8$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects8$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects8$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects8
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs8Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects8$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects8$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects8$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects8$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects8$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects7$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects7,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects7$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects7$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects7$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects7
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs7Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects7$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects7$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects7$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects7$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects7$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects6$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects6,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects6$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects6$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects6$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects6
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs6Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects6$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects6$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects6$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects6$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects6$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects5$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects5,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects5$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects5$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects5$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects5
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs5Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects5$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects5$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects5$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects5$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects5$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects4$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects4,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects4$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects4$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects4$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects4
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs4Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects4$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects4$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects4$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects4$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects4$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects3$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects3,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects3$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects3$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects3$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects3
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Envs3Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects3$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects3$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects3$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects3$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType
> = z.nativeEnum(
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType
);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType
> =
    FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects2$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects2,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects2$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects2$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects2$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects2
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2EnvsType$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects2$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects2$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects2$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects2$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjects1$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects1,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHintProjects1$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHintProjects1$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHintProjects1$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHintProjects1
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjects1$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjects1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjects1$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjects1$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHintProjects1$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyContentHint$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyContentHint,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjects1$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects2$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects3$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects4$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects5$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects6$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects7$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects8$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects9$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects10$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects11$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects12$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects13$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects14$inboundSchema),
]);

/** @internal */
export type FilterProjectEnvsResponseBodyContentHint$Outbound =
    | FilterProjectEnvsContentHintProjects1$Outbound
    | FilterProjectEnvsContentHintProjects2$Outbound
    | FilterProjectEnvsContentHintProjects3$Outbound
    | FilterProjectEnvsContentHintProjects4$Outbound
    | FilterProjectEnvsContentHintProjects5$Outbound
    | FilterProjectEnvsContentHintProjects6$Outbound
    | FilterProjectEnvsContentHintProjects7$Outbound
    | FilterProjectEnvsContentHintProjects8$Outbound
    | FilterProjectEnvsContentHintProjects9$Outbound
    | FilterProjectEnvsContentHintProjects10$Outbound
    | FilterProjectEnvsContentHintProjects11$Outbound
    | FilterProjectEnvsContentHintProjects12$Outbound
    | FilterProjectEnvsContentHintProjects13$Outbound
    | FilterProjectEnvsContentHintProjects14$Outbound;

/** @internal */
export const FilterProjectEnvsResponseBodyContentHint$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyContentHint$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBodyContentHint
> = z.union([
    z.lazy(() => FilterProjectEnvsContentHintProjects1$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects2$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects3$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects4$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects5$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects6$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects7$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects8$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects9$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects10$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects11$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects12$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects13$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHintProjects14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyContentHint$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyContentHint$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBodyContentHint$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType
> = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType);

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType
> = FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyInternalContentHint,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$inboundSchema,
    encryptedValue: z.string(),
});

/** @internal */
export type FilterProjectEnvsResponseBodyInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};

/** @internal */
export const FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyInternalContentHint$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBodyInternalContentHint
> = z.object({
    type: FilterProjectEnvsResponseBodyProjectsResponse200ApplicationJSONType$outboundSchema,
    encryptedValue: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyInternalContentHint$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyInternalContentHint$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBodyInternalContentHint$Outbound;
}

/** @internal */
export const Envs$inboundSchema: z.ZodType<Envs, z.ZodTypeDef, unknown> = z.object({
    target: z
        .union([
            z.array(FilterProjectEnvsTargetProjects1$inboundSchema),
            FilterProjectEnvsTargetProjects2$inboundSchema,
        ])
        .optional(),
    type: FilterProjectEnvsResponseBodyProjectsResponseType$inboundSchema.optional(),
    id: z.string().optional(),
    key: z.string().optional(),
    value: z.string().optional(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z
        .nullable(
            z.union([
                z.lazy(() => FilterProjectEnvsContentHintProjects1$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects2$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects3$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects4$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects5$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects6$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects7$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects8$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects9$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects10$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects11$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects12$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects13$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects14$inboundSchema),
            ])
        )
        .optional(),
    internalContentHint: z
        .nullable(z.lazy(() => FilterProjectEnvsResponseBodyInternalContentHint$inboundSchema))
        .optional(),
    decrypted: z.boolean().optional(),
    comment: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    system: z.boolean().optional(),
});

/** @internal */
export type Envs$Outbound = {
    target?: Array<string> | string | undefined;
    type?: string | undefined;
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | FilterProjectEnvsContentHintProjects1$Outbound
        | FilterProjectEnvsContentHintProjects2$Outbound
        | FilterProjectEnvsContentHintProjects3$Outbound
        | FilterProjectEnvsContentHintProjects4$Outbound
        | FilterProjectEnvsContentHintProjects5$Outbound
        | FilterProjectEnvsContentHintProjects6$Outbound
        | FilterProjectEnvsContentHintProjects7$Outbound
        | FilterProjectEnvsContentHintProjects8$Outbound
        | FilterProjectEnvsContentHintProjects9$Outbound
        | FilterProjectEnvsContentHintProjects10$Outbound
        | FilterProjectEnvsContentHintProjects11$Outbound
        | FilterProjectEnvsContentHintProjects12$Outbound
        | FilterProjectEnvsContentHintProjects13$Outbound
        | FilterProjectEnvsContentHintProjects14$Outbound
        | null
        | undefined;
    internalContentHint?:
        | FilterProjectEnvsResponseBodyInternalContentHint$Outbound
        | null
        | undefined;
    decrypted?: boolean | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
    system?: boolean | undefined;
};

/** @internal */
export const Envs$outboundSchema: z.ZodType<Envs$Outbound, z.ZodTypeDef, Envs> = z.object({
    target: z
        .union([
            z.array(FilterProjectEnvsTargetProjects1$outboundSchema),
            FilterProjectEnvsTargetProjects2$outboundSchema,
        ])
        .optional(),
    type: FilterProjectEnvsResponseBodyProjectsResponseType$outboundSchema.optional(),
    id: z.string().optional(),
    key: z.string().optional(),
    value: z.string().optional(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z
        .nullable(
            z.union([
                z.lazy(() => FilterProjectEnvsContentHintProjects1$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects2$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects3$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects4$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects5$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects6$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects7$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects8$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects9$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects10$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects11$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects12$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects13$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHintProjects14$outboundSchema),
            ])
        )
        .optional(),
    internalContentHint: z
        .nullable(z.lazy(() => FilterProjectEnvsResponseBodyInternalContentHint$outboundSchema))
        .optional(),
    decrypted: z.boolean().optional(),
    comment: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    system: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Envs$ {
    /** @deprecated use `Envs$inboundSchema` instead. */
    export const inboundSchema = Envs$inboundSchema;
    /** @deprecated use `Envs$outboundSchema` instead. */
    export const outboundSchema = Envs$outboundSchema;
    /** @deprecated use `Envs$Outbound` instead. */
    export type Outbound = Envs$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBody2$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody2,
    z.ZodTypeDef,
    unknown
> = z.object({
    envs: z.array(z.lazy(() => Envs$inboundSchema)),
    pagination: Pagination$inboundSchema,
});

/** @internal */
export type FilterProjectEnvsResponseBody2$Outbound = {
    envs: Array<Envs$Outbound>;
    pagination: Pagination$Outbound;
};

/** @internal */
export const FilterProjectEnvsResponseBody2$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody2$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBody2
> = z.object({
    envs: z.array(z.lazy(() => Envs$outboundSchema)),
    pagination: Pagination$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBody2$ {
    /** @deprecated use `FilterProjectEnvsResponseBody2$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBody2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody2$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBody2$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody2$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBody2$Outbound;
}

/** @internal */
export const FilterProjectEnvsTarget2$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTarget2
> = z.nativeEnum(FilterProjectEnvsTarget2);

/** @internal */
export const FilterProjectEnvsTarget2$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTarget2
> = FilterProjectEnvsTarget2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsTarget2$ {
    /** @deprecated use `FilterProjectEnvsTarget2$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsTarget2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTarget2$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsTarget2$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsTarget1$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTarget1
> = z.nativeEnum(FilterProjectEnvsTarget1);

/** @internal */
export const FilterProjectEnvsTarget1$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsTarget1
> = FilterProjectEnvsTarget1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsTarget1$ {
    /** @deprecated use `FilterProjectEnvsTarget1$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsTarget1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsTarget1$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsTarget1$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsResponseBodyTarget$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyTarget,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.array(FilterProjectEnvsTarget1$inboundSchema),
    FilterProjectEnvsTarget2$inboundSchema,
]);

/** @internal */
export type FilterProjectEnvsResponseBodyTarget$Outbound = Array<string> | string;

/** @internal */
export const FilterProjectEnvsResponseBodyTarget$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBodyTarget$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBodyTarget
> = z.union([
    z.array(FilterProjectEnvsTarget1$outboundSchema),
    FilterProjectEnvsTarget2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyTarget$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyTarget$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyTarget$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyTarget$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBodyTarget$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyType
> = z.nativeEnum(FilterProjectEnvsResponseBodyType);

/** @internal */
export const FilterProjectEnvsResponseBodyType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyType
> = FilterProjectEnvsResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyType$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyType$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint14$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint14,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint14$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint14$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint14$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint14
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint14$ {
    /** @deprecated use `FilterProjectEnvsContentHint14$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint14$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint14$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint14$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint14$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint14$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint13$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint13,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint13$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint13$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint13$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint13
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint13$ {
    /** @deprecated use `FilterProjectEnvsContentHint13$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint13$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint13$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint13$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint13$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint13$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint12$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint12,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint12$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint12$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint12$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint12
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint12$ {
    /** @deprecated use `FilterProjectEnvsContentHint12$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint12$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint12$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint12$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint12$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint12$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint11$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint11,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint11$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint11$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint11$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint11
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint11$ {
    /** @deprecated use `FilterProjectEnvsContentHint11$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint11$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint11$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint11$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint11$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint11$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint10$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint10,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint10$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint10$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint10$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint10
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint10$ {
    /** @deprecated use `FilterProjectEnvsContentHint10$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint10$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint10$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint10$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint10$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint10$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint9$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint9,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint9$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint9$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint9$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint9
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint9$ {
    /** @deprecated use `FilterProjectEnvsContentHint9$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint9$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint9$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint9$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint9$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint9$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint8$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint8,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint8$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint8$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint8$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint8
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint8$ {
    /** @deprecated use `FilterProjectEnvsContentHint8$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint8$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint8$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint8$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint8$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint8$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint7$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint7,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint7$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint7$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint7$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint7
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint7$ {
    /** @deprecated use `FilterProjectEnvsContentHint7$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint7$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint7$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint7$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint7$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint7$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint6$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint6,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint6$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint6$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint6$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint6
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint6$ {
    /** @deprecated use `FilterProjectEnvsContentHint6$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint6$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint6$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint6$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint6$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint6$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType
> = FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema` instead. */
    export const inboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint5$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint5,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint5$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint5$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint5$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint5
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200ApplicationJSONType$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint5$ {
    /** @deprecated use `FilterProjectEnvsContentHint5$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint5$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint5$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint5$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint5$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint5$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200Type
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponse200Type);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponse200Type
> = FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponse200Type$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema` instead. */
    export const outboundSchema =
        FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint4$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint4,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200Type$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint4$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint4$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint4$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint4
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponse200Type$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint4$ {
    /** @deprecated use `FilterProjectEnvsContentHint4$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint4$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint4$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint4$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint4$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint4$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponseType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponseType
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsResponseType);

/** @internal */
export const FilterProjectEnvsContentHintProjectsResponseType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsResponseType
> = FilterProjectEnvsContentHintProjectsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsResponseType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponseType$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsResponseType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsResponseType$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsResponseType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint3$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint3,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponseType$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint3$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint3$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint3$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint3
> = z.object({
    type: FilterProjectEnvsContentHintProjectsResponseType$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint3$ {
    /** @deprecated use `FilterProjectEnvsContentHint3$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint3$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint3$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint3$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint3$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint3$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintProjectsType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsType
> = z.nativeEnum(FilterProjectEnvsContentHintProjectsType);

/** @internal */
export const FilterProjectEnvsContentHintProjectsType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintProjectsType
> = FilterProjectEnvsContentHintProjectsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintProjectsType$ {
    /** @deprecated use `FilterProjectEnvsContentHintProjectsType$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintProjectsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintProjectsType$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintProjectsType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint2$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint2,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintProjectsType$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint2$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint2$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint2$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint2
> = z.object({
    type: FilterProjectEnvsContentHintProjectsType$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint2$ {
    /** @deprecated use `FilterProjectEnvsContentHint2$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint2$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint2$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint2$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint2$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint2$Outbound;
}

/** @internal */
export const FilterProjectEnvsContentHintType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintType
> = z.nativeEnum(FilterProjectEnvsContentHintType);

/** @internal */
export const FilterProjectEnvsContentHintType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsContentHintType
> = FilterProjectEnvsContentHintType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHintType$ {
    /** @deprecated use `FilterProjectEnvsContentHintType$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHintType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHintType$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHintType$outboundSchema;
}

/** @internal */
export const FilterProjectEnvsContentHint1$inboundSchema: z.ZodType<
    FilterProjectEnvsContentHint1,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsContentHintType$inboundSchema,
    storeId: z.string(),
});

/** @internal */
export type FilterProjectEnvsContentHint1$Outbound = {
    type: string;
    storeId: string;
};

/** @internal */
export const FilterProjectEnvsContentHint1$outboundSchema: z.ZodType<
    FilterProjectEnvsContentHint1$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsContentHint1
> = z.object({
    type: FilterProjectEnvsContentHintType$outboundSchema,
    storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsContentHint1$ {
    /** @deprecated use `FilterProjectEnvsContentHint1$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsContentHint1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint1$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsContentHint1$outboundSchema;
    /** @deprecated use `FilterProjectEnvsContentHint1$Outbound` instead. */
    export type Outbound = FilterProjectEnvsContentHint1$Outbound;
}

/** @internal */
export const ResponseBodyContentHint$inboundSchema: z.ZodType<
    ResponseBodyContentHint,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => FilterProjectEnvsContentHint1$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint2$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint3$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint4$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint5$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint6$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint7$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint8$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint9$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint10$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint11$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint12$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint13$inboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint14$inboundSchema),
]);

/** @internal */
export type ResponseBodyContentHint$Outbound =
    | FilterProjectEnvsContentHint1$Outbound
    | FilterProjectEnvsContentHint2$Outbound
    | FilterProjectEnvsContentHint3$Outbound
    | FilterProjectEnvsContentHint4$Outbound
    | FilterProjectEnvsContentHint5$Outbound
    | FilterProjectEnvsContentHint6$Outbound
    | FilterProjectEnvsContentHint7$Outbound
    | FilterProjectEnvsContentHint8$Outbound
    | FilterProjectEnvsContentHint9$Outbound
    | FilterProjectEnvsContentHint10$Outbound
    | FilterProjectEnvsContentHint11$Outbound
    | FilterProjectEnvsContentHint12$Outbound
    | FilterProjectEnvsContentHint13$Outbound
    | FilterProjectEnvsContentHint14$Outbound;

/** @internal */
export const ResponseBodyContentHint$outboundSchema: z.ZodType<
    ResponseBodyContentHint$Outbound,
    z.ZodTypeDef,
    ResponseBodyContentHint
> = z.union([
    z.lazy(() => FilterProjectEnvsContentHint1$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint2$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint3$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint4$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint5$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint6$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint7$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint8$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint9$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint10$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint11$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint12$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint13$outboundSchema),
    z.lazy(() => FilterProjectEnvsContentHint14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyContentHint$ {
    /** @deprecated use `ResponseBodyContentHint$inboundSchema` instead. */
    export const inboundSchema = ResponseBodyContentHint$inboundSchema;
    /** @deprecated use `ResponseBodyContentHint$outboundSchema` instead. */
    export const outboundSchema = ResponseBodyContentHint$outboundSchema;
    /** @deprecated use `ResponseBodyContentHint$Outbound` instead. */
    export type Outbound = ResponseBodyContentHint$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsType$inboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsType
> = z.nativeEnum(FilterProjectEnvsResponseBodyProjectsType);

/** @internal */
export const FilterProjectEnvsResponseBodyProjectsType$outboundSchema: z.ZodNativeEnum<
    typeof FilterProjectEnvsResponseBodyProjectsType
> = FilterProjectEnvsResponseBodyProjectsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBodyProjectsType$ {
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsType$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBodyProjectsType$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBodyProjectsType$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBodyProjectsType$outboundSchema;
}

/** @internal */
export const ResponseBodyInternalContentHint$inboundSchema: z.ZodType<
    ResponseBodyInternalContentHint,
    z.ZodTypeDef,
    unknown
> = z.object({
    type: FilterProjectEnvsResponseBodyProjectsType$inboundSchema,
    encryptedValue: z.string(),
});

/** @internal */
export type ResponseBodyInternalContentHint$Outbound = {
    type: string;
    encryptedValue: string;
};

/** @internal */
export const ResponseBodyInternalContentHint$outboundSchema: z.ZodType<
    ResponseBodyInternalContentHint$Outbound,
    z.ZodTypeDef,
    ResponseBodyInternalContentHint
> = z.object({
    type: FilterProjectEnvsResponseBodyProjectsType$outboundSchema,
    encryptedValue: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyInternalContentHint$ {
    /** @deprecated use `ResponseBodyInternalContentHint$inboundSchema` instead. */
    export const inboundSchema = ResponseBodyInternalContentHint$inboundSchema;
    /** @deprecated use `ResponseBodyInternalContentHint$outboundSchema` instead. */
    export const outboundSchema = ResponseBodyInternalContentHint$outboundSchema;
    /** @deprecated use `ResponseBodyInternalContentHint$Outbound` instead. */
    export type Outbound = ResponseBodyInternalContentHint$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBody1$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody1,
    z.ZodTypeDef,
    unknown
> = z.object({
    target: z
        .union([
            z.array(FilterProjectEnvsTarget1$inboundSchema),
            FilterProjectEnvsTarget2$inboundSchema,
        ])
        .optional(),
    type: FilterProjectEnvsResponseBodyType$inboundSchema.optional(),
    id: z.string().optional(),
    key: z.string().optional(),
    value: z.string().optional(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z
        .nullable(
            z.union([
                z.lazy(() => FilterProjectEnvsContentHint1$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint2$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint3$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint4$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint5$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint6$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint7$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint8$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint9$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint10$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint11$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint12$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint13$inboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint14$inboundSchema),
            ])
        )
        .optional(),
    internalContentHint: z
        .nullable(z.lazy(() => ResponseBodyInternalContentHint$inboundSchema))
        .optional(),
    decrypted: z.boolean().optional(),
    comment: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    system: z.boolean().optional(),
});

/** @internal */
export type FilterProjectEnvsResponseBody1$Outbound = {
    target?: Array<string> | string | undefined;
    type?: string | undefined;
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | FilterProjectEnvsContentHint1$Outbound
        | FilterProjectEnvsContentHint2$Outbound
        | FilterProjectEnvsContentHint3$Outbound
        | FilterProjectEnvsContentHint4$Outbound
        | FilterProjectEnvsContentHint5$Outbound
        | FilterProjectEnvsContentHint6$Outbound
        | FilterProjectEnvsContentHint7$Outbound
        | FilterProjectEnvsContentHint8$Outbound
        | FilterProjectEnvsContentHint9$Outbound
        | FilterProjectEnvsContentHint10$Outbound
        | FilterProjectEnvsContentHint11$Outbound
        | FilterProjectEnvsContentHint12$Outbound
        | FilterProjectEnvsContentHint13$Outbound
        | FilterProjectEnvsContentHint14$Outbound
        | null
        | undefined;
    internalContentHint?: ResponseBodyInternalContentHint$Outbound | null | undefined;
    decrypted?: boolean | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
    system?: boolean | undefined;
};

/** @internal */
export const FilterProjectEnvsResponseBody1$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody1$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBody1
> = z.object({
    target: z
        .union([
            z.array(FilterProjectEnvsTarget1$outboundSchema),
            FilterProjectEnvsTarget2$outboundSchema,
        ])
        .optional(),
    type: FilterProjectEnvsResponseBodyType$outboundSchema.optional(),
    id: z.string().optional(),
    key: z.string().optional(),
    value: z.string().optional(),
    configurationId: z.nullable(z.string()).optional(),
    createdAt: z.number().optional(),
    updatedAt: z.number().optional(),
    createdBy: z.nullable(z.string()).optional(),
    updatedBy: z.nullable(z.string()).optional(),
    gitBranch: z.string().optional(),
    edgeConfigId: z.nullable(z.string()).optional(),
    edgeConfigTokenId: z.nullable(z.string()).optional(),
    contentHint: z
        .nullable(
            z.union([
                z.lazy(() => FilterProjectEnvsContentHint1$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint2$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint3$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint4$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint5$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint6$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint7$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint8$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint9$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint10$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint11$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint12$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint13$outboundSchema),
                z.lazy(() => FilterProjectEnvsContentHint14$outboundSchema),
            ])
        )
        .optional(),
    internalContentHint: z
        .nullable(z.lazy(() => ResponseBodyInternalContentHint$outboundSchema))
        .optional(),
    decrypted: z.boolean().optional(),
    comment: z.string().optional(),
    customEnvironmentId: z.string().optional(),
    system: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBody1$ {
    /** @deprecated use `FilterProjectEnvsResponseBody1$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBody1$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody1$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBody1$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody1$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBody1$Outbound;
}

/** @internal */
export const FilterProjectEnvsResponseBody$inboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    z.lazy(() => FilterProjectEnvsResponseBody3$inboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody2$inboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody1$inboundSchema),
]);

/** @internal */
export type FilterProjectEnvsResponseBody$Outbound =
    | FilterProjectEnvsResponseBody3$Outbound
    | FilterProjectEnvsResponseBody2$Outbound
    | FilterProjectEnvsResponseBody1$Outbound;

/** @internal */
export const FilterProjectEnvsResponseBody$outboundSchema: z.ZodType<
    FilterProjectEnvsResponseBody$Outbound,
    z.ZodTypeDef,
    FilterProjectEnvsResponseBody
> = z.union([
    z.lazy(() => FilterProjectEnvsResponseBody3$outboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody2$outboundSchema),
    z.lazy(() => FilterProjectEnvsResponseBody1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FilterProjectEnvsResponseBody$ {
    /** @deprecated use `FilterProjectEnvsResponseBody$inboundSchema` instead. */
    export const inboundSchema = FilterProjectEnvsResponseBody$inboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody$outboundSchema` instead. */
    export const outboundSchema = FilterProjectEnvsResponseBody$outboundSchema;
    /** @deprecated use `FilterProjectEnvsResponseBody$Outbound` instead. */
    export type Outbound = FilterProjectEnvsResponseBody$Outbound;
}
