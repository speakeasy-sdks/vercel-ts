/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type FlagJSONValue = string | number | boolean | Array<FlagJSONValue> | {
  [k: string]: FlagJSONValue;
};

/** @internal */
export const FlagJSONValue$inboundSchema: z.ZodType<
  FlagJSONValue,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.lazy(() => FlagJSONValue$inboundSchema)),
  z.record(z.lazy(() => FlagJSONValue$inboundSchema)),
]);

/** @internal */
export type FlagJSONValue$Outbound =
  | string
  | number
  | boolean
  | Array<FlagJSONValue$Outbound>
  | { [k: string]: FlagJSONValue$Outbound };

/** @internal */
export const FlagJSONValue$outboundSchema: z.ZodType<
  FlagJSONValue$Outbound,
  z.ZodTypeDef,
  FlagJSONValue
> = z.union([
  z.string(),
  z.number(),
  z.boolean(),
  z.array(z.lazy(() => FlagJSONValue$outboundSchema)),
  z.record(z.lazy(() => FlagJSONValue$outboundSchema)),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagJSONValue$ {
  /** @deprecated use `FlagJSONValue$inboundSchema` instead. */
  export const inboundSchema = FlagJSONValue$inboundSchema;
  /** @deprecated use `FlagJSONValue$outboundSchema` instead. */
  export const outboundSchema = FlagJSONValue$outboundSchema;
  /** @deprecated use `FlagJSONValue$Outbound` instead. */
  export type Outbound = FlagJSONValue$Outbound;
}
