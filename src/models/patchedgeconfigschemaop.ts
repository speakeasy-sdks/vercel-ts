/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import * as z from "zod";

export type PatchEdgeConfigSchemaRequestBody = {
    definition?: any | undefined;
};

export type PatchEdgeConfigSchemaRequest = {
    edgeConfigId: string;
    dryRun?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody?: PatchEdgeConfigSchemaRequestBody | undefined;
};

/**
 * The JSON schema uploaded by the user
 */
export type PatchEdgeConfigSchemaResponseBody = {};

/** @internal */
export namespace PatchEdgeConfigSchemaRequestBody$ {
    export const inboundSchema: z.ZodType<PatchEdgeConfigSchemaRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            definition: z.any().optional(),
        });

    export type Outbound = {
        definition?: any | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PatchEdgeConfigSchemaRequestBody
    > = z.object({
        definition: z.any().optional(),
    });
}

/** @internal */
export namespace PatchEdgeConfigSchemaRequest$ {
    export const inboundSchema: z.ZodType<PatchEdgeConfigSchemaRequest, z.ZodTypeDef, unknown> = z
        .object({
            edgeConfigId: z.string(),
            dryRun: z.string().optional(),
            teamId: z.string().optional(),
            slug: z.string().optional(),
            RequestBody: z.lazy(() => PatchEdgeConfigSchemaRequestBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                RequestBody: "requestBody",
            });
        });

    export type Outbound = {
        edgeConfigId: string;
        dryRun?: string | undefined;
        teamId?: string | undefined;
        slug?: string | undefined;
        RequestBody?: PatchEdgeConfigSchemaRequestBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PatchEdgeConfigSchemaRequest> = z
        .object({
            edgeConfigId: z.string(),
            dryRun: z.string().optional(),
            teamId: z.string().optional(),
            slug: z.string().optional(),
            requestBody: z.lazy(() => PatchEdgeConfigSchemaRequestBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                requestBody: "RequestBody",
            });
        });
}

/** @internal */
export namespace PatchEdgeConfigSchemaResponseBody$ {
    export const inboundSchema: z.ZodType<
        PatchEdgeConfigSchemaResponseBody,
        z.ZodTypeDef,
        unknown
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PatchEdgeConfigSchemaResponseBody
    > = z.object({});
}
