/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives.js";
import * as z from "zod";

export type DeleteTokensRequestBody = {
    tokens: Array<string>;
};

export type DeleteTokensRequest = {
    edgeConfigId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody?: DeleteTokensRequestBody | undefined;
};

/** @internal */
export const DeleteTokensRequestBody$inboundSchema: z.ZodType<
    DeleteTokensRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    tokens: z.array(z.string()),
});

/** @internal */
export type DeleteTokensRequestBody$Outbound = {
    tokens: Array<string>;
};

/** @internal */
export const DeleteTokensRequestBody$outboundSchema: z.ZodType<
    DeleteTokensRequestBody$Outbound,
    z.ZodTypeDef,
    DeleteTokensRequestBody
> = z.object({
    tokens: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTokensRequestBody$ {
    /** @deprecated use `DeleteTokensRequestBody$inboundSchema` instead. */
    export const inboundSchema = DeleteTokensRequestBody$inboundSchema;
    /** @deprecated use `DeleteTokensRequestBody$outboundSchema` instead. */
    export const outboundSchema = DeleteTokensRequestBody$outboundSchema;
    /** @deprecated use `DeleteTokensRequestBody$Outbound` instead. */
    export type Outbound = DeleteTokensRequestBody$Outbound;
}

/** @internal */
export const DeleteTokensRequest$inboundSchema: z.ZodType<
    DeleteTokensRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        edgeConfigId: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
        RequestBody: z.lazy(() => DeleteTokensRequestBody$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type DeleteTokensRequest$Outbound = {
    edgeConfigId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody?: DeleteTokensRequestBody$Outbound | undefined;
};

/** @internal */
export const DeleteTokensRequest$outboundSchema: z.ZodType<
    DeleteTokensRequest$Outbound,
    z.ZodTypeDef,
    DeleteTokensRequest
> = z
    .object({
        edgeConfigId: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
        requestBody: z.lazy(() => DeleteTokensRequestBody$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteTokensRequest$ {
    /** @deprecated use `DeleteTokensRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteTokensRequest$inboundSchema;
    /** @deprecated use `DeleteTokensRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteTokensRequest$outboundSchema;
    /** @deprecated use `DeleteTokensRequest$Outbound` instead. */
    export type Outbound = DeleteTokensRequest$Outbound;
}
