/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeleteAliasRequest = {
    /**
     * The ID or alias that will be removed
     */
    aliasId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};

export enum DeleteAliasStatus {
    Success = "SUCCESS",
}

/**
 * The alias was successfully removed
 */
export type DeleteAliasResponseBody = {
    status: DeleteAliasStatus;
};

/** @internal */
export namespace DeleteAliasRequest$ {
    export const inboundSchema: z.ZodType<DeleteAliasRequest, z.ZodTypeDef, unknown> = z.object({
        aliasId: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
    });

    export type Outbound = {
        aliasId: string;
        teamId?: string | undefined;
        slug?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteAliasRequest> = z.object({
        aliasId: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
    });
}

/** @internal */
export namespace DeleteAliasStatus$ {
    export const inboundSchema: z.ZodNativeEnum<typeof DeleteAliasStatus> =
        z.nativeEnum(DeleteAliasStatus);
    export const outboundSchema: z.ZodNativeEnum<typeof DeleteAliasStatus> = inboundSchema;
}

/** @internal */
export namespace DeleteAliasResponseBody$ {
    export const inboundSchema: z.ZodType<DeleteAliasResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            status: DeleteAliasStatus$.inboundSchema,
        });

    export type Outbound = {
        status: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteAliasResponseBody> =
        z.object({
            status: DeleteAliasStatus$.outboundSchema,
        });
}
