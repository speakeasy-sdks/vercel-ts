/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { HTTPMetadata, HTTPMetadata$ } from "./httpmetadata";
import * as z from "zod";

export type UpdateBillingSettingsRequestBody = {
    excessBillingEnabled?: boolean | undefined;
};

export type UpdateBillingSettingsResponseBody = {
    excessBillingEnabled?: boolean | undefined;
};

export type UpdateBillingSettingsResponse = {
    httpMeta: HTTPMetadata;
    object?: UpdateBillingSettingsResponseBody | undefined;
};

/** @internal */
export namespace UpdateBillingSettingsRequestBody$ {
    export const inboundSchema: z.ZodType<UpdateBillingSettingsRequestBody, z.ZodTypeDef, unknown> =
        z
            .object({
                excessBillingEnabled: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.excessBillingEnabled === undefined
                        ? null
                        : { excessBillingEnabled: v.excessBillingEnabled }),
                };
            });

    export type Outbound = {
        excessBillingEnabled?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateBillingSettingsRequestBody
    > = z
        .object({
            excessBillingEnabled: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.excessBillingEnabled === undefined
                    ? null
                    : { excessBillingEnabled: v.excessBillingEnabled }),
            };
        });
}

/** @internal */
export namespace UpdateBillingSettingsResponseBody$ {
    export const inboundSchema: z.ZodType<
        UpdateBillingSettingsResponseBody,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            excessBillingEnabled: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.excessBillingEnabled === undefined
                    ? null
                    : { excessBillingEnabled: v.excessBillingEnabled }),
            };
        });

    export type Outbound = {
        excessBillingEnabled?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateBillingSettingsResponseBody
    > = z
        .object({
            excessBillingEnabled: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.excessBillingEnabled === undefined
                    ? null
                    : { excessBillingEnabled: v.excessBillingEnabled }),
            };
        });
}

/** @internal */
export namespace UpdateBillingSettingsResponse$ {
    export const inboundSchema: z.ZodType<UpdateBillingSettingsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: HTTPMetadata$.inboundSchema,
            object: z.lazy(() => UpdateBillingSettingsResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        HttpMeta: HTTPMetadata$.Outbound;
        object?: UpdateBillingSettingsResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateBillingSettingsResponse> =
        z
            .object({
                httpMeta: HTTPMetadata$.outboundSchema,
                object: z.lazy(() => UpdateBillingSettingsResponseBody$.outboundSchema).optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.object === undefined ? null : { object: v.object }),
                };
            });
}
