/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type DeleteTeamInviteCodeRequest = {
    /**
     * the team id related to the invite code
     */
    teamId: string;
    /**
     * The Team invite code ID.
     */
    inviteId: string;
};

/**
 * Successfully deleted Team invite code.
 */
export type DeleteTeamInviteCodeResponseBody = {
    /**
     * ID of the team.
     */
    id: string;
};

/** @internal */
export namespace DeleteTeamInviteCodeRequest$ {
    export const inboundSchema: z.ZodType<DeleteTeamInviteCodeRequest, z.ZodTypeDef, unknown> = z
        .object({
            teamId: z.string(),
            inviteId: z.string(),
        })
        .transform((v) => {
            return {
                teamId: v.teamId,
                inviteId: v.inviteId,
            };
        });

    export type Outbound = {
        teamId: string;
        inviteId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteTeamInviteCodeRequest> = z
        .object({
            teamId: z.string(),
            inviteId: z.string(),
        })
        .transform((v) => {
            return {
                teamId: v.teamId,
                inviteId: v.inviteId,
            };
        });
}

/** @internal */
export namespace DeleteTeamInviteCodeResponseBody$ {
    export const inboundSchema: z.ZodType<DeleteTeamInviteCodeResponseBody, z.ZodTypeDef, unknown> =
        z
            .object({
                id: z.string(),
            })
            .transform((v) => {
                return {
                    id: v.id,
                };
            });

    export type Outbound = {
        id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        DeleteTeamInviteCodeResponseBody
    > = z
        .object({
            id: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
            };
        });
}
