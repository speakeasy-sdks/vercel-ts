/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../lib/primitives";
import * as z from "zod";

export type JoinTeamRequestBody = {
    /**
     * The invite code to join the team.
     */
    inviteCode?: string | undefined;
};

export type JoinTeamRequest = {
    teamId: string;
    requestBody?: JoinTeamRequestBody | undefined;
};

/**
 * Successfully joined a team.
 */
export type JoinTeamResponseBody = {
    /**
     * The ID of the team the user joined.
     */
    teamId: string;
    /**
     * The slug of the team the user joined.
     */
    slug: string;
    /**
     * The name of the team the user joined.
     */
    name: string;
    /**
     * The origin of how the user joined.
     */
    from: string;
};

/** @internal */
export namespace JoinTeamRequestBody$ {
    export const inboundSchema: z.ZodType<JoinTeamRequestBody, z.ZodTypeDef, unknown> = z.object({
        inviteCode: z.string().optional(),
    });

    export type Outbound = {
        inviteCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JoinTeamRequestBody> = z.object({
        inviteCode: z.string().optional(),
    });
}

/** @internal */
export namespace JoinTeamRequest$ {
    export const inboundSchema: z.ZodType<JoinTeamRequest, z.ZodTypeDef, unknown> = z
        .object({
            teamId: z.string(),
            RequestBody: z.lazy(() => JoinTeamRequestBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                RequestBody: "requestBody",
            });
        });

    export type Outbound = {
        teamId: string;
        RequestBody?: JoinTeamRequestBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JoinTeamRequest> = z
        .object({
            teamId: z.string(),
            requestBody: z.lazy(() => JoinTeamRequestBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                requestBody: "RequestBody",
            });
        });
}

/** @internal */
export namespace JoinTeamResponseBody$ {
    export const inboundSchema: z.ZodType<JoinTeamResponseBody, z.ZodTypeDef, unknown> = z.object({
        teamId: z.string(),
        slug: z.string(),
        name: z.string(),
        from: z.string(),
    });

    export type Outbound = {
        teamId: string;
        slug: string;
        name: string;
        from: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JoinTeamResponseBody> = z.object(
        {
            teamId: z.string(),
            slug: z.string(),
            name: z.string(),
            from: z.string(),
        }
    );
}
