/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { ClosedEnum } from "../types/enums.js";

/**
 * The type of environment variable
 */
export const CreateProjectEnv2Type = {
  System: "system",
  Secret: "secret",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
} as const;
/**
 * The type of environment variable
 */
export type CreateProjectEnv2Type = ClosedEnum<typeof CreateProjectEnv2Type>;

export const CreateProjectEnv2Target = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnv2Target = ClosedEnum<
  typeof CreateProjectEnv2Target
>;

export type Two2 = {
  /**
   * The name of the environment variable
   */
  key: string;
  /**
   * The value of the environment variable
   */
  value: string;
  /**
   * The type of environment variable
   */
  type: CreateProjectEnv2Type;
  /**
   * The target environment of the environment variable
   */
  target?: Array<CreateProjectEnv2Target> | undefined;
  /**
   * If defined, the git branch of the environment variable (must have target=preview)
   */
  gitBranch?: string | null | undefined;
  /**
   * A comment to add context on what this environment variable is for
   */
  comment?: string | undefined;
};

/**
 * The type of environment variable
 */
export const TwoType = {
  System: "system",
  Secret: "secret",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
} as const;
/**
 * The type of environment variable
 */
export type TwoType = ClosedEnum<typeof TwoType>;

export const TwoTarget = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type TwoTarget = ClosedEnum<typeof TwoTarget>;

export type Two1 = {
  /**
   * The name of the environment variable
   */
  key: string;
  /**
   * The value of the environment variable
   */
  value: string;
  /**
   * The type of environment variable
   */
  type: TwoType;
  /**
   * The target environment of the environment variable
   */
  target: Array<TwoTarget>;
  /**
   * If defined, the git branch of the environment variable (must have target=preview)
   */
  gitBranch?: string | null | undefined;
  /**
   * A comment to add context on what this environment variable is for
   */
  comment?: string | undefined;
};

export type CreateProjectEnvRequestBody2 = Two1 | Two2;

/**
 * The type of environment variable
 */
export const CreateProjectEnv1Type = {
  System: "system",
  Secret: "secret",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
} as const;
/**
 * The type of environment variable
 */
export type CreateProjectEnv1Type = ClosedEnum<typeof CreateProjectEnv1Type>;

export const CreateProjectEnv1Target = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnv1Target = ClosedEnum<
  typeof CreateProjectEnv1Target
>;

export type CreateProjectEnv12 = {
  /**
   * The name of the environment variable
   */
  key: string;
  /**
   * The value of the environment variable
   */
  value: string;
  /**
   * The type of environment variable
   */
  type: CreateProjectEnv1Type;
  /**
   * The target environment of the environment variable
   */
  target?: Array<CreateProjectEnv1Target> | undefined;
  /**
   * If defined, the git branch of the environment variable (must have target=preview)
   */
  gitBranch?: string | null | undefined;
  /**
   * A comment to add context on what this environment variable is for
   */
  comment?: string | undefined;
};

/**
 * The type of environment variable
 */
export const OneType = {
  System: "system",
  Secret: "secret",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
} as const;
/**
 * The type of environment variable
 */
export type OneType = ClosedEnum<typeof OneType>;

export const OneTarget = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type OneTarget = ClosedEnum<typeof OneTarget>;

export type CreateProjectEnv11 = {
  /**
   * The name of the environment variable
   */
  key: string;
  /**
   * The value of the environment variable
   */
  value: string;
  /**
   * The type of environment variable
   */
  type: OneType;
  /**
   * The target environment of the environment variable
   */
  target: Array<OneTarget>;
  /**
   * If defined, the git branch of the environment variable (must have target=preview)
   */
  gitBranch?: string | null | undefined;
  /**
   * A comment to add context on what this environment variable is for
   */
  comment?: string | undefined;
};

export type CreateProjectEnvRequestBody1 =
  | CreateProjectEnv11
  | CreateProjectEnv12;

export type CreateProjectEnvRequestBody =
  | CreateProjectEnv11
  | CreateProjectEnv12
  | Array<Two1 | Two2>;

export type CreateProjectEnvRequest = {
  /**
   * The unique project identifier or the project name
   */
  idOrName: string;
  /**
   * Allow override of environment variable if it already exists
   */
  upsert?: string | undefined;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
  requestBody?:
    | CreateProjectEnv11
    | CreateProjectEnv12
    | Array<Two1 | Two2>
    | undefined;
};

export const CreateProjectEnvTargetEnvs2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnvTargetEnvs2 = ClosedEnum<
  typeof CreateProjectEnvTargetEnvs2
>;

export const CreateProjectEnvTargetEnvs1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnvTargetEnvs1 = ClosedEnum<
  typeof CreateProjectEnvTargetEnvs1
>;

export type CreateProjectEnvCreatedTarget =
  | Array<CreateProjectEnvTargetEnvs1>
  | CreateProjectEnvTargetEnvs2;

export const CreateProjectEnvCreatedType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type CreateProjectEnvCreatedType = ClosedEnum<
  typeof CreateProjectEnvCreatedType
>;

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type
  >;

export type CreateProjectEnvContentHintEnvs14 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type
  >;

export type CreateProjectEnvContentHintEnvs13 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type
  >;

export type CreateProjectEnvContentHintEnvs12 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type
  >;

export type CreateProjectEnvContentHintEnvs11 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type
  >;

export type CreateProjectEnvContentHintEnvs10 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type
  >;

export type CreateProjectEnvContentHintEnvs9 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type
  >;

export type CreateProjectEnvContentHintEnvs8 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type
  >;

export type CreateProjectEnvContentHintEnvs7 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type
  >;

export type CreateProjectEnvContentHintEnvs6 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type =
  {
    BlobReadWriteToken: "blob-read-write-token",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type
  >;

export type CreateProjectEnvContentHintEnvs5 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type =
  {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type
  >;

export type CreateProjectEnvContentHintEnvs4 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type =
  {
    RedisRestApiToken: "redis-rest-api-token",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type
  >;

export type CreateProjectEnvContentHintEnvs3 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type =
  {
    RedisRestApiUrl: "redis-rest-api-url",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type
  >;

export type CreateProjectEnvContentHintEnvs2 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type =
  {
    RedisUrl: "redis-url",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type
  >;

export type CreateProjectEnvContentHintEnvs1 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type;
  storeId: string;
};

export type CreateProjectEnvCreatedContentHint =
  | CreateProjectEnvContentHintEnvs1
  | CreateProjectEnvContentHintEnvs2
  | CreateProjectEnvContentHintEnvs3
  | CreateProjectEnvContentHintEnvs4
  | CreateProjectEnvContentHintEnvs5
  | CreateProjectEnvContentHintEnvs6
  | CreateProjectEnvContentHintEnvs7
  | CreateProjectEnvContentHintEnvs8
  | CreateProjectEnvContentHintEnvs9
  | CreateProjectEnvContentHintEnvs10
  | CreateProjectEnvContentHintEnvs11
  | CreateProjectEnvContentHintEnvs12
  | CreateProjectEnvContentHintEnvs13
  | CreateProjectEnvContentHintEnvs14;

export const CreateProjectEnvCreatedEnvsResponseType = {
  FlagsSecret: "flags-secret",
} as const;
export type CreateProjectEnvCreatedEnvsResponseType = ClosedEnum<
  typeof CreateProjectEnvCreatedEnvsResponseType
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type CreateProjectEnvCreatedInternalContentHint = {
  type: CreateProjectEnvCreatedEnvsResponseType;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type Created2 = {
  target?:
    | Array<CreateProjectEnvTargetEnvs1>
    | CreateProjectEnvTargetEnvs2
    | undefined;
  type?: CreateProjectEnvCreatedType | undefined;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key?: string | undefined;
  value?: string | undefined;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | CreateProjectEnvContentHintEnvs1
    | CreateProjectEnvContentHintEnvs2
    | CreateProjectEnvContentHintEnvs3
    | CreateProjectEnvContentHintEnvs4
    | CreateProjectEnvContentHintEnvs5
    | CreateProjectEnvContentHintEnvs6
    | CreateProjectEnvContentHintEnvs7
    | CreateProjectEnvContentHintEnvs8
    | CreateProjectEnvContentHintEnvs9
    | CreateProjectEnvContentHintEnvs10
    | CreateProjectEnvContentHintEnvs11
    | CreateProjectEnvContentHintEnvs12
    | CreateProjectEnvContentHintEnvs13
    | CreateProjectEnvContentHintEnvs14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | CreateProjectEnvCreatedInternalContentHint
    | null
    | undefined;
  /**
   * Whether `value` and `vsmValue` are decrypted.
   */
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
  system?: boolean | undefined;
};

export const CreateProjectEnvTarget2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnvTarget2 = ClosedEnum<
  typeof CreateProjectEnvTarget2
>;

export const CreateProjectEnvTarget1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnvTarget1 = ClosedEnum<
  typeof CreateProjectEnvTarget1
>;

export type CreatedTarget =
  | Array<CreateProjectEnvTarget1>
  | CreateProjectEnvTarget2;

export const CreatedType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type CreatedType = ClosedEnum<typeof CreatedType>;

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type
  >;

export type CreateProjectEnvContentHint14 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type
  >;

export type CreateProjectEnvContentHint13 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type
  >;

export type CreateProjectEnvContentHint12 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type
  >;

export type CreateProjectEnvContentHint11 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type
  >;

export type CreateProjectEnvContentHint10 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type
  >;

export type CreateProjectEnvContentHint9 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type
  >;

export type CreateProjectEnvContentHint8 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType
  >;

export type CreateProjectEnvContentHint7 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType
  >;

export type CreateProjectEnvContentHint6 = {
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType = {
  BlobReadWriteToken: "blob-read-write-token",
} as const;
export type CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType =
  ClosedEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType
  >;

export type CreateProjectEnvContentHint5 = {
  type: CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponse201Type = {
  RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
} as const;
export type CreateProjectEnvContentHintEnvsResponse201Type = ClosedEnum<
  typeof CreateProjectEnvContentHintEnvsResponse201Type
>;

export type CreateProjectEnvContentHint4 = {
  type: CreateProjectEnvContentHintEnvsResponse201Type;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsResponseType = {
  RedisRestApiToken: "redis-rest-api-token",
} as const;
export type CreateProjectEnvContentHintEnvsResponseType = ClosedEnum<
  typeof CreateProjectEnvContentHintEnvsResponseType
>;

export type CreateProjectEnvContentHint3 = {
  type: CreateProjectEnvContentHintEnvsResponseType;
  storeId: string;
};

export const CreateProjectEnvContentHintEnvsType = {
  RedisRestApiUrl: "redis-rest-api-url",
} as const;
export type CreateProjectEnvContentHintEnvsType = ClosedEnum<
  typeof CreateProjectEnvContentHintEnvsType
>;

export type CreateProjectEnvContentHint2 = {
  type: CreateProjectEnvContentHintEnvsType;
  storeId: string;
};

export const CreateProjectEnvContentHintType = {
  RedisUrl: "redis-url",
} as const;
export type CreateProjectEnvContentHintType = ClosedEnum<
  typeof CreateProjectEnvContentHintType
>;

export type CreateProjectEnvContentHint1 = {
  type: CreateProjectEnvContentHintType;
  storeId: string;
};

export type CreatedContentHint =
  | CreateProjectEnvContentHint1
  | CreateProjectEnvContentHint2
  | CreateProjectEnvContentHint3
  | CreateProjectEnvContentHint4
  | CreateProjectEnvContentHint5
  | CreateProjectEnvContentHint6
  | CreateProjectEnvContentHint7
  | CreateProjectEnvContentHint8
  | CreateProjectEnvContentHint9
  | CreateProjectEnvContentHint10
  | CreateProjectEnvContentHint11
  | CreateProjectEnvContentHint12
  | CreateProjectEnvContentHint13
  | CreateProjectEnvContentHint14;

export const CreateProjectEnvCreatedEnvsType = {
  FlagsSecret: "flags-secret",
} as const;
export type CreateProjectEnvCreatedEnvsType = ClosedEnum<
  typeof CreateProjectEnvCreatedEnvsType
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type CreatedInternalContentHint = {
  type: CreateProjectEnvCreatedEnvsType;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type Created1 = {
  target?: Array<CreateProjectEnvTarget1> | CreateProjectEnvTarget2 | undefined;
  type?: CreatedType | undefined;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key?: string | undefined;
  value?: string | undefined;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | CreateProjectEnvContentHint1
    | CreateProjectEnvContentHint2
    | CreateProjectEnvContentHint3
    | CreateProjectEnvContentHint4
    | CreateProjectEnvContentHint5
    | CreateProjectEnvContentHint6
    | CreateProjectEnvContentHint7
    | CreateProjectEnvContentHint8
    | CreateProjectEnvContentHint9
    | CreateProjectEnvContentHint10
    | CreateProjectEnvContentHint11
    | CreateProjectEnvContentHint12
    | CreateProjectEnvContentHint13
    | CreateProjectEnvContentHint14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?: CreatedInternalContentHint | null | undefined;
  /**
   * Whether `value` and `vsmValue` are decrypted.
   */
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
  system?: boolean | undefined;
};

export type Created = Created1 | Array<Created2>;

export const CreateProjectEnvValue2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnvValue2 = ClosedEnum<typeof CreateProjectEnvValue2>;

export type CreateProjectEnvValue = string | Array<CreateProjectEnvValue2>;

export const CreateProjectEnvTargetEnvsResponse2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnvTargetEnvsResponse2 = ClosedEnum<
  typeof CreateProjectEnvTargetEnvsResponse2
>;

export const CreateProjectEnvTargetEnvsResponse1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type CreateProjectEnvTargetEnvsResponse1 = ClosedEnum<
  typeof CreateProjectEnvTargetEnvsResponse1
>;

export type CreateProjectEnvTarget =
  | Array<CreateProjectEnvTargetEnvsResponse1>
  | CreateProjectEnvTargetEnvsResponse2;

export type CreateProjectEnvError = {
  code: string;
  message: string;
  key?: string | undefined;
  envVarId?: string | undefined;
  envVarKey?: string | undefined;
  action?: string | undefined;
  link?: string | undefined;
  value?: string | Array<CreateProjectEnvValue2> | undefined;
  gitBranch?: string | undefined;
  target?:
    | Array<CreateProjectEnvTargetEnvsResponse1>
    | CreateProjectEnvTargetEnvsResponse2
    | undefined;
  project?: string | undefined;
};

export type Failed = {
  error: CreateProjectEnvError;
};

/**
 * The environment variable was created successfully
 */
export type CreateProjectEnvResponseBody = {
  created: Created1 | Array<Created2>;
  failed: Array<Failed>;
};

/** @internal */
export const CreateProjectEnv2Type$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv2Type
> = z.nativeEnum(CreateProjectEnv2Type);

/** @internal */
export const CreateProjectEnv2Type$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv2Type
> = CreateProjectEnv2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnv2Type$ {
  /** @deprecated use `CreateProjectEnv2Type$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnv2Type$inboundSchema;
  /** @deprecated use `CreateProjectEnv2Type$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnv2Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnv2Target$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv2Target
> = z.nativeEnum(CreateProjectEnv2Target);

/** @internal */
export const CreateProjectEnv2Target$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv2Target
> = CreateProjectEnv2Target$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnv2Target$ {
  /** @deprecated use `CreateProjectEnv2Target$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnv2Target$inboundSchema;
  /** @deprecated use `CreateProjectEnv2Target$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnv2Target$outboundSchema;
}

/** @internal */
export const Two2$inboundSchema: z.ZodType<Two2, z.ZodTypeDef, unknown> = z
  .object({
    key: z.string(),
    value: z.string(),
    type: CreateProjectEnv2Type$inboundSchema,
    target: z.array(CreateProjectEnv2Target$inboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
  });

/** @internal */
export type Two2$Outbound = {
  key: string;
  value: string;
  type: string;
  target?: Array<string> | undefined;
  gitBranch?: string | null | undefined;
  comment?: string | undefined;
};

/** @internal */
export const Two2$outboundSchema: z.ZodType<Two2$Outbound, z.ZodTypeDef, Two2> =
  z.object({
    key: z.string(),
    value: z.string(),
    type: CreateProjectEnv2Type$outboundSchema,
    target: z.array(CreateProjectEnv2Target$outboundSchema).optional(),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Two2$ {
  /** @deprecated use `Two2$inboundSchema` instead. */
  export const inboundSchema = Two2$inboundSchema;
  /** @deprecated use `Two2$outboundSchema` instead. */
  export const outboundSchema = Two2$outboundSchema;
  /** @deprecated use `Two2$Outbound` instead. */
  export type Outbound = Two2$Outbound;
}

/** @internal */
export const TwoType$inboundSchema: z.ZodNativeEnum<typeof TwoType> = z
  .nativeEnum(TwoType);

/** @internal */
export const TwoType$outboundSchema: z.ZodNativeEnum<typeof TwoType> =
  TwoType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoType$ {
  /** @deprecated use `TwoType$inboundSchema` instead. */
  export const inboundSchema = TwoType$inboundSchema;
  /** @deprecated use `TwoType$outboundSchema` instead. */
  export const outboundSchema = TwoType$outboundSchema;
}

/** @internal */
export const TwoTarget$inboundSchema: z.ZodNativeEnum<typeof TwoTarget> = z
  .nativeEnum(TwoTarget);

/** @internal */
export const TwoTarget$outboundSchema: z.ZodNativeEnum<typeof TwoTarget> =
  TwoTarget$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwoTarget$ {
  /** @deprecated use `TwoTarget$inboundSchema` instead. */
  export const inboundSchema = TwoTarget$inboundSchema;
  /** @deprecated use `TwoTarget$outboundSchema` instead. */
  export const outboundSchema = TwoTarget$outboundSchema;
}

/** @internal */
export const Two1$inboundSchema: z.ZodType<Two1, z.ZodTypeDef, unknown> = z
  .object({
    key: z.string(),
    value: z.string(),
    type: TwoType$inboundSchema,
    target: z.array(TwoTarget$inboundSchema),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
  });

/** @internal */
export type Two1$Outbound = {
  key: string;
  value: string;
  type: string;
  target: Array<string>;
  gitBranch?: string | null | undefined;
  comment?: string | undefined;
};

/** @internal */
export const Two1$outboundSchema: z.ZodType<Two1$Outbound, z.ZodTypeDef, Two1> =
  z.object({
    key: z.string(),
    value: z.string(),
    type: TwoType$outboundSchema,
    target: z.array(TwoTarget$outboundSchema),
    gitBranch: z.nullable(z.string()).optional(),
    comment: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Two1$ {
  /** @deprecated use `Two1$inboundSchema` instead. */
  export const inboundSchema = Two1$inboundSchema;
  /** @deprecated use `Two1$outboundSchema` instead. */
  export const outboundSchema = Two1$outboundSchema;
  /** @deprecated use `Two1$Outbound` instead. */
  export type Outbound = Two1$Outbound;
}

/** @internal */
export const CreateProjectEnvRequestBody2$inboundSchema: z.ZodType<
  CreateProjectEnvRequestBody2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => Two1$inboundSchema),
  z.lazy(() => Two2$inboundSchema),
]);

/** @internal */
export type CreateProjectEnvRequestBody2$Outbound =
  | Two1$Outbound
  | Two2$Outbound;

/** @internal */
export const CreateProjectEnvRequestBody2$outboundSchema: z.ZodType<
  CreateProjectEnvRequestBody2$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvRequestBody2
> = z.union([
  z.lazy(() => Two1$outboundSchema),
  z.lazy(() => Two2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvRequestBody2$ {
  /** @deprecated use `CreateProjectEnvRequestBody2$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvRequestBody2$inboundSchema;
  /** @deprecated use `CreateProjectEnvRequestBody2$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvRequestBody2$outboundSchema;
  /** @deprecated use `CreateProjectEnvRequestBody2$Outbound` instead. */
  export type Outbound = CreateProjectEnvRequestBody2$Outbound;
}

/** @internal */
export const CreateProjectEnv1Type$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv1Type
> = z.nativeEnum(CreateProjectEnv1Type);

/** @internal */
export const CreateProjectEnv1Type$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv1Type
> = CreateProjectEnv1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnv1Type$ {
  /** @deprecated use `CreateProjectEnv1Type$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnv1Type$inboundSchema;
  /** @deprecated use `CreateProjectEnv1Type$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnv1Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnv1Target$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv1Target
> = z.nativeEnum(CreateProjectEnv1Target);

/** @internal */
export const CreateProjectEnv1Target$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnv1Target
> = CreateProjectEnv1Target$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnv1Target$ {
  /** @deprecated use `CreateProjectEnv1Target$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnv1Target$inboundSchema;
  /** @deprecated use `CreateProjectEnv1Target$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnv1Target$outboundSchema;
}

/** @internal */
export const CreateProjectEnv12$inboundSchema: z.ZodType<
  CreateProjectEnv12,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.string(),
  type: CreateProjectEnv1Type$inboundSchema,
  target: z.array(CreateProjectEnv1Target$inboundSchema).optional(),
  gitBranch: z.nullable(z.string()).optional(),
  comment: z.string().optional(),
});

/** @internal */
export type CreateProjectEnv12$Outbound = {
  key: string;
  value: string;
  type: string;
  target?: Array<string> | undefined;
  gitBranch?: string | null | undefined;
  comment?: string | undefined;
};

/** @internal */
export const CreateProjectEnv12$outboundSchema: z.ZodType<
  CreateProjectEnv12$Outbound,
  z.ZodTypeDef,
  CreateProjectEnv12
> = z.object({
  key: z.string(),
  value: z.string(),
  type: CreateProjectEnv1Type$outboundSchema,
  target: z.array(CreateProjectEnv1Target$outboundSchema).optional(),
  gitBranch: z.nullable(z.string()).optional(),
  comment: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnv12$ {
  /** @deprecated use `CreateProjectEnv12$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnv12$inboundSchema;
  /** @deprecated use `CreateProjectEnv12$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnv12$outboundSchema;
  /** @deprecated use `CreateProjectEnv12$Outbound` instead. */
  export type Outbound = CreateProjectEnv12$Outbound;
}

/** @internal */
export const OneType$inboundSchema: z.ZodNativeEnum<typeof OneType> = z
  .nativeEnum(OneType);

/** @internal */
export const OneType$outboundSchema: z.ZodNativeEnum<typeof OneType> =
  OneType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneType$ {
  /** @deprecated use `OneType$inboundSchema` instead. */
  export const inboundSchema = OneType$inboundSchema;
  /** @deprecated use `OneType$outboundSchema` instead. */
  export const outboundSchema = OneType$outboundSchema;
}

/** @internal */
export const OneTarget$inboundSchema: z.ZodNativeEnum<typeof OneTarget> = z
  .nativeEnum(OneTarget);

/** @internal */
export const OneTarget$outboundSchema: z.ZodNativeEnum<typeof OneTarget> =
  OneTarget$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OneTarget$ {
  /** @deprecated use `OneTarget$inboundSchema` instead. */
  export const inboundSchema = OneTarget$inboundSchema;
  /** @deprecated use `OneTarget$outboundSchema` instead. */
  export const outboundSchema = OneTarget$outboundSchema;
}

/** @internal */
export const CreateProjectEnv11$inboundSchema: z.ZodType<
  CreateProjectEnv11,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  value: z.string(),
  type: OneType$inboundSchema,
  target: z.array(OneTarget$inboundSchema),
  gitBranch: z.nullable(z.string()).optional(),
  comment: z.string().optional(),
});

/** @internal */
export type CreateProjectEnv11$Outbound = {
  key: string;
  value: string;
  type: string;
  target: Array<string>;
  gitBranch?: string | null | undefined;
  comment?: string | undefined;
};

/** @internal */
export const CreateProjectEnv11$outboundSchema: z.ZodType<
  CreateProjectEnv11$Outbound,
  z.ZodTypeDef,
  CreateProjectEnv11
> = z.object({
  key: z.string(),
  value: z.string(),
  type: OneType$outboundSchema,
  target: z.array(OneTarget$outboundSchema),
  gitBranch: z.nullable(z.string()).optional(),
  comment: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnv11$ {
  /** @deprecated use `CreateProjectEnv11$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnv11$inboundSchema;
  /** @deprecated use `CreateProjectEnv11$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnv11$outboundSchema;
  /** @deprecated use `CreateProjectEnv11$Outbound` instead. */
  export type Outbound = CreateProjectEnv11$Outbound;
}

/** @internal */
export const CreateProjectEnvRequestBody1$inboundSchema: z.ZodType<
  CreateProjectEnvRequestBody1,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateProjectEnv11$inboundSchema),
  z.lazy(() => CreateProjectEnv12$inboundSchema),
]);

/** @internal */
export type CreateProjectEnvRequestBody1$Outbound =
  | CreateProjectEnv11$Outbound
  | CreateProjectEnv12$Outbound;

/** @internal */
export const CreateProjectEnvRequestBody1$outboundSchema: z.ZodType<
  CreateProjectEnvRequestBody1$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvRequestBody1
> = z.union([
  z.lazy(() => CreateProjectEnv11$outboundSchema),
  z.lazy(() => CreateProjectEnv12$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvRequestBody1$ {
  /** @deprecated use `CreateProjectEnvRequestBody1$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvRequestBody1$inboundSchema;
  /** @deprecated use `CreateProjectEnvRequestBody1$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvRequestBody1$outboundSchema;
  /** @deprecated use `CreateProjectEnvRequestBody1$Outbound` instead. */
  export type Outbound = CreateProjectEnvRequestBody1$Outbound;
}

/** @internal */
export const CreateProjectEnvRequestBody$inboundSchema: z.ZodType<
  CreateProjectEnvRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.union([
    z.lazy(() => CreateProjectEnv11$inboundSchema),
    z.lazy(() => CreateProjectEnv12$inboundSchema),
  ]),
  z.array(
    z.union([
      z.lazy(() => Two1$inboundSchema),
      z.lazy(() => Two2$inboundSchema),
    ]),
  ),
]);

/** @internal */
export type CreateProjectEnvRequestBody$Outbound =
  | CreateProjectEnv11$Outbound
  | CreateProjectEnv12$Outbound
  | Array<Two1$Outbound | Two2$Outbound>;

/** @internal */
export const CreateProjectEnvRequestBody$outboundSchema: z.ZodType<
  CreateProjectEnvRequestBody$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvRequestBody
> = z.union([
  z.union([
    z.lazy(() => CreateProjectEnv11$outboundSchema),
    z.lazy(() => CreateProjectEnv12$outboundSchema),
  ]),
  z.array(
    z.union([
      z.lazy(() => Two1$outboundSchema),
      z.lazy(() => Two2$outboundSchema),
    ]),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvRequestBody$ {
  /** @deprecated use `CreateProjectEnvRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvRequestBody$inboundSchema;
  /** @deprecated use `CreateProjectEnvRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvRequestBody$outboundSchema;
  /** @deprecated use `CreateProjectEnvRequestBody$Outbound` instead. */
  export type Outbound = CreateProjectEnvRequestBody$Outbound;
}

/** @internal */
export const CreateProjectEnvRequest$inboundSchema: z.ZodType<
  CreateProjectEnvRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  idOrName: z.string(),
  upsert: z.string().optional(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  RequestBody: z.union([
    z.union([
      z.lazy(() => CreateProjectEnv11$inboundSchema),
      z.lazy(() => CreateProjectEnv12$inboundSchema),
    ]),
    z.array(
      z.union([
        z.lazy(() => Two1$inboundSchema),
        z.lazy(() => Two2$inboundSchema),
      ]),
    ),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateProjectEnvRequest$Outbound = {
  idOrName: string;
  upsert?: string | undefined;
  teamId?: string | undefined;
  slug?: string | undefined;
  RequestBody?:
    | CreateProjectEnv11$Outbound
    | CreateProjectEnv12$Outbound
    | Array<Two1$Outbound | Two2$Outbound>
    | undefined;
};

/** @internal */
export const CreateProjectEnvRequest$outboundSchema: z.ZodType<
  CreateProjectEnvRequest$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvRequest
> = z.object({
  idOrName: z.string(),
  upsert: z.string().optional(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
  requestBody: z.union([
    z.union([
      z.lazy(() => CreateProjectEnv11$outboundSchema),
      z.lazy(() => CreateProjectEnv12$outboundSchema),
    ]),
    z.array(
      z.union([
        z.lazy(() => Two1$outboundSchema),
        z.lazy(() => Two2$outboundSchema),
      ]),
    ),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvRequest$ {
  /** @deprecated use `CreateProjectEnvRequest$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvRequest$inboundSchema;
  /** @deprecated use `CreateProjectEnvRequest$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvRequest$outboundSchema;
  /** @deprecated use `CreateProjectEnvRequest$Outbound` instead. */
  export type Outbound = CreateProjectEnvRequest$Outbound;
}

/** @internal */
export const CreateProjectEnvTargetEnvs2$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTargetEnvs2
> = z.nativeEnum(CreateProjectEnvTargetEnvs2);

/** @internal */
export const CreateProjectEnvTargetEnvs2$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTargetEnvs2
> = CreateProjectEnvTargetEnvs2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvTargetEnvs2$ {
  /** @deprecated use `CreateProjectEnvTargetEnvs2$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvTargetEnvs2$inboundSchema;
  /** @deprecated use `CreateProjectEnvTargetEnvs2$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvTargetEnvs2$outboundSchema;
}

/** @internal */
export const CreateProjectEnvTargetEnvs1$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTargetEnvs1
> = z.nativeEnum(CreateProjectEnvTargetEnvs1);

/** @internal */
export const CreateProjectEnvTargetEnvs1$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTargetEnvs1
> = CreateProjectEnvTargetEnvs1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvTargetEnvs1$ {
  /** @deprecated use `CreateProjectEnvTargetEnvs1$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvTargetEnvs1$inboundSchema;
  /** @deprecated use `CreateProjectEnvTargetEnvs1$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvTargetEnvs1$outboundSchema;
}

/** @internal */
export const CreateProjectEnvCreatedTarget$inboundSchema: z.ZodType<
  CreateProjectEnvCreatedTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(CreateProjectEnvTargetEnvs1$inboundSchema),
  CreateProjectEnvTargetEnvs2$inboundSchema,
]);

/** @internal */
export type CreateProjectEnvCreatedTarget$Outbound = Array<string> | string;

/** @internal */
export const CreateProjectEnvCreatedTarget$outboundSchema: z.ZodType<
  CreateProjectEnvCreatedTarget$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvCreatedTarget
> = z.union([
  z.array(CreateProjectEnvTargetEnvs1$outboundSchema),
  CreateProjectEnvTargetEnvs2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvCreatedTarget$ {
  /** @deprecated use `CreateProjectEnvCreatedTarget$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvCreatedTarget$inboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedTarget$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvCreatedTarget$outboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedTarget$Outbound` instead. */
  export type Outbound = CreateProjectEnvCreatedTarget$Outbound;
}

/** @internal */
export const CreateProjectEnvCreatedType$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvCreatedType
> = z.nativeEnum(CreateProjectEnvCreatedType);

/** @internal */
export const CreateProjectEnvCreatedType$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvCreatedType
> = CreateProjectEnvCreatedType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvCreatedType$ {
  /** @deprecated use `CreateProjectEnvCreatedType$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvCreatedType$inboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedType$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvCreatedType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs14$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs14$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs14$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs14
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated214Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs14$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs14$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs14$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs14$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvs14$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs14$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs14$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs13$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs13$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs13$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs13
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated213Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs13$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs13$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs13$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs13$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvs13$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs13$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs13$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs12$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs12$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs12$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs12
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated212Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs12$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs12$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs12$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs12$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvs12$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs12$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs12$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs11$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs11$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs11$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs11
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated211Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs11$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs11$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs11$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs11$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvs11$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs11$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs11$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs10$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs10$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs10$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs10
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated210Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs10$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs10$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs10$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs10$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvs10$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs10$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs10$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs9$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs9$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs9$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs9
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated29Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs9$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs9$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs9$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs9$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs9$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs9$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs9$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs8$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs8$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs8$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs8
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated28Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs8$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs8$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs8$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs8$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs8$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs8$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs8$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs7$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs7$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs7$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs7
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated27Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs7$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs7$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs7$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs7$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs7$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs7$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs7$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs6$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs6$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs6$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs6
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated26Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs6$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs6$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs6$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs6$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs6$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs6$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs6$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs5$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs5$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs5$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs5
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated25Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs5$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs5$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs5$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs5$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs5$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs5$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs5$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs4$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs4$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs4$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs4
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated24Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs4$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs4$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs4$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs4$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs4$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs4$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs4$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs3$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs3$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs3$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs3
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated23Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs3$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs3$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs3$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs3$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs3$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs3$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs3$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs2$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs2$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs2$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs2
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated22Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs2$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs2$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs2$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs2$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs2$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs2$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs2$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvs1$inboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHintEnvs1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHintEnvs1$outboundSchema: z.ZodType<
  CreateProjectEnvContentHintEnvs1$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHintEnvs1
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated2Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvs1$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvs1$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintEnvs1$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs1$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintEnvs1$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvs1$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHintEnvs1$Outbound;
}

/** @internal */
export const CreateProjectEnvCreatedContentHint$inboundSchema: z.ZodType<
  CreateProjectEnvCreatedContentHint,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateProjectEnvContentHintEnvs1$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs2$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs3$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs4$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs5$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs6$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs7$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs8$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs9$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs10$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs11$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs12$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs13$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs14$inboundSchema),
]);

/** @internal */
export type CreateProjectEnvCreatedContentHint$Outbound =
  | CreateProjectEnvContentHintEnvs1$Outbound
  | CreateProjectEnvContentHintEnvs2$Outbound
  | CreateProjectEnvContentHintEnvs3$Outbound
  | CreateProjectEnvContentHintEnvs4$Outbound
  | CreateProjectEnvContentHintEnvs5$Outbound
  | CreateProjectEnvContentHintEnvs6$Outbound
  | CreateProjectEnvContentHintEnvs7$Outbound
  | CreateProjectEnvContentHintEnvs8$Outbound
  | CreateProjectEnvContentHintEnvs9$Outbound
  | CreateProjectEnvContentHintEnvs10$Outbound
  | CreateProjectEnvContentHintEnvs11$Outbound
  | CreateProjectEnvContentHintEnvs12$Outbound
  | CreateProjectEnvContentHintEnvs13$Outbound
  | CreateProjectEnvContentHintEnvs14$Outbound;

/** @internal */
export const CreateProjectEnvCreatedContentHint$outboundSchema: z.ZodType<
  CreateProjectEnvCreatedContentHint$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvCreatedContentHint
> = z.union([
  z.lazy(() => CreateProjectEnvContentHintEnvs1$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs2$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs3$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs4$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs5$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs6$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs7$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs8$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs9$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs10$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs11$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs12$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs13$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHintEnvs14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvCreatedContentHint$ {
  /** @deprecated use `CreateProjectEnvCreatedContentHint$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvCreatedContentHint$inboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedContentHint$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvCreatedContentHint$outboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedContentHint$Outbound` instead. */
  export type Outbound = CreateProjectEnvCreatedContentHint$Outbound;
}

/** @internal */
export const CreateProjectEnvCreatedEnvsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvCreatedEnvsResponseType> = z
    .nativeEnum(CreateProjectEnvCreatedEnvsResponseType);

/** @internal */
export const CreateProjectEnvCreatedEnvsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvCreatedEnvsResponseType> =
    CreateProjectEnvCreatedEnvsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvCreatedEnvsResponseType$ {
  /** @deprecated use `CreateProjectEnvCreatedEnvsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvCreatedEnvsResponseType$inboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedEnvsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvCreatedEnvsResponseType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvCreatedInternalContentHint$inboundSchema:
  z.ZodType<CreateProjectEnvCreatedInternalContentHint, z.ZodTypeDef, unknown> =
    z.object({
      type: CreateProjectEnvCreatedEnvsResponseType$inboundSchema,
      encryptedValue: z.string(),
    });

/** @internal */
export type CreateProjectEnvCreatedInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const CreateProjectEnvCreatedInternalContentHint$outboundSchema:
  z.ZodType<
    CreateProjectEnvCreatedInternalContentHint$Outbound,
    z.ZodTypeDef,
    CreateProjectEnvCreatedInternalContentHint
  > = z.object({
    type: CreateProjectEnvCreatedEnvsResponseType$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvCreatedInternalContentHint$ {
  /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvCreatedInternalContentHint$inboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvCreatedInternalContentHint$outboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedInternalContentHint$Outbound` instead. */
  export type Outbound = CreateProjectEnvCreatedInternalContentHint$Outbound;
}

/** @internal */
export const Created2$inboundSchema: z.ZodType<
  Created2,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(CreateProjectEnvTargetEnvs1$inboundSchema),
    CreateProjectEnvTargetEnvs2$inboundSchema,
  ]).optional(),
  type: CreateProjectEnvCreatedType$inboundSchema.optional(),
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string().optional(),
  value: z.string().optional(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => CreateProjectEnvContentHintEnvs1$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs2$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs3$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs4$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs5$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs6$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs7$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs8$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs9$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs10$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs11$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs12$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs13$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => CreateProjectEnvCreatedInternalContentHint$inboundSchema),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
  system: z.boolean().optional(),
});

/** @internal */
export type Created2$Outbound = {
  target?: Array<string> | string | undefined;
  type?: string | undefined;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key?: string | undefined;
  value?: string | undefined;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | CreateProjectEnvContentHintEnvs1$Outbound
    | CreateProjectEnvContentHintEnvs2$Outbound
    | CreateProjectEnvContentHintEnvs3$Outbound
    | CreateProjectEnvContentHintEnvs4$Outbound
    | CreateProjectEnvContentHintEnvs5$Outbound
    | CreateProjectEnvContentHintEnvs6$Outbound
    | CreateProjectEnvContentHintEnvs7$Outbound
    | CreateProjectEnvContentHintEnvs8$Outbound
    | CreateProjectEnvContentHintEnvs9$Outbound
    | CreateProjectEnvContentHintEnvs10$Outbound
    | CreateProjectEnvContentHintEnvs11$Outbound
    | CreateProjectEnvContentHintEnvs12$Outbound
    | CreateProjectEnvContentHintEnvs13$Outbound
    | CreateProjectEnvContentHintEnvs14$Outbound
    | null
    | undefined;
  internalContentHint?:
    | CreateProjectEnvCreatedInternalContentHint$Outbound
    | null
    | undefined;
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
  system?: boolean | undefined;
};

/** @internal */
export const Created2$outboundSchema: z.ZodType<
  Created2$Outbound,
  z.ZodTypeDef,
  Created2
> = z.object({
  target: z.union([
    z.array(CreateProjectEnvTargetEnvs1$outboundSchema),
    CreateProjectEnvTargetEnvs2$outboundSchema,
  ]).optional(),
  type: CreateProjectEnvCreatedType$outboundSchema.optional(),
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string().optional(),
  value: z.string().optional(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => CreateProjectEnvContentHintEnvs1$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs2$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs3$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs4$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs5$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs6$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs7$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs8$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs9$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs10$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs11$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs12$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs13$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHintEnvs14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => CreateProjectEnvCreatedInternalContentHint$outboundSchema),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
  system: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Created2$ {
  /** @deprecated use `Created2$inboundSchema` instead. */
  export const inboundSchema = Created2$inboundSchema;
  /** @deprecated use `Created2$outboundSchema` instead. */
  export const outboundSchema = Created2$outboundSchema;
  /** @deprecated use `Created2$Outbound` instead. */
  export type Outbound = Created2$Outbound;
}

/** @internal */
export const CreateProjectEnvTarget2$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTarget2
> = z.nativeEnum(CreateProjectEnvTarget2);

/** @internal */
export const CreateProjectEnvTarget2$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTarget2
> = CreateProjectEnvTarget2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvTarget2$ {
  /** @deprecated use `CreateProjectEnvTarget2$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvTarget2$inboundSchema;
  /** @deprecated use `CreateProjectEnvTarget2$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvTarget2$outboundSchema;
}

/** @internal */
export const CreateProjectEnvTarget1$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTarget1
> = z.nativeEnum(CreateProjectEnvTarget1);

/** @internal */
export const CreateProjectEnvTarget1$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTarget1
> = CreateProjectEnvTarget1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvTarget1$ {
  /** @deprecated use `CreateProjectEnvTarget1$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvTarget1$inboundSchema;
  /** @deprecated use `CreateProjectEnvTarget1$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvTarget1$outboundSchema;
}

/** @internal */
export const CreatedTarget$inboundSchema: z.ZodType<
  CreatedTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(CreateProjectEnvTarget1$inboundSchema),
  CreateProjectEnvTarget2$inboundSchema,
]);

/** @internal */
export type CreatedTarget$Outbound = Array<string> | string;

/** @internal */
export const CreatedTarget$outboundSchema: z.ZodType<
  CreatedTarget$Outbound,
  z.ZodTypeDef,
  CreatedTarget
> = z.union([
  z.array(CreateProjectEnvTarget1$outboundSchema),
  CreateProjectEnvTarget2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatedTarget$ {
  /** @deprecated use `CreatedTarget$inboundSchema` instead. */
  export const inboundSchema = CreatedTarget$inboundSchema;
  /** @deprecated use `CreatedTarget$outboundSchema` instead. */
  export const outboundSchema = CreatedTarget$outboundSchema;
  /** @deprecated use `CreatedTarget$Outbound` instead. */
  export type Outbound = CreatedTarget$Outbound;
}

/** @internal */
export const CreatedType$inboundSchema: z.ZodNativeEnum<typeof CreatedType> = z
  .nativeEnum(CreatedType);

/** @internal */
export const CreatedType$outboundSchema: z.ZodNativeEnum<typeof CreatedType> =
  CreatedType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatedType$ {
  /** @deprecated use `CreatedType$inboundSchema` instead. */
  export const inboundSchema = CreatedType$inboundSchema;
  /** @deprecated use `CreatedType$outboundSchema` instead. */
  export const outboundSchema = CreatedType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint14$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const CreateProjectEnvContentHint14$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint14$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint14
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated114Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint14$ {
  /** @deprecated use `CreateProjectEnvContentHint14$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint14$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint14$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint14$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint14$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint14$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint13$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint13$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint13$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint13
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated113Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint13$ {
  /** @deprecated use `CreateProjectEnvContentHint13$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint13$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint13$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint13$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint13$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint13$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint12$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint12$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint12$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint12
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated112Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint12$ {
  /** @deprecated use `CreateProjectEnvContentHint12$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint12$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint12$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint12$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint12$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint12$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint11$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint11$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint11$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint11
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated111Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint11$ {
  /** @deprecated use `CreateProjectEnvContentHint11$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint11$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint11$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint11$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint11$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint11$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint10$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint10$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint10$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint10
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated110Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint10$ {
  /** @deprecated use `CreateProjectEnvContentHint10$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint10$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint10$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint10$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint10$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint10$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint9$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint9$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint9$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint9
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated19Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint9$ {
  /** @deprecated use `CreateProjectEnvContentHint9$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint9$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint9$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint9$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint9$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint9$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint8$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint8$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint8$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint8
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreated1Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint8$ {
  /** @deprecated use `CreateProjectEnvContentHint8$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint8$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint8$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint8$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint8$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint8$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint7$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint7$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint7$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint7
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyCreatedType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint7$ {
  /** @deprecated use `CreateProjectEnvContentHint7$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint7$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint7$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint7$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint7$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint7$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint6$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint6$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint6$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint6
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONResponseBodyType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint6$ {
  /** @deprecated use `CreateProjectEnvContentHint6$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint6$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint6$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint6$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint6$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint6$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType
  > = z.nativeEnum(
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType,
  );

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType
  > =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint5$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint5$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint5$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint5
> = z.object({
  type:
    CreateProjectEnvContentHintEnvsResponse201ApplicationJSONType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint5$ {
  /** @deprecated use `CreateProjectEnvContentHint5$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint5$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint5$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint5$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint5$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint5$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201Type$inboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvContentHintEnvsResponse201Type> = z
    .nativeEnum(CreateProjectEnvContentHintEnvsResponse201Type);

/** @internal */
export const CreateProjectEnvContentHintEnvsResponse201Type$outboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvContentHintEnvsResponse201Type> =
    CreateProjectEnvContentHintEnvsResponse201Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponse201Type$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponse201Type$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponse201Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponse201Type$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint4$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateProjectEnvContentHintEnvsResponse201Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint4$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint4$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint4
> = z.object({
  type: CreateProjectEnvContentHintEnvsResponse201Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint4$ {
  /** @deprecated use `CreateProjectEnvContentHint4$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint4$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint4$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint4$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint4$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint4$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvContentHintEnvsResponseType> = z
    .nativeEnum(CreateProjectEnvContentHintEnvsResponseType);

/** @internal */
export const CreateProjectEnvContentHintEnvsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvContentHintEnvsResponseType> =
    CreateProjectEnvContentHintEnvsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsResponseType$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsResponseType$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsResponseType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint3$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateProjectEnvContentHintEnvsResponseType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint3$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint3$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint3
> = z.object({
  type: CreateProjectEnvContentHintEnvsResponseType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint3$ {
  /** @deprecated use `CreateProjectEnvContentHint3$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint3$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint3$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint3$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint3$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint3$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintEnvsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvContentHintEnvsType
> = z.nativeEnum(CreateProjectEnvContentHintEnvsType);

/** @internal */
export const CreateProjectEnvContentHintEnvsType$outboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvContentHintEnvsType> =
    CreateProjectEnvContentHintEnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintEnvsType$ {
  /** @deprecated use `CreateProjectEnvContentHintEnvsType$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvContentHintEnvsType$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintEnvsType$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvContentHintEnvsType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint2$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateProjectEnvContentHintEnvsType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint2$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint2$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint2
> = z.object({
  type: CreateProjectEnvContentHintEnvsType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint2$ {
  /** @deprecated use `CreateProjectEnvContentHint2$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint2$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint2$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint2$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint2$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint2$Outbound;
}

/** @internal */
export const CreateProjectEnvContentHintType$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvContentHintType
> = z.nativeEnum(CreateProjectEnvContentHintType);

/** @internal */
export const CreateProjectEnvContentHintType$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvContentHintType
> = CreateProjectEnvContentHintType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHintType$ {
  /** @deprecated use `CreateProjectEnvContentHintType$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHintType$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHintType$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHintType$outboundSchema;
}

/** @internal */
export const CreateProjectEnvContentHint1$inboundSchema: z.ZodType<
  CreateProjectEnvContentHint1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateProjectEnvContentHintType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type CreateProjectEnvContentHint1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const CreateProjectEnvContentHint1$outboundSchema: z.ZodType<
  CreateProjectEnvContentHint1$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvContentHint1
> = z.object({
  type: CreateProjectEnvContentHintType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvContentHint1$ {
  /** @deprecated use `CreateProjectEnvContentHint1$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvContentHint1$inboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint1$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvContentHint1$outboundSchema;
  /** @deprecated use `CreateProjectEnvContentHint1$Outbound` instead. */
  export type Outbound = CreateProjectEnvContentHint1$Outbound;
}

/** @internal */
export const CreatedContentHint$inboundSchema: z.ZodType<
  CreatedContentHint,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateProjectEnvContentHint1$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint2$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint3$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint4$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint5$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint6$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint7$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint8$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint9$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint10$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint11$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint12$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint13$inboundSchema),
  z.lazy(() => CreateProjectEnvContentHint14$inboundSchema),
]);

/** @internal */
export type CreatedContentHint$Outbound =
  | CreateProjectEnvContentHint1$Outbound
  | CreateProjectEnvContentHint2$Outbound
  | CreateProjectEnvContentHint3$Outbound
  | CreateProjectEnvContentHint4$Outbound
  | CreateProjectEnvContentHint5$Outbound
  | CreateProjectEnvContentHint6$Outbound
  | CreateProjectEnvContentHint7$Outbound
  | CreateProjectEnvContentHint8$Outbound
  | CreateProjectEnvContentHint9$Outbound
  | CreateProjectEnvContentHint10$Outbound
  | CreateProjectEnvContentHint11$Outbound
  | CreateProjectEnvContentHint12$Outbound
  | CreateProjectEnvContentHint13$Outbound
  | CreateProjectEnvContentHint14$Outbound;

/** @internal */
export const CreatedContentHint$outboundSchema: z.ZodType<
  CreatedContentHint$Outbound,
  z.ZodTypeDef,
  CreatedContentHint
> = z.union([
  z.lazy(() => CreateProjectEnvContentHint1$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint2$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint3$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint4$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint5$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint6$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint7$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint8$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint9$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint10$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint11$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint12$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint13$outboundSchema),
  z.lazy(() => CreateProjectEnvContentHint14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatedContentHint$ {
  /** @deprecated use `CreatedContentHint$inboundSchema` instead. */
  export const inboundSchema = CreatedContentHint$inboundSchema;
  /** @deprecated use `CreatedContentHint$outboundSchema` instead. */
  export const outboundSchema = CreatedContentHint$outboundSchema;
  /** @deprecated use `CreatedContentHint$Outbound` instead. */
  export type Outbound = CreatedContentHint$Outbound;
}

/** @internal */
export const CreateProjectEnvCreatedEnvsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvCreatedEnvsType
> = z.nativeEnum(CreateProjectEnvCreatedEnvsType);

/** @internal */
export const CreateProjectEnvCreatedEnvsType$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvCreatedEnvsType
> = CreateProjectEnvCreatedEnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvCreatedEnvsType$ {
  /** @deprecated use `CreateProjectEnvCreatedEnvsType$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvCreatedEnvsType$inboundSchema;
  /** @deprecated use `CreateProjectEnvCreatedEnvsType$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvCreatedEnvsType$outboundSchema;
}

/** @internal */
export const CreatedInternalContentHint$inboundSchema: z.ZodType<
  CreatedInternalContentHint,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateProjectEnvCreatedEnvsType$inboundSchema,
  encryptedValue: z.string(),
});

/** @internal */
export type CreatedInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const CreatedInternalContentHint$outboundSchema: z.ZodType<
  CreatedInternalContentHint$Outbound,
  z.ZodTypeDef,
  CreatedInternalContentHint
> = z.object({
  type: CreateProjectEnvCreatedEnvsType$outboundSchema,
  encryptedValue: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatedInternalContentHint$ {
  /** @deprecated use `CreatedInternalContentHint$inboundSchema` instead. */
  export const inboundSchema = CreatedInternalContentHint$inboundSchema;
  /** @deprecated use `CreatedInternalContentHint$outboundSchema` instead. */
  export const outboundSchema = CreatedInternalContentHint$outboundSchema;
  /** @deprecated use `CreatedInternalContentHint$Outbound` instead. */
  export type Outbound = CreatedInternalContentHint$Outbound;
}

/** @internal */
export const Created1$inboundSchema: z.ZodType<
  Created1,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(CreateProjectEnvTarget1$inboundSchema),
    CreateProjectEnvTarget2$inboundSchema,
  ]).optional(),
  type: CreatedType$inboundSchema.optional(),
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string().optional(),
  value: z.string().optional(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => CreateProjectEnvContentHint1$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint2$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint3$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint4$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint5$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint6$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint7$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint8$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint9$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint10$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint11$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint12$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint13$inboundSchema),
      z.lazy(() => CreateProjectEnvContentHint14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => CreatedInternalContentHint$inboundSchema),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
  system: z.boolean().optional(),
});

/** @internal */
export type Created1$Outbound = {
  target?: Array<string> | string | undefined;
  type?: string | undefined;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key?: string | undefined;
  value?: string | undefined;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | CreateProjectEnvContentHint1$Outbound
    | CreateProjectEnvContentHint2$Outbound
    | CreateProjectEnvContentHint3$Outbound
    | CreateProjectEnvContentHint4$Outbound
    | CreateProjectEnvContentHint5$Outbound
    | CreateProjectEnvContentHint6$Outbound
    | CreateProjectEnvContentHint7$Outbound
    | CreateProjectEnvContentHint8$Outbound
    | CreateProjectEnvContentHint9$Outbound
    | CreateProjectEnvContentHint10$Outbound
    | CreateProjectEnvContentHint11$Outbound
    | CreateProjectEnvContentHint12$Outbound
    | CreateProjectEnvContentHint13$Outbound
    | CreateProjectEnvContentHint14$Outbound
    | null
    | undefined;
  internalContentHint?: CreatedInternalContentHint$Outbound | null | undefined;
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
  system?: boolean | undefined;
};

/** @internal */
export const Created1$outboundSchema: z.ZodType<
  Created1$Outbound,
  z.ZodTypeDef,
  Created1
> = z.object({
  target: z.union([
    z.array(CreateProjectEnvTarget1$outboundSchema),
    CreateProjectEnvTarget2$outboundSchema,
  ]).optional(),
  type: CreatedType$outboundSchema.optional(),
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string().optional(),
  value: z.string().optional(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => CreateProjectEnvContentHint1$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint2$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint3$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint4$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint5$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint6$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint7$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint8$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint9$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint10$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint11$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint12$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint13$outboundSchema),
      z.lazy(() => CreateProjectEnvContentHint14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => CreatedInternalContentHint$outboundSchema),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
  system: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Created1$ {
  /** @deprecated use `Created1$inboundSchema` instead. */
  export const inboundSchema = Created1$inboundSchema;
  /** @deprecated use `Created1$outboundSchema` instead. */
  export const outboundSchema = Created1$outboundSchema;
  /** @deprecated use `Created1$Outbound` instead. */
  export type Outbound = Created1$Outbound;
}

/** @internal */
export const Created$inboundSchema: z.ZodType<Created, z.ZodTypeDef, unknown> =
  z.union([
    z.lazy(() => Created1$inboundSchema),
    z.array(z.lazy(() => Created2$inboundSchema)),
  ]);

/** @internal */
export type Created$Outbound = Created1$Outbound | Array<Created2$Outbound>;

/** @internal */
export const Created$outboundSchema: z.ZodType<
  Created$Outbound,
  z.ZodTypeDef,
  Created
> = z.union([
  z.lazy(() => Created1$outboundSchema),
  z.array(z.lazy(() => Created2$outboundSchema)),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Created$ {
  /** @deprecated use `Created$inboundSchema` instead. */
  export const inboundSchema = Created$inboundSchema;
  /** @deprecated use `Created$outboundSchema` instead. */
  export const outboundSchema = Created$outboundSchema;
  /** @deprecated use `Created$Outbound` instead. */
  export type Outbound = Created$Outbound;
}

/** @internal */
export const CreateProjectEnvValue2$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvValue2
> = z.nativeEnum(CreateProjectEnvValue2);

/** @internal */
export const CreateProjectEnvValue2$outboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvValue2
> = CreateProjectEnvValue2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvValue2$ {
  /** @deprecated use `CreateProjectEnvValue2$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvValue2$inboundSchema;
  /** @deprecated use `CreateProjectEnvValue2$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvValue2$outboundSchema;
}

/** @internal */
export const CreateProjectEnvValue$inboundSchema: z.ZodType<
  CreateProjectEnvValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.array(CreateProjectEnvValue2$inboundSchema)]);

/** @internal */
export type CreateProjectEnvValue$Outbound = string | Array<string>;

/** @internal */
export const CreateProjectEnvValue$outboundSchema: z.ZodType<
  CreateProjectEnvValue$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvValue
> = z.union([z.string(), z.array(CreateProjectEnvValue2$outboundSchema)]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvValue$ {
  /** @deprecated use `CreateProjectEnvValue$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvValue$inboundSchema;
  /** @deprecated use `CreateProjectEnvValue$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvValue$outboundSchema;
  /** @deprecated use `CreateProjectEnvValue$Outbound` instead. */
  export type Outbound = CreateProjectEnvValue$Outbound;
}

/** @internal */
export const CreateProjectEnvTargetEnvsResponse2$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTargetEnvsResponse2
> = z.nativeEnum(CreateProjectEnvTargetEnvsResponse2);

/** @internal */
export const CreateProjectEnvTargetEnvsResponse2$outboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvTargetEnvsResponse2> =
    CreateProjectEnvTargetEnvsResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvTargetEnvsResponse2$ {
  /** @deprecated use `CreateProjectEnvTargetEnvsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvTargetEnvsResponse2$inboundSchema;
  /** @deprecated use `CreateProjectEnvTargetEnvsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvTargetEnvsResponse2$outboundSchema;
}

/** @internal */
export const CreateProjectEnvTargetEnvsResponse1$inboundSchema: z.ZodNativeEnum<
  typeof CreateProjectEnvTargetEnvsResponse1
> = z.nativeEnum(CreateProjectEnvTargetEnvsResponse1);

/** @internal */
export const CreateProjectEnvTargetEnvsResponse1$outboundSchema:
  z.ZodNativeEnum<typeof CreateProjectEnvTargetEnvsResponse1> =
    CreateProjectEnvTargetEnvsResponse1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvTargetEnvsResponse1$ {
  /** @deprecated use `CreateProjectEnvTargetEnvsResponse1$inboundSchema` instead. */
  export const inboundSchema =
    CreateProjectEnvTargetEnvsResponse1$inboundSchema;
  /** @deprecated use `CreateProjectEnvTargetEnvsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectEnvTargetEnvsResponse1$outboundSchema;
}

/** @internal */
export const CreateProjectEnvTarget$inboundSchema: z.ZodType<
  CreateProjectEnvTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(CreateProjectEnvTargetEnvsResponse1$inboundSchema),
  CreateProjectEnvTargetEnvsResponse2$inboundSchema,
]);

/** @internal */
export type CreateProjectEnvTarget$Outbound = Array<string> | string;

/** @internal */
export const CreateProjectEnvTarget$outboundSchema: z.ZodType<
  CreateProjectEnvTarget$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvTarget
> = z.union([
  z.array(CreateProjectEnvTargetEnvsResponse1$outboundSchema),
  CreateProjectEnvTargetEnvsResponse2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvTarget$ {
  /** @deprecated use `CreateProjectEnvTarget$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvTarget$inboundSchema;
  /** @deprecated use `CreateProjectEnvTarget$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvTarget$outboundSchema;
  /** @deprecated use `CreateProjectEnvTarget$Outbound` instead. */
  export type Outbound = CreateProjectEnvTarget$Outbound;
}

/** @internal */
export const CreateProjectEnvError$inboundSchema: z.ZodType<
  CreateProjectEnvError,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  message: z.string(),
  key: z.string().optional(),
  envVarId: z.string().optional(),
  envVarKey: z.string().optional(),
  action: z.string().optional(),
  link: z.string().optional(),
  value: z.union([z.string(), z.array(CreateProjectEnvValue2$inboundSchema)])
    .optional(),
  gitBranch: z.string().optional(),
  target: z.union([
    z.array(CreateProjectEnvTargetEnvsResponse1$inboundSchema),
    CreateProjectEnvTargetEnvsResponse2$inboundSchema,
  ]).optional(),
  project: z.string().optional(),
});

/** @internal */
export type CreateProjectEnvError$Outbound = {
  code: string;
  message: string;
  key?: string | undefined;
  envVarId?: string | undefined;
  envVarKey?: string | undefined;
  action?: string | undefined;
  link?: string | undefined;
  value?: string | Array<string> | undefined;
  gitBranch?: string | undefined;
  target?: Array<string> | string | undefined;
  project?: string | undefined;
};

/** @internal */
export const CreateProjectEnvError$outboundSchema: z.ZodType<
  CreateProjectEnvError$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvError
> = z.object({
  code: z.string(),
  message: z.string(),
  key: z.string().optional(),
  envVarId: z.string().optional(),
  envVarKey: z.string().optional(),
  action: z.string().optional(),
  link: z.string().optional(),
  value: z.union([z.string(), z.array(CreateProjectEnvValue2$outboundSchema)])
    .optional(),
  gitBranch: z.string().optional(),
  target: z.union([
    z.array(CreateProjectEnvTargetEnvsResponse1$outboundSchema),
    CreateProjectEnvTargetEnvsResponse2$outboundSchema,
  ]).optional(),
  project: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvError$ {
  /** @deprecated use `CreateProjectEnvError$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvError$inboundSchema;
  /** @deprecated use `CreateProjectEnvError$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvError$outboundSchema;
  /** @deprecated use `CreateProjectEnvError$Outbound` instead. */
  export type Outbound = CreateProjectEnvError$Outbound;
}

/** @internal */
export const Failed$inboundSchema: z.ZodType<Failed, z.ZodTypeDef, unknown> = z
  .object({
    error: z.lazy(() => CreateProjectEnvError$inboundSchema),
  });

/** @internal */
export type Failed$Outbound = {
  error: CreateProjectEnvError$Outbound;
};

/** @internal */
export const Failed$outboundSchema: z.ZodType<
  Failed$Outbound,
  z.ZodTypeDef,
  Failed
> = z.object({
  error: z.lazy(() => CreateProjectEnvError$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Failed$ {
  /** @deprecated use `Failed$inboundSchema` instead. */
  export const inboundSchema = Failed$inboundSchema;
  /** @deprecated use `Failed$outboundSchema` instead. */
  export const outboundSchema = Failed$outboundSchema;
  /** @deprecated use `Failed$Outbound` instead. */
  export type Outbound = Failed$Outbound;
}

/** @internal */
export const CreateProjectEnvResponseBody$inboundSchema: z.ZodType<
  CreateProjectEnvResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  created: z.union([
    z.lazy(() => Created1$inboundSchema),
    z.array(z.lazy(() => Created2$inboundSchema)),
  ]),
  failed: z.array(z.lazy(() => Failed$inboundSchema)),
});

/** @internal */
export type CreateProjectEnvResponseBody$Outbound = {
  created: Created1$Outbound | Array<Created2$Outbound>;
  failed: Array<Failed$Outbound>;
};

/** @internal */
export const CreateProjectEnvResponseBody$outboundSchema: z.ZodType<
  CreateProjectEnvResponseBody$Outbound,
  z.ZodTypeDef,
  CreateProjectEnvResponseBody
> = z.object({
  created: z.union([
    z.lazy(() => Created1$outboundSchema),
    z.array(z.lazy(() => Created2$outboundSchema)),
  ]),
  failed: z.array(z.lazy(() => Failed$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectEnvResponseBody$ {
  /** @deprecated use `CreateProjectEnvResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateProjectEnvResponseBody$inboundSchema;
  /** @deprecated use `CreateProjectEnvResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateProjectEnvResponseBody$outboundSchema;
  /** @deprecated use `CreateProjectEnvResponseBody$Outbound` instead. */
  export type Outbound = CreateProjectEnvResponseBody$Outbound;
}
