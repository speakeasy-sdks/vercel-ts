/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An object describing the reason why the User account is being deleted.
 */
export type RequestDeleteReasons = {
    /**
     * Idenitifier slug of the reason why the User account is being deleted.
     */
    slug: string;
    /**
     * Description of the reason why the User account is being deleted.
     */
    description: string;
};

export type RequestDeleteRequestBody = {
    /**
     * Optional array of objects that describe the reason why the User account is being deleted.
     */
    reasons?: Array<RequestDeleteReasons> | undefined;
};

/**
 * Response indicating that the User deletion process has been initiated, and a confirmation email has been sent.
 */
export type RequestDeleteResponseBody = {
    /**
     * Unique identifier of the User who has initiated deletion.
     */
    id: string;
    /**
     * Email address of the User who has initiated deletion.
     */
    email: string;
    /**
     * User deletion progress status.
     */
    message: string;
};

/** @internal */
export namespace RequestDeleteReasons$ {
    export const inboundSchema: z.ZodType<RequestDeleteReasons, z.ZodTypeDef, unknown> = z.object({
        slug: z.string(),
        description: z.string(),
    });

    export type Outbound = {
        slug: string;
        description: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RequestDeleteReasons> = z.object(
        {
            slug: z.string(),
            description: z.string(),
        }
    );
}

/** @internal */
export namespace RequestDeleteRequestBody$ {
    export const inboundSchema: z.ZodType<RequestDeleteRequestBody, z.ZodTypeDef, unknown> =
        z.object({
            reasons: z.array(z.lazy(() => RequestDeleteReasons$.inboundSchema)).optional(),
        });

    export type Outbound = {
        reasons?: Array<RequestDeleteReasons$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RequestDeleteRequestBody> =
        z.object({
            reasons: z.array(z.lazy(() => RequestDeleteReasons$.outboundSchema)).optional(),
        });
}

/** @internal */
export namespace RequestDeleteResponseBody$ {
    export const inboundSchema: z.ZodType<RequestDeleteResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            id: z.string(),
            email: z.string(),
            message: z.string(),
        });

    export type Outbound = {
        id: string;
        email: string;
        message: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RequestDeleteResponseBody> =
        z.object({
            id: z.string(),
            email: z.string(),
            message: z.string(),
        });
}
