/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export type RemoveProjectEnvRequest = {
  /**
   * The unique project identifier or the project name
   */
  idOrName: string;
  /**
   * The unique environment variable identifier
   */
  id: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
};

export const RemoveProjectEnvTargetEnvsResponse2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type RemoveProjectEnvTargetEnvsResponse2 = ClosedEnum<
  typeof RemoveProjectEnvTargetEnvsResponse2
>;

export const RemoveProjectEnvTargetEnvsResponse1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type RemoveProjectEnvTargetEnvsResponse1 = ClosedEnum<
  typeof RemoveProjectEnvTargetEnvsResponse1
>;

export type RemoveProjectEnvResponseBodyEnvsResponseTarget =
  | Array<RemoveProjectEnvTargetEnvsResponse1>
  | RemoveProjectEnvTargetEnvsResponse2;

export const RemoveProjectEnvResponseBodyEnvsResponseType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type RemoveProjectEnvResponseBodyEnvsResponseType = ClosedEnum<
  typeof RemoveProjectEnvResponseBodyEnvsResponseType
>;

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse14 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse13 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse12 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse11 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse10 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse9 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse8 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse7 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse6 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type =
  {
    BlobReadWriteToken: "blob-read-write-token",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse5 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type =
  {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse4 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type =
  {
    RedisRestApiToken: "redis-rest-api-token",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse3 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type =
  {
    RedisRestApiUrl: "redis-rest-api-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse2 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type =
  {
    RedisUrl: "redis-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type
  >;

export type RemoveProjectEnvContentHintEnvsResponse1 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type;
  storeId: string;
};

export type RemoveProjectEnvResponseBodyEnvsResponseContentHint =
  | RemoveProjectEnvContentHintEnvsResponse1
  | RemoveProjectEnvContentHintEnvsResponse2
  | RemoveProjectEnvContentHintEnvsResponse3
  | RemoveProjectEnvContentHintEnvsResponse4
  | RemoveProjectEnvContentHintEnvsResponse5
  | RemoveProjectEnvContentHintEnvsResponse6
  | RemoveProjectEnvContentHintEnvsResponse7
  | RemoveProjectEnvContentHintEnvsResponse8
  | RemoveProjectEnvContentHintEnvsResponse9
  | RemoveProjectEnvContentHintEnvsResponse10
  | RemoveProjectEnvContentHintEnvsResponse11
  | RemoveProjectEnvContentHintEnvsResponse12
  | RemoveProjectEnvContentHintEnvsResponse13
  | RemoveProjectEnvContentHintEnvsResponse14;

export const RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type = {
  FlagsSecret: "flags-secret",
} as const;
export type RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type =
  ClosedEnum<
    typeof RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type
  >;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint = {
  type: RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type RemoveProjectEnvResponseBody3 = {
  target?:
    | Array<RemoveProjectEnvTargetEnvsResponse1>
    | RemoveProjectEnvTargetEnvsResponse2
    | undefined;
  type: RemoveProjectEnvResponseBodyEnvsResponseType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | RemoveProjectEnvContentHintEnvsResponse1
    | RemoveProjectEnvContentHintEnvsResponse2
    | RemoveProjectEnvContentHintEnvsResponse3
    | RemoveProjectEnvContentHintEnvsResponse4
    | RemoveProjectEnvContentHintEnvsResponse5
    | RemoveProjectEnvContentHintEnvsResponse6
    | RemoveProjectEnvContentHintEnvsResponse7
    | RemoveProjectEnvContentHintEnvsResponse8
    | RemoveProjectEnvContentHintEnvsResponse9
    | RemoveProjectEnvContentHintEnvsResponse10
    | RemoveProjectEnvContentHintEnvsResponse11
    | RemoveProjectEnvContentHintEnvsResponse12
    | RemoveProjectEnvContentHintEnvsResponse13
    | RemoveProjectEnvContentHintEnvsResponse14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint
    | null
    | undefined;
  /**
   * Whether `value` and `vsmValue` are decrypted.
   */
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

export const RemoveProjectEnvTargetEnvs2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type RemoveProjectEnvTargetEnvs2 = ClosedEnum<
  typeof RemoveProjectEnvTargetEnvs2
>;

export const RemoveProjectEnvTargetEnvs1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type RemoveProjectEnvTargetEnvs1 = ClosedEnum<
  typeof RemoveProjectEnvTargetEnvs1
>;

export type RemoveProjectEnvResponseBodyEnvsTarget =
  | Array<RemoveProjectEnvTargetEnvs1>
  | RemoveProjectEnvTargetEnvs2;

export const RemoveProjectEnvResponseBodyEnvsType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type RemoveProjectEnvResponseBodyEnvsType = ClosedEnum<
  typeof RemoveProjectEnvResponseBodyEnvsType
>;

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type
  >;

export type RemoveProjectEnvContentHintEnvs14 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type
  >;

export type RemoveProjectEnvContentHintEnvs13 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type
  >;

export type RemoveProjectEnvContentHintEnvs12 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type
  >;

export type RemoveProjectEnvContentHintEnvs11 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type
  >;

export type RemoveProjectEnvContentHintEnvs10 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type
  >;

export type RemoveProjectEnvContentHintEnvs9 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type
  >;

export type RemoveProjectEnvContentHintEnvs8 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type
  >;

export type RemoveProjectEnvContentHintEnvs7 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type
  >;

export type RemoveProjectEnvContentHintEnvs6 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type =
  {
    BlobReadWriteToken: "blob-read-write-token",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type
  >;

export type RemoveProjectEnvContentHintEnvs5 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type =
  {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type
  >;

export type RemoveProjectEnvContentHintEnvs4 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type =
  {
    RedisRestApiToken: "redis-rest-api-token",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type
  >;

export type RemoveProjectEnvContentHintEnvs3 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type =
  {
    RedisRestApiUrl: "redis-rest-api-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type
  >;

export type RemoveProjectEnvContentHintEnvs2 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type =
  {
    RedisUrl: "redis-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type
  >;

export type RemoveProjectEnvContentHintEnvs1 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type;
  storeId: string;
};

export type RemoveProjectEnvResponseBodyEnvsContentHint =
  | RemoveProjectEnvContentHintEnvs1
  | RemoveProjectEnvContentHintEnvs2
  | RemoveProjectEnvContentHintEnvs3
  | RemoveProjectEnvContentHintEnvs4
  | RemoveProjectEnvContentHintEnvs5
  | RemoveProjectEnvContentHintEnvs6
  | RemoveProjectEnvContentHintEnvs7
  | RemoveProjectEnvContentHintEnvs8
  | RemoveProjectEnvContentHintEnvs9
  | RemoveProjectEnvContentHintEnvs10
  | RemoveProjectEnvContentHintEnvs11
  | RemoveProjectEnvContentHintEnvs12
  | RemoveProjectEnvContentHintEnvs13
  | RemoveProjectEnvContentHintEnvs14;

export const RemoveProjectEnvResponseBodyEnvsResponse200Type = {
  FlagsSecret: "flags-secret",
} as const;
export type RemoveProjectEnvResponseBodyEnvsResponse200Type = ClosedEnum<
  typeof RemoveProjectEnvResponseBodyEnvsResponse200Type
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type RemoveProjectEnvResponseBodyEnvsInternalContentHint = {
  type: RemoveProjectEnvResponseBodyEnvsResponse200Type;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type RemoveProjectEnvResponseBody2 = {
  system?: boolean | undefined;
  target?:
    | Array<RemoveProjectEnvTargetEnvs1>
    | RemoveProjectEnvTargetEnvs2
    | undefined;
  type: RemoveProjectEnvResponseBodyEnvsType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | RemoveProjectEnvContentHintEnvs1
    | RemoveProjectEnvContentHintEnvs2
    | RemoveProjectEnvContentHintEnvs3
    | RemoveProjectEnvContentHintEnvs4
    | RemoveProjectEnvContentHintEnvs5
    | RemoveProjectEnvContentHintEnvs6
    | RemoveProjectEnvContentHintEnvs7
    | RemoveProjectEnvContentHintEnvs8
    | RemoveProjectEnvContentHintEnvs9
    | RemoveProjectEnvContentHintEnvs10
    | RemoveProjectEnvContentHintEnvs11
    | RemoveProjectEnvContentHintEnvs12
    | RemoveProjectEnvContentHintEnvs13
    | RemoveProjectEnvContentHintEnvs14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | RemoveProjectEnvResponseBodyEnvsInternalContentHint
    | null
    | undefined;
  /**
   * Whether `value` and `vsmValue` are decrypted.
   */
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

export const RemoveProjectEnvTarget2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type RemoveProjectEnvTarget2 = ClosedEnum<
  typeof RemoveProjectEnvTarget2
>;

export const RemoveProjectEnvTarget1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type RemoveProjectEnvTarget1 = ClosedEnum<
  typeof RemoveProjectEnvTarget1
>;

export type RemoveProjectEnvResponseBodyTarget =
  | Array<RemoveProjectEnvTarget1>
  | RemoveProjectEnvTarget2;

export const RemoveProjectEnvResponseBodyType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type RemoveProjectEnvResponseBodyType = ClosedEnum<
  typeof RemoveProjectEnvResponseBodyType
>;

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type
  >;

export type RemoveProjectEnvContentHint14 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type
  >;

export type RemoveProjectEnvContentHint13 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type
  >;

export type RemoveProjectEnvContentHint12 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type
  >;

export type RemoveProjectEnvContentHint11 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type
  >;

export type RemoveProjectEnvContentHint10 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type
  >;

export type RemoveProjectEnvContentHint9 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type
  >;

export type RemoveProjectEnvContentHint8 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type
  >;

export type RemoveProjectEnvContentHint7 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType
  >;

export type RemoveProjectEnvContentHint6 = {
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType = {
  BlobReadWriteToken: "blob-read-write-token",
} as const;
export type RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType
  >;

export type RemoveProjectEnvContentHint5 = {
  type: RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponse200Type = {
  RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
} as const;
export type RemoveProjectEnvContentHintEnvsResponse200Type = ClosedEnum<
  typeof RemoveProjectEnvContentHintEnvsResponse200Type
>;

export type RemoveProjectEnvContentHint4 = {
  type: RemoveProjectEnvContentHintEnvsResponse200Type;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsResponseType = {
  RedisRestApiToken: "redis-rest-api-token",
} as const;
export type RemoveProjectEnvContentHintEnvsResponseType = ClosedEnum<
  typeof RemoveProjectEnvContentHintEnvsResponseType
>;

export type RemoveProjectEnvContentHint3 = {
  type: RemoveProjectEnvContentHintEnvsResponseType;
  storeId: string;
};

export const RemoveProjectEnvContentHintEnvsType = {
  RedisRestApiUrl: "redis-rest-api-url",
} as const;
export type RemoveProjectEnvContentHintEnvsType = ClosedEnum<
  typeof RemoveProjectEnvContentHintEnvsType
>;

export type RemoveProjectEnvContentHint2 = {
  type: RemoveProjectEnvContentHintEnvsType;
  storeId: string;
};

export const RemoveProjectEnvContentHintType = {
  RedisUrl: "redis-url",
} as const;
export type RemoveProjectEnvContentHintType = ClosedEnum<
  typeof RemoveProjectEnvContentHintType
>;

export type RemoveProjectEnvContentHint1 = {
  type: RemoveProjectEnvContentHintType;
  storeId: string;
};

export type RemoveProjectEnvResponseBodyContentHint =
  | RemoveProjectEnvContentHint1
  | RemoveProjectEnvContentHint2
  | RemoveProjectEnvContentHint3
  | RemoveProjectEnvContentHint4
  | RemoveProjectEnvContentHint5
  | RemoveProjectEnvContentHint6
  | RemoveProjectEnvContentHint7
  | RemoveProjectEnvContentHint8
  | RemoveProjectEnvContentHint9
  | RemoveProjectEnvContentHint10
  | RemoveProjectEnvContentHint11
  | RemoveProjectEnvContentHint12
  | RemoveProjectEnvContentHint13
  | RemoveProjectEnvContentHint14;

export const RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType = {
  FlagsSecret: "flags-secret",
} as const;
export type RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType
  >;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type RemoveProjectEnvResponseBodyInternalContentHint = {
  type: RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type RemoveProjectEnvResponseBody1 = {
  target?: Array<RemoveProjectEnvTarget1> | RemoveProjectEnvTarget2 | undefined;
  type: RemoveProjectEnvResponseBodyType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | RemoveProjectEnvContentHint1
    | RemoveProjectEnvContentHint2
    | RemoveProjectEnvContentHint3
    | RemoveProjectEnvContentHint4
    | RemoveProjectEnvContentHint5
    | RemoveProjectEnvContentHint6
    | RemoveProjectEnvContentHint7
    | RemoveProjectEnvContentHint8
    | RemoveProjectEnvContentHint9
    | RemoveProjectEnvContentHint10
    | RemoveProjectEnvContentHint11
    | RemoveProjectEnvContentHint12
    | RemoveProjectEnvContentHint13
    | RemoveProjectEnvContentHint14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | RemoveProjectEnvResponseBodyInternalContentHint
    | null
    | undefined;
  /**
   * Whether `value` and `vsmValue` are decrypted.
   */
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

/**
 * The environment variable was successfully removed
 */
export type RemoveProjectEnvResponseBody =
  | RemoveProjectEnvResponseBody3
  | RemoveProjectEnvResponseBody2
  | Array<RemoveProjectEnvResponseBody1>;

/** @internal */
export const RemoveProjectEnvRequest$inboundSchema: z.ZodType<
  RemoveProjectEnvRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  idOrName: z.string(),
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/** @internal */
export type RemoveProjectEnvRequest$Outbound = {
  idOrName: string;
  id: string;
  teamId?: string | undefined;
  slug?: string | undefined;
};

/** @internal */
export const RemoveProjectEnvRequest$outboundSchema: z.ZodType<
  RemoveProjectEnvRequest$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvRequest
> = z.object({
  idOrName: z.string(),
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvRequest$ {
  /** @deprecated use `RemoveProjectEnvRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvRequest$inboundSchema;
  /** @deprecated use `RemoveProjectEnvRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvRequest$outboundSchema;
  /** @deprecated use `RemoveProjectEnvRequest$Outbound` instead. */
  export type Outbound = RemoveProjectEnvRequest$Outbound;
}

/** @internal */
export const RemoveProjectEnvTargetEnvsResponse2$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTargetEnvsResponse2
> = z.nativeEnum(RemoveProjectEnvTargetEnvsResponse2);

/** @internal */
export const RemoveProjectEnvTargetEnvsResponse2$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvTargetEnvsResponse2> =
    RemoveProjectEnvTargetEnvsResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvTargetEnvsResponse2$ {
  /** @deprecated use `RemoveProjectEnvTargetEnvsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvTargetEnvsResponse2$inboundSchema;
  /** @deprecated use `RemoveProjectEnvTargetEnvsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvTargetEnvsResponse2$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvTargetEnvsResponse1$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTargetEnvsResponse1
> = z.nativeEnum(RemoveProjectEnvTargetEnvsResponse1);

/** @internal */
export const RemoveProjectEnvTargetEnvsResponse1$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvTargetEnvsResponse1> =
    RemoveProjectEnvTargetEnvsResponse1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvTargetEnvsResponse1$ {
  /** @deprecated use `RemoveProjectEnvTargetEnvsResponse1$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvTargetEnvsResponse1$inboundSchema;
  /** @deprecated use `RemoveProjectEnvTargetEnvsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvTargetEnvsResponse1$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseTarget$inboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsResponseTarget,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.array(RemoveProjectEnvTargetEnvsResponse1$inboundSchema),
    RemoveProjectEnvTargetEnvsResponse2$inboundSchema,
  ]);

/** @internal */
export type RemoveProjectEnvResponseBodyEnvsResponseTarget$Outbound =
  | Array<string>
  | string;

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseTarget$outboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsResponseTarget$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvResponseBodyEnvsResponseTarget
  > = z.union([
    z.array(RemoveProjectEnvTargetEnvsResponse1$outboundSchema),
    RemoveProjectEnvTargetEnvsResponse2$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsResponseTarget$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseTarget$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseTarget$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseTarget$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseTarget$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseTarget$Outbound` instead. */
  export type Outbound =
    RemoveProjectEnvResponseBodyEnvsResponseTarget$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvResponseBodyEnvsResponseType> = z
    .nativeEnum(RemoveProjectEnvResponseBodyEnvsResponseType);

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvResponseBodyEnvsResponseType> =
    RemoveProjectEnvResponseBodyEnvsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsResponseType$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse14$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse14$outboundSchema:
  z.ZodType<
    RemoveProjectEnvContentHintEnvsResponse14$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvContentHintEnvsResponse14
  > = z.object({
    type:
      RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema,
    storeId: z.string(),
    integrationId: z.string(),
    integrationProductId: z.string(),
    integrationConfigurationId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse14$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse14$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse14$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse14$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse14$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse14$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse14$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse13$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse13$outboundSchema:
  z.ZodType<
    RemoveProjectEnvContentHintEnvsResponse13$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvContentHintEnvsResponse13
  > = z.object({
    type:
      RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse13$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse13$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse13$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse13$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse13$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse13$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse13$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse12$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse12$outboundSchema:
  z.ZodType<
    RemoveProjectEnvContentHintEnvsResponse12$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvContentHintEnvsResponse12
  > = z.object({
    type:
      RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse12$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse12$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse12$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse12$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse12$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse12$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse12$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse11$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse11$outboundSchema:
  z.ZodType<
    RemoveProjectEnvContentHintEnvsResponse11$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvContentHintEnvsResponse11
  > = z.object({
    type:
      RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse11$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse11$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse11$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse11$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse11$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse11$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse11$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse10$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse10$outboundSchema:
  z.ZodType<
    RemoveProjectEnvContentHintEnvsResponse10$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvContentHintEnvsResponse10
  > = z.object({
    type:
      RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema,
    storeId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse10$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse10$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse10$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse10$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse10$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse10$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse10$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse9$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse9$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse9$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse9
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse9$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse9$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse9$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse9$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse9$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse9$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse9$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse8$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse8$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse8$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse8
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse8$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse8$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse8$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse8$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse8$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse8$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse8$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse7$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse7$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse7$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse7
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse7$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse7$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse7$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse7$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse7$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse7$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse7$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse6$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse6$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse6$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse6
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse6$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse6$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse6$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse6$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse6$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse6$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse6$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse5$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse5$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse5$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse5
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse5$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse5$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse5$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse5$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse5$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse5$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse5$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse4$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse4$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse4$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse4
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse4$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse4$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse4$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse4$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse4$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse4$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse4$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse3$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse3$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse3$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse3
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse3$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse3$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse3$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse3$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse3$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse2$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse2$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse2$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse2
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse2$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse2$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse2$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse2$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse2$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse1$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvsResponse1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse1$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvsResponse1$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvsResponse1
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse1$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse1$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse1$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse1$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse1$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvsResponse1$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseContentHint$inboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsResponseContentHint,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse1$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse2$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse3$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse4$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse5$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse6$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse7$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse8$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse9$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse10$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse11$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse12$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse13$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse14$inboundSchema),
  ]);

/** @internal */
export type RemoveProjectEnvResponseBodyEnvsResponseContentHint$Outbound =
  | RemoveProjectEnvContentHintEnvsResponse1$Outbound
  | RemoveProjectEnvContentHintEnvsResponse2$Outbound
  | RemoveProjectEnvContentHintEnvsResponse3$Outbound
  | RemoveProjectEnvContentHintEnvsResponse4$Outbound
  | RemoveProjectEnvContentHintEnvsResponse5$Outbound
  | RemoveProjectEnvContentHintEnvsResponse6$Outbound
  | RemoveProjectEnvContentHintEnvsResponse7$Outbound
  | RemoveProjectEnvContentHintEnvsResponse8$Outbound
  | RemoveProjectEnvContentHintEnvsResponse9$Outbound
  | RemoveProjectEnvContentHintEnvsResponse10$Outbound
  | RemoveProjectEnvContentHintEnvsResponse11$Outbound
  | RemoveProjectEnvContentHintEnvsResponse12$Outbound
  | RemoveProjectEnvContentHintEnvsResponse13$Outbound
  | RemoveProjectEnvContentHintEnvsResponse14$Outbound;

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseContentHint$outboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsResponseContentHint$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvResponseBodyEnvsResponseContentHint
  > = z.union([
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse1$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse2$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse3$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse4$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse5$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse6$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse7$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse8$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse9$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse10$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse11$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse12$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse13$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvsResponse14$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsResponseContentHint$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseContentHint$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseContentHint$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseContentHint$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseContentHint$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseContentHint$Outbound` instead. */
  export type Outbound =
    RemoveProjectEnvResponseBodyEnvsResponseContentHint$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type
  > = z.nativeEnum(
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type,
  );

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type
  > =
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound =
  {
    type: string;
    encryptedValue: string;
  };

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint
  > = z.object({
    type:
      RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound` instead. */
  export type Outbound =
    RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBody3$inboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody3,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(RemoveProjectEnvTargetEnvsResponse1$inboundSchema),
    RemoveProjectEnvTargetEnvsResponse2$inboundSchema,
  ]).optional(),
  type: RemoveProjectEnvResponseBodyEnvsResponseType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse1$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse2$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse3$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse4$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse5$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse6$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse7$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse8$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse9$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse10$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse11$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse12$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse13$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/** @internal */
export type RemoveProjectEnvResponseBody3$Outbound = {
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | RemoveProjectEnvContentHintEnvsResponse1$Outbound
    | RemoveProjectEnvContentHintEnvsResponse2$Outbound
    | RemoveProjectEnvContentHintEnvsResponse3$Outbound
    | RemoveProjectEnvContentHintEnvsResponse4$Outbound
    | RemoveProjectEnvContentHintEnvsResponse5$Outbound
    | RemoveProjectEnvContentHintEnvsResponse6$Outbound
    | RemoveProjectEnvContentHintEnvsResponse7$Outbound
    | RemoveProjectEnvContentHintEnvsResponse8$Outbound
    | RemoveProjectEnvContentHintEnvsResponse9$Outbound
    | RemoveProjectEnvContentHintEnvsResponse10$Outbound
    | RemoveProjectEnvContentHintEnvsResponse11$Outbound
    | RemoveProjectEnvContentHintEnvsResponse12$Outbound
    | RemoveProjectEnvContentHintEnvsResponse13$Outbound
    | RemoveProjectEnvContentHintEnvsResponse14$Outbound
    | null
    | undefined;
  internalContentHint?:
    | RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound
    | null
    | undefined;
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

/** @internal */
export const RemoveProjectEnvResponseBody3$outboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody3$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvResponseBody3
> = z.object({
  target: z.union([
    z.array(RemoveProjectEnvTargetEnvsResponse1$outboundSchema),
    RemoveProjectEnvTargetEnvsResponse2$outboundSchema,
  ]).optional(),
  type: RemoveProjectEnvResponseBodyEnvsResponseType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse1$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse2$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse3$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse4$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse5$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse6$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse7$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse8$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse9$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse10$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse11$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse12$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse13$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvsResponse14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      RemoveProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBody3$ {
  /** @deprecated use `RemoveProjectEnvResponseBody3$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvResponseBody3$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody3$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvResponseBody3$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody3$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBody3$Outbound;
}

/** @internal */
export const RemoveProjectEnvTargetEnvs2$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTargetEnvs2
> = z.nativeEnum(RemoveProjectEnvTargetEnvs2);

/** @internal */
export const RemoveProjectEnvTargetEnvs2$outboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTargetEnvs2
> = RemoveProjectEnvTargetEnvs2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvTargetEnvs2$ {
  /** @deprecated use `RemoveProjectEnvTargetEnvs2$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvTargetEnvs2$inboundSchema;
  /** @deprecated use `RemoveProjectEnvTargetEnvs2$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvTargetEnvs2$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvTargetEnvs1$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTargetEnvs1
> = z.nativeEnum(RemoveProjectEnvTargetEnvs1);

/** @internal */
export const RemoveProjectEnvTargetEnvs1$outboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTargetEnvs1
> = RemoveProjectEnvTargetEnvs1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvTargetEnvs1$ {
  /** @deprecated use `RemoveProjectEnvTargetEnvs1$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvTargetEnvs1$inboundSchema;
  /** @deprecated use `RemoveProjectEnvTargetEnvs1$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvTargetEnvs1$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsTarget$inboundSchema: z.ZodType<
  RemoveProjectEnvResponseBodyEnvsTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(RemoveProjectEnvTargetEnvs1$inboundSchema),
  RemoveProjectEnvTargetEnvs2$inboundSchema,
]);

/** @internal */
export type RemoveProjectEnvResponseBodyEnvsTarget$Outbound =
  | Array<string>
  | string;

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsTarget$outboundSchema: z.ZodType<
  RemoveProjectEnvResponseBodyEnvsTarget$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvResponseBodyEnvsTarget
> = z.union([
  z.array(RemoveProjectEnvTargetEnvs1$outboundSchema),
  RemoveProjectEnvTargetEnvs2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsTarget$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsTarget$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsTarget$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsTarget$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsTarget$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsTarget$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBodyEnvsTarget$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsType$inboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvResponseBodyEnvsType> = z.nativeEnum(
    RemoveProjectEnvResponseBodyEnvsType,
  );

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsType$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvResponseBodyEnvsType> =
    RemoveProjectEnvResponseBodyEnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsType$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsType$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsType$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs14$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs14$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs14$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs14
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs14$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs14$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs14$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs14$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvs14$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs14$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs14$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs13$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs13$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs13$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs13
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs13$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs13$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs13$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs13$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvs13$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs13$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs13$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs12$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs12$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs12$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs12
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs12$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs12$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs12$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs12$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvs12$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs12$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs12$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs11$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs11$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs11$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs11
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs11$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs11$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs11$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs11$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvs11$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs11$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs11$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs10$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs10$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs10$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs10
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs10$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs10$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs10$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs10$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvs10$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs10$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs10$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs9$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs9$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs9$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs9
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs9$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs9$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs9$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs9$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs9$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs9$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs9$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs8$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs8$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs8$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs8
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs8$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs8$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs8$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs8$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs8$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs8$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs8$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs7$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs7$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs7$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs7
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs7$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs7$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs7$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs7$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs7$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs7$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs7$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs6$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs6$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs6$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs6
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs6$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs6$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs6$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs6$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs6$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs6$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs6$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs5$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs5$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs5$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs5
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs5$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs5$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs5$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs5$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs5$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs5$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs5$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs4$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs4$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs4$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs4
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs4$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs4$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs4$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs4$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs4$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs4$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs4$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs3$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs3$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs3$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs3
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs3$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs3$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs3$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs3$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs3$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs3$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs3$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs2$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs2$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs2$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs2
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs2$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs2$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs2$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs2$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs2$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs2$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs2$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvs1$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHintEnvs1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHintEnvs1$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHintEnvs1$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHintEnvs1
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvs1$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvs1$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintEnvs1$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs1$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintEnvs1$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvs1$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHintEnvs1$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsContentHint$inboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsContentHint,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => RemoveProjectEnvContentHintEnvs1$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs2$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs3$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs4$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs5$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs6$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs7$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs8$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs9$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs10$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs11$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs12$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs13$inboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs14$inboundSchema),
  ]);

/** @internal */
export type RemoveProjectEnvResponseBodyEnvsContentHint$Outbound =
  | RemoveProjectEnvContentHintEnvs1$Outbound
  | RemoveProjectEnvContentHintEnvs2$Outbound
  | RemoveProjectEnvContentHintEnvs3$Outbound
  | RemoveProjectEnvContentHintEnvs4$Outbound
  | RemoveProjectEnvContentHintEnvs5$Outbound
  | RemoveProjectEnvContentHintEnvs6$Outbound
  | RemoveProjectEnvContentHintEnvs7$Outbound
  | RemoveProjectEnvContentHintEnvs8$Outbound
  | RemoveProjectEnvContentHintEnvs9$Outbound
  | RemoveProjectEnvContentHintEnvs10$Outbound
  | RemoveProjectEnvContentHintEnvs11$Outbound
  | RemoveProjectEnvContentHintEnvs12$Outbound
  | RemoveProjectEnvContentHintEnvs13$Outbound
  | RemoveProjectEnvContentHintEnvs14$Outbound;

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsContentHint$outboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsContentHint$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvResponseBodyEnvsContentHint
  > = z.union([
    z.lazy(() => RemoveProjectEnvContentHintEnvs1$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs2$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs3$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs4$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs5$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs6$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs7$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs8$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs9$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs10$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs11$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs12$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs13$outboundSchema),
    z.lazy(() => RemoveProjectEnvContentHintEnvs14$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsContentHint$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsContentHint$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsContentHint$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsContentHint$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsContentHint$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsContentHint$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBodyEnvsContentHint$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvResponseBodyEnvsResponse200Type> = z
    .nativeEnum(RemoveProjectEnvResponseBodyEnvsResponse200Type);

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvResponseBodyEnvsResponse200Type> =
    RemoveProjectEnvResponseBodyEnvsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsResponse200Type$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponse200Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponse200Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: RemoveProjectEnvResponseBodyEnvsResponse200Type$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type RemoveProjectEnvResponseBodyEnvsInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyEnvsInternalContentHint$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvResponseBodyEnvsInternalContentHint
  > = z.object({
    type: RemoveProjectEnvResponseBodyEnvsResponse200Type$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsInternalContentHint$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsInternalContentHint$Outbound` instead. */
  export type Outbound =
    RemoveProjectEnvResponseBodyEnvsInternalContentHint$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBody2$inboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  system: z.boolean().optional(),
  target: z.union([
    z.array(RemoveProjectEnvTargetEnvs1$inboundSchema),
    RemoveProjectEnvTargetEnvs2$inboundSchema,
  ]).optional(),
  type: RemoveProjectEnvResponseBodyEnvsType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => RemoveProjectEnvContentHintEnvs1$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs2$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs3$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs4$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs5$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs6$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs7$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs8$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs9$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs10$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs11$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs12$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs13$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      RemoveProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/** @internal */
export type RemoveProjectEnvResponseBody2$Outbound = {
  system?: boolean | undefined;
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | RemoveProjectEnvContentHintEnvs1$Outbound
    | RemoveProjectEnvContentHintEnvs2$Outbound
    | RemoveProjectEnvContentHintEnvs3$Outbound
    | RemoveProjectEnvContentHintEnvs4$Outbound
    | RemoveProjectEnvContentHintEnvs5$Outbound
    | RemoveProjectEnvContentHintEnvs6$Outbound
    | RemoveProjectEnvContentHintEnvs7$Outbound
    | RemoveProjectEnvContentHintEnvs8$Outbound
    | RemoveProjectEnvContentHintEnvs9$Outbound
    | RemoveProjectEnvContentHintEnvs10$Outbound
    | RemoveProjectEnvContentHintEnvs11$Outbound
    | RemoveProjectEnvContentHintEnvs12$Outbound
    | RemoveProjectEnvContentHintEnvs13$Outbound
    | RemoveProjectEnvContentHintEnvs14$Outbound
    | null
    | undefined;
  internalContentHint?:
    | RemoveProjectEnvResponseBodyEnvsInternalContentHint$Outbound
    | null
    | undefined;
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

/** @internal */
export const RemoveProjectEnvResponseBody2$outboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody2$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvResponseBody2
> = z.object({
  system: z.boolean().optional(),
  target: z.union([
    z.array(RemoveProjectEnvTargetEnvs1$outboundSchema),
    RemoveProjectEnvTargetEnvs2$outboundSchema,
  ]).optional(),
  type: RemoveProjectEnvResponseBodyEnvsType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => RemoveProjectEnvContentHintEnvs1$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs2$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs3$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs4$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs5$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs6$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs7$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs8$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs9$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs10$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs11$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs12$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs13$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHintEnvs14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      RemoveProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBody2$ {
  /** @deprecated use `RemoveProjectEnvResponseBody2$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvResponseBody2$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody2$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvResponseBody2$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody2$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBody2$Outbound;
}

/** @internal */
export const RemoveProjectEnvTarget2$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTarget2
> = z.nativeEnum(RemoveProjectEnvTarget2);

/** @internal */
export const RemoveProjectEnvTarget2$outboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTarget2
> = RemoveProjectEnvTarget2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvTarget2$ {
  /** @deprecated use `RemoveProjectEnvTarget2$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvTarget2$inboundSchema;
  /** @deprecated use `RemoveProjectEnvTarget2$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvTarget2$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvTarget1$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTarget1
> = z.nativeEnum(RemoveProjectEnvTarget1);

/** @internal */
export const RemoveProjectEnvTarget1$outboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvTarget1
> = RemoveProjectEnvTarget1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvTarget1$ {
  /** @deprecated use `RemoveProjectEnvTarget1$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvTarget1$inboundSchema;
  /** @deprecated use `RemoveProjectEnvTarget1$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvTarget1$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvResponseBodyTarget$inboundSchema: z.ZodType<
  RemoveProjectEnvResponseBodyTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(RemoveProjectEnvTarget1$inboundSchema),
  RemoveProjectEnvTarget2$inboundSchema,
]);

/** @internal */
export type RemoveProjectEnvResponseBodyTarget$Outbound =
  | Array<string>
  | string;

/** @internal */
export const RemoveProjectEnvResponseBodyTarget$outboundSchema: z.ZodType<
  RemoveProjectEnvResponseBodyTarget$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvResponseBodyTarget
> = z.union([
  z.array(RemoveProjectEnvTarget1$outboundSchema),
  RemoveProjectEnvTarget2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyTarget$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyTarget$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvResponseBodyTarget$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyTarget$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyTarget$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyTarget$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBodyTarget$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyType$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvResponseBodyType
> = z.nativeEnum(RemoveProjectEnvResponseBodyType);

/** @internal */
export const RemoveProjectEnvResponseBodyType$outboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvResponseBodyType
> = RemoveProjectEnvResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyType$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyType$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvResponseBodyType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyType$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvResponseBodyType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint14$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint14$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint14$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint14
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint14$ {
  /** @deprecated use `RemoveProjectEnvContentHint14$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint14$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint14$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint14$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint14$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint14$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint13$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint13$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint13$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint13
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint13$ {
  /** @deprecated use `RemoveProjectEnvContentHint13$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint13$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint13$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint13$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint13$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint13$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint12$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint12$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint12$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint12
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint12$ {
  /** @deprecated use `RemoveProjectEnvContentHint12$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint12$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint12$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint12$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint12$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint12$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint11$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint11$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint11$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint11
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint11$ {
  /** @deprecated use `RemoveProjectEnvContentHint11$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint11$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint11$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint11$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint11$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint11$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint10$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint10$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint10$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint10
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint10$ {
  /** @deprecated use `RemoveProjectEnvContentHint10$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint10$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint10$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint10$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint10$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint10$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint9$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint9$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint9$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint9
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint9$ {
  /** @deprecated use `RemoveProjectEnvContentHint9$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint9$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint9$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint9$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint9$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint9$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint8$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint8$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint8$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint8
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint8$ {
  /** @deprecated use `RemoveProjectEnvContentHint8$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint8$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint8$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint8$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint8$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint8$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint7$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint7$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint7$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint7
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint7$ {
  /** @deprecated use `RemoveProjectEnvContentHint7$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint7$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint7$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint7$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint7$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint7$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint6$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint6$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint6$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint6
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint6$ {
  /** @deprecated use `RemoveProjectEnvContentHint6$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint6$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint6$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint6$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint6$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint6$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType,
  );

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType
  > =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint5$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint5$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint5$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint5
> = z.object({
  type:
    RemoveProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint5$ {
  /** @deprecated use `RemoveProjectEnvContentHint5$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint5$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint5$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint5$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint5$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint5$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvContentHintEnvsResponse200Type> = z
    .nativeEnum(RemoveProjectEnvContentHintEnvsResponse200Type);

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvContentHintEnvsResponse200Type> =
    RemoveProjectEnvContentHintEnvsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponse200Type$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200Type$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponse200Type$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint4$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RemoveProjectEnvContentHintEnvsResponse200Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint4$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint4$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint4
> = z.object({
  type: RemoveProjectEnvContentHintEnvsResponse200Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint4$ {
  /** @deprecated use `RemoveProjectEnvContentHint4$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint4$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint4$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint4$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint4$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint4$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvContentHintEnvsResponseType> = z
    .nativeEnum(RemoveProjectEnvContentHintEnvsResponseType);

/** @internal */
export const RemoveProjectEnvContentHintEnvsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvContentHintEnvsResponseType> =
    RemoveProjectEnvContentHintEnvsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsResponseType$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsResponseType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsResponseType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint3$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RemoveProjectEnvContentHintEnvsResponseType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint3$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint3$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint3
> = z.object({
  type: RemoveProjectEnvContentHintEnvsResponseType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint3$ {
  /** @deprecated use `RemoveProjectEnvContentHint3$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint3$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint3$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint3$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint3$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint3$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintEnvsType$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvContentHintEnvsType
> = z.nativeEnum(RemoveProjectEnvContentHintEnvsType);

/** @internal */
export const RemoveProjectEnvContentHintEnvsType$outboundSchema:
  z.ZodNativeEnum<typeof RemoveProjectEnvContentHintEnvsType> =
    RemoveProjectEnvContentHintEnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintEnvsType$ {
  /** @deprecated use `RemoveProjectEnvContentHintEnvsType$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvContentHintEnvsType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintEnvsType$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvContentHintEnvsType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint2$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RemoveProjectEnvContentHintEnvsType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint2$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint2$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint2
> = z.object({
  type: RemoveProjectEnvContentHintEnvsType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint2$ {
  /** @deprecated use `RemoveProjectEnvContentHint2$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint2$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint2$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint2$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint2$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint2$Outbound;
}

/** @internal */
export const RemoveProjectEnvContentHintType$inboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvContentHintType
> = z.nativeEnum(RemoveProjectEnvContentHintType);

/** @internal */
export const RemoveProjectEnvContentHintType$outboundSchema: z.ZodNativeEnum<
  typeof RemoveProjectEnvContentHintType
> = RemoveProjectEnvContentHintType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHintType$ {
  /** @deprecated use `RemoveProjectEnvContentHintType$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHintType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHintType$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHintType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvContentHint1$inboundSchema: z.ZodType<
  RemoveProjectEnvContentHint1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RemoveProjectEnvContentHintType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type RemoveProjectEnvContentHint1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const RemoveProjectEnvContentHint1$outboundSchema: z.ZodType<
  RemoveProjectEnvContentHint1$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvContentHint1
> = z.object({
  type: RemoveProjectEnvContentHintType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvContentHint1$ {
  /** @deprecated use `RemoveProjectEnvContentHint1$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvContentHint1$inboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint1$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvContentHint1$outboundSchema;
  /** @deprecated use `RemoveProjectEnvContentHint1$Outbound` instead. */
  export type Outbound = RemoveProjectEnvContentHint1$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyContentHint$inboundSchema: z.ZodType<
  RemoveProjectEnvResponseBodyContentHint,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => RemoveProjectEnvContentHint1$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint2$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint3$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint4$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint5$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint6$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint7$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint8$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint9$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint10$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint11$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint12$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint13$inboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint14$inboundSchema),
]);

/** @internal */
export type RemoveProjectEnvResponseBodyContentHint$Outbound =
  | RemoveProjectEnvContentHint1$Outbound
  | RemoveProjectEnvContentHint2$Outbound
  | RemoveProjectEnvContentHint3$Outbound
  | RemoveProjectEnvContentHint4$Outbound
  | RemoveProjectEnvContentHint5$Outbound
  | RemoveProjectEnvContentHint6$Outbound
  | RemoveProjectEnvContentHint7$Outbound
  | RemoveProjectEnvContentHint8$Outbound
  | RemoveProjectEnvContentHint9$Outbound
  | RemoveProjectEnvContentHint10$Outbound
  | RemoveProjectEnvContentHint11$Outbound
  | RemoveProjectEnvContentHint12$Outbound
  | RemoveProjectEnvContentHint13$Outbound
  | RemoveProjectEnvContentHint14$Outbound;

/** @internal */
export const RemoveProjectEnvResponseBodyContentHint$outboundSchema: z.ZodType<
  RemoveProjectEnvResponseBodyContentHint$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvResponseBodyContentHint
> = z.union([
  z.lazy(() => RemoveProjectEnvContentHint1$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint2$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint3$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint4$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint5$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint6$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint7$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint8$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint9$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint10$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint11$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint12$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint13$outboundSchema),
  z.lazy(() => RemoveProjectEnvContentHint14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyContentHint$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyContentHint$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyContentHint$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyContentHint$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyContentHint$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyContentHint$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBodyContentHint$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType
  > = z.nativeEnum(
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType,
  );

/** @internal */
export const RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType
  > =
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type RemoveProjectEnvResponseBodyInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema:
  z.ZodType<
    RemoveProjectEnvResponseBodyInternalContentHint$Outbound,
    z.ZodTypeDef,
    RemoveProjectEnvResponseBodyInternalContentHint
  > = z.object({
    type:
      RemoveProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBodyInternalContentHint$ {
  /** @deprecated use `RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBodyInternalContentHint$Outbound` instead. */
  export type Outbound =
    RemoveProjectEnvResponseBodyInternalContentHint$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBody1$inboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody1,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(RemoveProjectEnvTarget1$inboundSchema),
    RemoveProjectEnvTarget2$inboundSchema,
  ]).optional(),
  type: RemoveProjectEnvResponseBodyType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => RemoveProjectEnvContentHint1$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint2$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint3$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint4$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint5$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint6$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint7$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint8$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint9$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint10$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint11$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint12$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint13$inboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => RemoveProjectEnvResponseBodyInternalContentHint$inboundSchema),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/** @internal */
export type RemoveProjectEnvResponseBody1$Outbound = {
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | RemoveProjectEnvContentHint1$Outbound
    | RemoveProjectEnvContentHint2$Outbound
    | RemoveProjectEnvContentHint3$Outbound
    | RemoveProjectEnvContentHint4$Outbound
    | RemoveProjectEnvContentHint5$Outbound
    | RemoveProjectEnvContentHint6$Outbound
    | RemoveProjectEnvContentHint7$Outbound
    | RemoveProjectEnvContentHint8$Outbound
    | RemoveProjectEnvContentHint9$Outbound
    | RemoveProjectEnvContentHint10$Outbound
    | RemoveProjectEnvContentHint11$Outbound
    | RemoveProjectEnvContentHint12$Outbound
    | RemoveProjectEnvContentHint13$Outbound
    | RemoveProjectEnvContentHint14$Outbound
    | null
    | undefined;
  internalContentHint?:
    | RemoveProjectEnvResponseBodyInternalContentHint$Outbound
    | null
    | undefined;
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

/** @internal */
export const RemoveProjectEnvResponseBody1$outboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody1$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvResponseBody1
> = z.object({
  target: z.union([
    z.array(RemoveProjectEnvTarget1$outboundSchema),
    RemoveProjectEnvTarget2$outboundSchema,
  ]).optional(),
  type: RemoveProjectEnvResponseBodyType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => RemoveProjectEnvContentHint1$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint2$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint3$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint4$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint5$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint6$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint7$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint8$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint9$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint10$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint11$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint12$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint13$outboundSchema),
      z.lazy(() => RemoveProjectEnvContentHint14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      RemoveProjectEnvResponseBodyInternalContentHint$outboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBody1$ {
  /** @deprecated use `RemoveProjectEnvResponseBody1$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvResponseBody1$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody1$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvResponseBody1$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody1$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBody1$Outbound;
}

/** @internal */
export const RemoveProjectEnvResponseBody$inboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => RemoveProjectEnvResponseBody3$inboundSchema),
  z.lazy(() => RemoveProjectEnvResponseBody2$inboundSchema),
  z.array(z.lazy(() => RemoveProjectEnvResponseBody1$inboundSchema)),
]);

/** @internal */
export type RemoveProjectEnvResponseBody$Outbound =
  | RemoveProjectEnvResponseBody3$Outbound
  | RemoveProjectEnvResponseBody2$Outbound
  | Array<RemoveProjectEnvResponseBody1$Outbound>;

/** @internal */
export const RemoveProjectEnvResponseBody$outboundSchema: z.ZodType<
  RemoveProjectEnvResponseBody$Outbound,
  z.ZodTypeDef,
  RemoveProjectEnvResponseBody
> = z.union([
  z.lazy(() => RemoveProjectEnvResponseBody3$outboundSchema),
  z.lazy(() => RemoveProjectEnvResponseBody2$outboundSchema),
  z.array(z.lazy(() => RemoveProjectEnvResponseBody1$outboundSchema)),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveProjectEnvResponseBody$ {
  /** @deprecated use `RemoveProjectEnvResponseBody$inboundSchema` instead. */
  export const inboundSchema = RemoveProjectEnvResponseBody$inboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody$outboundSchema` instead. */
  export const outboundSchema = RemoveProjectEnvResponseBody$outboundSchema;
  /** @deprecated use `RemoveProjectEnvResponseBody$Outbound` instead. */
  export type Outbound = RemoveProjectEnvResponseBody$Outbound;
}
