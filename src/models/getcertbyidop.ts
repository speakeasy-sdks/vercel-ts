/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetCertByIdRequest = {
    /**
     * The cert id
     */
    id: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};

export type GetCertByIdResponseBody = {
    id: string;
    createdAt: number;
    expiresAt: number;
    autoRenew: boolean;
    cns: Array<string>;
};

/** @internal */
export namespace GetCertByIdRequest$ {
    export const inboundSchema: z.ZodType<GetCertByIdRequest, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
    });

    export type Outbound = {
        id: string;
        teamId?: string | undefined;
        slug?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCertByIdRequest> = z.object({
        id: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
    });
}

/** @internal */
export namespace GetCertByIdResponseBody$ {
    export const inboundSchema: z.ZodType<GetCertByIdResponseBody, z.ZodTypeDef, unknown> =
        z.object({
            id: z.string(),
            createdAt: z.number(),
            expiresAt: z.number(),
            autoRenew: z.boolean(),
            cns: z.array(z.string()),
        });

    export type Outbound = {
        id: string;
        createdAt: number;
        expiresAt: number;
        autoRenew: boolean;
        cns: Array<string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCertByIdResponseBody> =
        z.object({
            id: z.string(),
            createdAt: z.number(),
            expiresAt: z.number(),
            autoRenew: z.boolean(),
            cns: z.array(z.string()),
        });
}
