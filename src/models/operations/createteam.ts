/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type Utm = {
    /**
     * UTM source
     */
    utmSource?: string | undefined;
    /**
     * UTM medium
     */
    utmMedium?: string | undefined;
    /**
     * UTM campaign
     */
    utmCampaign?: string | undefined;
    /**
     * UTM term
     */
    utmTerm?: string | undefined;
};

/**
 * Attribution information for the session or current page
 */
export type Attribution = {
    /**
     * Session referrer
     */
    sessionReferrer?: string | undefined;
    /**
     * Session landing page
     */
    landingPage?: string | undefined;
    /**
     * Referrer to the signup page
     */
    pageBeforeConversionPage?: string | undefined;
    utm?: Utm | undefined;
};

export type CreateTeamRequestBody = {
    /**
     * The desired slug for the Team
     */
    slug: string;
    /**
     * The desired name for the Team. It will be generated from the provided slug if nothing is provided
     */
    name?: string | undefined;
    /**
     * Attribution information for the session or current page
     */
    attribution?: Attribution | undefined;
};

export enum Currency {
    Usd = "usd",
    Eur = "eur",
}

export type Period = {
    start: number;
    end: number;
};

export type Contract = {
    start: number;
    end: number;
};

export enum CreateTeamPlan {
    Pro = "pro",
    Enterprise = "enterprise",
    Hobby = "hobby",
}

export enum Platform {
    Stripe = "stripe",
    StripeTestMode = "stripeTestMode",
}

export enum ProgramType {
    Startup = "startup",
    Agency = "agency",
}

export type Trial = {
    start: number;
    end: number;
};

export type Tax = {
    type: string;
    id: string;
};

export type Address = {
    line1?: string | undefined;
    line2?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    state?: string | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Pro = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency
        | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamInterval {
    Month = "month",
}

export type CreateTeamFrequency = {
    interval: CreateTeamInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Enterprise = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsInterval {
    Month = "month",
}

export type CreateTeamTeamsFrequency = {
    interval: CreateTeamTeamsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamAnalytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponseInterval {
    Month = "month",
}

export type CreateTeamTeamsResponseFrequency = {
    interval: CreateTeamTeamsResponseInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type ConcurrentBuilds = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponseFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200Interval {
    Month = "month",
}

export type CreateTeamTeamsResponse200Frequency = {
    interval: CreateTeamTeamsResponse200Interval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type Monitoring = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200Frequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamPasswordProtection = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200ApplicationJSONFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type PreviewDeploymentSuffix = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamSaml = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type TeamSeats = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency
        | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency =
    {
        interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval;
        intervalCount: number;
    };

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamWebAnalytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency
        | undefined;
    maxQuantity?: number | undefined;
};

export type Matrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type AnalyticsUsage = {
    matrix?: Matrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type Artifacts = {
    matrix?: CreateTeamMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type Bandwidth = {
    matrix?: CreateTeamTeamsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponseMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type BlobStores = {
    matrix?: CreateTeamTeamsResponseMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200Matrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type BlobTotalAdvancedRequests = {
    matrix?: CreateTeamTeamsResponse200Matrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type BlobTotalAvgSizeInBytes = {
    matrix?: CreateTeamTeamsResponse200ApplicationJSONMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type BlobTotalGetResponseObjectSizeInBytes = {
    matrix?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type BlobTotalSimpleRequests = {
    matrix?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type BuildMinute = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type DataCacheRead = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type DataCacheRevalidation = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type DataCacheWrite = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type EdgeConfigRead = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type EdgeConfigWrite = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type EdgeFunctionExecutionUnits = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type EdgeMiddlewareInvocations = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type EdgeRequest = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type EdgeRequestAdditionalCpuDuration = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type FastDataTransfer = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type FastOriginTransfer = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type FunctionDuration = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type FunctionInvocation = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type LogDrainsVolume = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type MonitoringMetric = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type PostgresComputeTime = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type PostgresDataStorage = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type PostgresDataTransfer = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type PostgresDatabase = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type PostgresWrittenData = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type ServerlessFunctionExecution = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type SourceImages = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type StorageRedisTotalBandwidthInBytes = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type StorageRedisTotalCommands = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type StorageRedisTotalDailyAvgStorageInBytes = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type StorageRedisTotalDatabases = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type WafOwaspExcessBytes = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type WafOwaspRequests = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type WebAnalyticsEvent = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type InvoiceItems = {
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    pro?: Pro | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    enterprise?: Enterprise | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    analytics?: CreateTeamAnalytics | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    concurrentBuilds?: ConcurrentBuilds | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    monitoring?: Monitoring | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    passwordProtection?: CreateTeamPasswordProtection | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    previewDeploymentSuffix?: PreviewDeploymentSuffix | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    saml?: CreateTeamSaml | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    teamSeats?: TeamSeats | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    webAnalytics?: CreateTeamWebAnalytics | undefined;
    analyticsUsage?: AnalyticsUsage | undefined;
    artifacts?: Artifacts | undefined;
    bandwidth?: Bandwidth | undefined;
    blobStores?: BlobStores | undefined;
    blobTotalAdvancedRequests?: BlobTotalAdvancedRequests | undefined;
    blobTotalAvgSizeInBytes?: BlobTotalAvgSizeInBytes | undefined;
    blobTotalGetResponseObjectSizeInBytes?: BlobTotalGetResponseObjectSizeInBytes | undefined;
    blobTotalSimpleRequests?: BlobTotalSimpleRequests | undefined;
    buildMinute?: BuildMinute | undefined;
    dataCacheRead?: DataCacheRead | undefined;
    dataCacheRevalidation?: DataCacheRevalidation | undefined;
    dataCacheWrite?: DataCacheWrite | undefined;
    edgeConfigRead?: EdgeConfigRead | undefined;
    edgeConfigWrite?: EdgeConfigWrite | undefined;
    edgeFunctionExecutionUnits?: EdgeFunctionExecutionUnits | undefined;
    edgeMiddlewareInvocations?: EdgeMiddlewareInvocations | undefined;
    edgeRequest?: EdgeRequest | undefined;
    edgeRequestAdditionalCpuDuration?: EdgeRequestAdditionalCpuDuration | undefined;
    fastDataTransfer?: FastDataTransfer | undefined;
    fastOriginTransfer?: FastOriginTransfer | undefined;
    functionDuration?: FunctionDuration | undefined;
    functionInvocation?: FunctionInvocation | undefined;
    logDrainsVolume?: LogDrainsVolume | undefined;
    monitoringMetric?: MonitoringMetric | undefined;
    postgresComputeTime?: PostgresComputeTime | undefined;
    postgresDataStorage?: PostgresDataStorage | undefined;
    postgresDataTransfer?: PostgresDataTransfer | undefined;
    postgresDatabase?: PostgresDatabase | undefined;
    postgresWrittenData?: PostgresWrittenData | undefined;
    serverlessFunctionExecution?: ServerlessFunctionExecution | undefined;
    sourceImages?: SourceImages | undefined;
    storageRedisTotalBandwidthInBytes?: StorageRedisTotalBandwidthInBytes | undefined;
    storageRedisTotalCommands?: StorageRedisTotalCommands | undefined;
    storageRedisTotalDailyAvgStorageInBytes?: StorageRedisTotalDailyAvgStorageInBytes | undefined;
    storageRedisTotalDatabases?: StorageRedisTotalDatabases | undefined;
    wafOwaspExcessBytes?: WafOwaspExcessBytes | undefined;
    wafOwaspRequests?: WafOwaspRequests | undefined;
    webAnalyticsEvent?: WebAnalyticsEvent | undefined;
};

export type InvoiceSettings = {
    footer?: string | undefined;
};

export type CreateTeamTrial = {
    start: number;
    end: number;
};

export type CreateTeamPeriod = {
    start: number;
    end: number;
};

export enum Interval {
    Month = "month",
    Day = "day",
    Week = "week",
    Year = "year",
}

export type Frequency = {
    interval: Interval;
    intervalCount: number;
};

export enum Duration {
    Forever = "forever",
    Repeating = "repeating",
    Once = "once",
}

export type Coupon = {
    id: string;
    name: string | null;
    amountOff: number | null;
    percentageOff: number | null;
    durationInMonths: number | null;
    duration: Duration;
};

export type Discount = {
    id: string;
    coupon: Coupon;
};

export type Items = {
    id: string;
    priceId: string;
    productId: string;
    amount: number;
    quantity: number;
};

export type Subscriptions = {
    id: string;
    trial: CreateTeamTrial | null;
    period: CreateTeamPeriod;
    frequency: Frequency;
    discount: Discount | null;
    items: Array<Items>;
};

export type Controls = {
    analyticsSampleRateInPercent?: number | null | undefined;
    analyticsSpendLimitInDollars?: number | null | undefined;
};

export enum CreateTeamStatus {
    Active = "active",
    Trialing = "trialing",
    Overdue = "overdue",
    Expired = "expired",
    Canceled = "canceled",
}

export enum PricingExperiment {
    August2022 = "august-2022",
}

export type Billing = {
    currency?: Currency | undefined;
    cancelation?: number | null | undefined;
    period: Period | null;
    contract?: Contract | null | undefined;
    plan: CreateTeamPlan;
    planIteration?: string | undefined;
    platform?: Platform | undefined;
    orbCustomerId?: string | undefined;
    syncedAt?: number | undefined;
    programType?: ProgramType | undefined;
    trial?: Trial | null | undefined;
    email?: string | null | undefined;
    tax?: Tax | null | undefined;
    language?: string | null | undefined;
    address?: Address | null | undefined;
    name?: string | null | undefined;
    invoiceItems?: InvoiceItems | null | undefined;
    invoiceSettings?: InvoiceSettings | undefined;
    subscriptions?: Array<Subscriptions> | null | undefined;
    controls?: Controls | null | undefined;
    purchaseOrder?: string | null | undefined;
    status?: CreateTeamStatus | undefined;
    pricingExperiment?: PricingExperiment | undefined;
    orbMigrationScheduledAt?: number | null | undefined;
};

/**
 * The team was created successfully
 */
export type CreateTeamResponseBody = {
    /**
     * Id of the created team
     */
    id: string;
    slug: string;
    billing: Billing;
};

export type CreateTeamResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * The team was created successfully
     */
    object?: CreateTeamResponseBody | undefined;
};

/** @internal */
export namespace Utm$ {
    export const inboundSchema: z.ZodType<Utm, z.ZodTypeDef, unknown> = z
        .object({
            utmSource: z.string().optional(),
            utmMedium: z.string().optional(),
            utmCampaign: z.string().optional(),
            utmTerm: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.utmSource === undefined ? null : { utmSource: v.utmSource }),
                ...(v.utmMedium === undefined ? null : { utmMedium: v.utmMedium }),
                ...(v.utmCampaign === undefined ? null : { utmCampaign: v.utmCampaign }),
                ...(v.utmTerm === undefined ? null : { utmTerm: v.utmTerm }),
            };
        });

    export type Outbound = {
        utmSource?: string | undefined;
        utmMedium?: string | undefined;
        utmCampaign?: string | undefined;
        utmTerm?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Utm> = z
        .object({
            utmSource: z.string().optional(),
            utmMedium: z.string().optional(),
            utmCampaign: z.string().optional(),
            utmTerm: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.utmSource === undefined ? null : { utmSource: v.utmSource }),
                ...(v.utmMedium === undefined ? null : { utmMedium: v.utmMedium }),
                ...(v.utmCampaign === undefined ? null : { utmCampaign: v.utmCampaign }),
                ...(v.utmTerm === undefined ? null : { utmTerm: v.utmTerm }),
            };
        });
}

/** @internal */
export namespace Attribution$ {
    export const inboundSchema: z.ZodType<Attribution, z.ZodTypeDef, unknown> = z
        .object({
            sessionReferrer: z.string().optional(),
            landingPage: z.string().optional(),
            pageBeforeConversionPage: z.string().optional(),
            utm: z.lazy(() => Utm$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sessionReferrer === undefined
                    ? null
                    : { sessionReferrer: v.sessionReferrer }),
                ...(v.landingPage === undefined ? null : { landingPage: v.landingPage }),
                ...(v.pageBeforeConversionPage === undefined
                    ? null
                    : { pageBeforeConversionPage: v.pageBeforeConversionPage }),
                ...(v.utm === undefined ? null : { utm: v.utm }),
            };
        });

    export type Outbound = {
        sessionReferrer?: string | undefined;
        landingPage?: string | undefined;
        pageBeforeConversionPage?: string | undefined;
        utm?: Utm$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Attribution> = z
        .object({
            sessionReferrer: z.string().optional(),
            landingPage: z.string().optional(),
            pageBeforeConversionPage: z.string().optional(),
            utm: z.lazy(() => Utm$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sessionReferrer === undefined
                    ? null
                    : { sessionReferrer: v.sessionReferrer }),
                ...(v.landingPage === undefined ? null : { landingPage: v.landingPage }),
                ...(v.pageBeforeConversionPage === undefined
                    ? null
                    : { pageBeforeConversionPage: v.pageBeforeConversionPage }),
                ...(v.utm === undefined ? null : { utm: v.utm }),
            };
        });
}

/** @internal */
export namespace CreateTeamRequestBody$ {
    export const inboundSchema: z.ZodType<CreateTeamRequestBody, z.ZodTypeDef, unknown> = z
        .object({
            slug: z.string(),
            name: z.string().optional(),
            attribution: z.lazy(() => Attribution$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                slug: v.slug,
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.attribution === undefined ? null : { attribution: v.attribution }),
            };
        });

    export type Outbound = {
        slug: string;
        name?: string | undefined;
        attribution?: Attribution$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamRequestBody> = z
        .object({
            slug: z.string(),
            name: z.string().optional(),
            attribution: z.lazy(() => Attribution$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                slug: v.slug,
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.attribution === undefined ? null : { attribution: v.attribution }),
            };
        });
}

/** @internal */
export namespace Currency$ {
    export const inboundSchema = z.nativeEnum(Currency);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Period$ {
    export const inboundSchema: z.ZodType<Period, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Period> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace Contract$ {
    export const inboundSchema: z.ZodType<Contract, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Contract> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace CreateTeamPlan$ {
    export const inboundSchema = z.nativeEnum(CreateTeamPlan);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Platform$ {
    export const inboundSchema = z.nativeEnum(Platform);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace ProgramType$ {
    export const inboundSchema = z.nativeEnum(ProgramType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Trial$ {
    export const inboundSchema: z.ZodType<Trial, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Trial> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace Tax$ {
    export const inboundSchema: z.ZodType<Tax, z.ZodTypeDef, unknown> = z
        .object({
            type: z.string(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                id: v.id,
            };
        });

    export type Outbound = {
        type: string;
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Tax> = z
        .object({
            type: z.string(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                id: v.id,
            };
        });
}

/** @internal */
export namespace Address$ {
    export const inboundSchema: z.ZodType<Address, z.ZodTypeDef, unknown> = z
        .object({
            line1: z.string().optional(),
            line2: z.string().optional(),
            postalCode: z.string().optional(),
            city: z.string().optional(),
            country: z.string().optional(),
            state: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.line1 === undefined ? null : { line1: v.line1 }),
                ...(v.line2 === undefined ? null : { line2: v.line2 }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.state === undefined ? null : { state: v.state }),
            };
        });

    export type Outbound = {
        line1?: string | undefined;
        line2?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        country?: string | undefined;
        state?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Address> = z
        .object({
            line1: z.string().optional(),
            line2: z.string().optional(),
            postalCode: z.string().optional(),
            city: z.string().optional(),
            country: z.string().optional(),
            state: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.line1 === undefined ? null : { line1: v.line1 }),
                ...(v.line2 === undefined ? null : { line2: v.line2 }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.state === undefined ? null : { state: v.state }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace Pro$ {
    export const inboundSchema: z.ZodType<Pro, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Pro> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamFrequency$ {
    export const inboundSchema: z.ZodType<CreateTeamFrequency, z.ZodTypeDef, unknown> = z
        .object({
            interval: CreateTeamInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamFrequency> = z
        .object({
            interval: CreateTeamInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace Enterprise$ {
    export const inboundSchema: z.ZodType<Enterprise, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamFrequency$.inboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Enterprise> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamFrequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsFrequency$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsFrequency, z.ZodTypeDef, unknown> = z
        .object({
            interval: CreateTeamTeamsInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsFrequency> = z
        .object({
            interval: CreateTeamTeamsInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamAnalytics$ {
    export const inboundSchema: z.ZodType<CreateTeamAnalytics, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsFrequency$.inboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamAnalytics> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsFrequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponseInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsResponseInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponseFrequency$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsResponseFrequency, z.ZodTypeDef, unknown> =
        z
            .object({
                interval: CreateTeamTeamsResponseInterval$.inboundSchema,
                intervalCount: z.number(),
            })
            .transform((v) => {
                return {
                    interval: v.interval,
                    intervalCount: v.intervalCount,
                };
            });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponseFrequency
    > = z
        .object({
            interval: CreateTeamTeamsResponseInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace ConcurrentBuilds$ {
    export const inboundSchema: z.ZodType<ConcurrentBuilds, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponseFrequency$.inboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsResponseFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ConcurrentBuilds> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponseFrequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200Interval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsResponse200Interval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200Frequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200Frequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval: CreateTeamTeamsResponse200Interval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200Frequency
    > = z
        .object({
            interval: CreateTeamTeamsResponse200Interval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace Monitoring$ {
    export const inboundSchema: z.ZodType<Monitoring, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponse200Frequency$.inboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsResponse200Frequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Monitoring> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponse200Frequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsResponse200ApplicationJSONInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONFrequency
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamPasswordProtection$ {
    export const inboundSchema: z.ZodType<CreateTeamPasswordProtection, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONFrequency$.inboundSchema)
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsResponse200ApplicationJSONFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPasswordProtection> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONFrequency$.outboundSchema)
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace PreviewDeploymentSuffix$ {
    export const inboundSchema: z.ZodType<PreviewDeploymentSuffix, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PreviewDeploymentSuffix> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamSaml$ {
    export const inboundSchema: z.ZodType<CreateTeamSaml, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamSaml> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace TeamSeats$ {
    export const inboundSchema: z.ZodType<TeamSeats, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TeamSeats> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamWebAnalytics$ {
    export const inboundSchema: z.ZodType<CreateTeamWebAnalytics, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamWebAnalytics> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace Matrix$ {
    export const inboundSchema: z.ZodType<Matrix, z.ZodTypeDef, unknown> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Matrix> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace AnalyticsUsage$ {
    export const inboundSchema: z.ZodType<AnalyticsUsage, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => Matrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: Matrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AnalyticsUsage> = z
        .object({
            matrix: z.lazy(() => Matrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamMatrix$ {
    export const inboundSchema: z.ZodType<CreateTeamMatrix, z.ZodTypeDef, unknown> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamMatrix> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace Artifacts$ {
    export const inboundSchema: z.ZodType<Artifacts, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => CreateTeamMatrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Artifacts> = z
        .object({
            matrix: z.lazy(() => CreateTeamMatrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsMatrix$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsMatrix, z.ZodTypeDef, unknown> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsMatrix> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace Bandwidth$ {
    export const inboundSchema: z.ZodType<Bandwidth, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsMatrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Bandwidth> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsMatrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponseMatrix$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsResponseMatrix, z.ZodTypeDef, unknown> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsResponseMatrix> =
        z
            .object({
                defaultUnitPrice: z.string(),
                dimensionPrices: z.record(z.string()),
            })
            .transform((v) => {
                return {
                    defaultUnitPrice: v.defaultUnitPrice,
                    dimensionPrices: v.dimensionPrices,
                };
            });
}

/** @internal */
export namespace BlobStores$ {
    export const inboundSchema: z.ZodType<BlobStores, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponseMatrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponseMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobStores> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponseMatrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200Matrix$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsResponse200Matrix, z.ZodTypeDef, unknown> =
        z
            .object({
                defaultUnitPrice: z.string(),
                dimensionPrices: z.record(z.string()),
            })
            .transform((v) => {
                return {
                    defaultUnitPrice: v.defaultUnitPrice,
                    dimensionPrices: v.dimensionPrices,
                };
            });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200Matrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace BlobTotalAdvancedRequests$ {
    export const inboundSchema: z.ZodType<BlobTotalAdvancedRequests, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponse200Matrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponse200Matrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobTotalAdvancedRequests> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponse200Matrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace BlobTotalAvgSizeInBytes$ {
    export const inboundSchema: z.ZodType<BlobTotalAvgSizeInBytes, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONMatrix$.inboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponse200ApplicationJSONMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobTotalAvgSizeInBytes> = z
        .object({
            matrix: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONMatrix$.outboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace BlobTotalGetResponseObjectSizeInBytes$ {
    export const inboundSchema: z.ZodType<
        BlobTotalGetResponseObjectSizeInBytes,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () => CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        BlobTotalGetResponseObjectSizeInBytes
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace BlobTotalSimpleRequests$ {
    export const inboundSchema: z.ZodType<BlobTotalSimpleRequests, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BlobTotalSimpleRequests> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace BuildMinute$ {
    export const inboundSchema: z.ZodType<BuildMinute, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BuildMinute> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace DataCacheRead$ {
    export const inboundSchema: z.ZodType<DataCacheRead, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataCacheRead> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace DataCacheRevalidation$ {
    export const inboundSchema: z.ZodType<DataCacheRevalidation, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataCacheRevalidation> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace DataCacheWrite$ {
    export const inboundSchema: z.ZodType<DataCacheWrite, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataCacheWrite> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace EdgeConfigRead$ {
    export const inboundSchema: z.ZodType<EdgeConfigRead, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeConfigRead> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace EdgeConfigWrite$ {
    export const inboundSchema: z.ZodType<EdgeConfigWrite, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeConfigWrite> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace EdgeFunctionExecutionUnits$ {
    export const inboundSchema: z.ZodType<EdgeFunctionExecutionUnits, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeFunctionExecutionUnits> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace EdgeMiddlewareInvocations$ {
    export const inboundSchema: z.ZodType<EdgeMiddlewareInvocations, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeMiddlewareInvocations> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace EdgeRequest$ {
    export const inboundSchema: z.ZodType<EdgeRequest, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EdgeRequest> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace EdgeRequestAdditionalCpuDuration$ {
    export const inboundSchema: z.ZodType<EdgeRequestAdditionalCpuDuration, z.ZodTypeDef, unknown> =
        z
            .object({
                matrix: z
                    .lazy(
                        () =>
                            CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.inboundSchema
                    )
                    .optional(),
                tier: z.number().optional(),
                price: z.number(),
                batch: z.number(),
                threshold: z.number(),
                name: z.string().optional(),
                hidden: z.boolean(),
                disabledAt: z.nullable(z.number()).optional(),
                enabledAt: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                    ...(v.tier === undefined ? null : { tier: v.tier }),
                    price: v.price,
                    batch: v.batch,
                    threshold: v.threshold,
                    ...(v.name === undefined ? null : { name: v.name }),
                    hidden: v.hidden,
                    ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                    ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
                };
            });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        EdgeRequestAdditionalCpuDuration
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace FastDataTransfer$ {
    export const inboundSchema: z.ZodType<FastDataTransfer, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FastDataTransfer> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace FastOriginTransfer$ {
    export const inboundSchema: z.ZodType<FastOriginTransfer, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FastOriginTransfer> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace FunctionDuration$ {
    export const inboundSchema: z.ZodType<FunctionDuration, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FunctionDuration> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace FunctionInvocation$ {
    export const inboundSchema: z.ZodType<FunctionInvocation, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FunctionInvocation> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace LogDrainsVolume$ {
    export const inboundSchema: z.ZodType<LogDrainsVolume, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LogDrainsVolume> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace MonitoringMetric$ {
    export const inboundSchema: z.ZodType<MonitoringMetric, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MonitoringMetric> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace PostgresComputeTime$ {
    export const inboundSchema: z.ZodType<PostgresComputeTime, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresComputeTime> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace PostgresDataStorage$ {
    export const inboundSchema: z.ZodType<PostgresDataStorage, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresDataStorage> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace PostgresDataTransfer$ {
    export const inboundSchema: z.ZodType<PostgresDataTransfer, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresDataTransfer> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace PostgresDatabase$ {
    export const inboundSchema: z.ZodType<PostgresDatabase, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresDatabase> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace PostgresWrittenData$ {
    export const inboundSchema: z.ZodType<PostgresWrittenData, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostgresWrittenData> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace ServerlessFunctionExecution$ {
    export const inboundSchema: z.ZodType<ServerlessFunctionExecution, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ServerlessFunctionExecution> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace SourceImages$ {
    export const inboundSchema: z.ZodType<SourceImages, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SourceImages> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace StorageRedisTotalBandwidthInBytes$ {
    export const inboundSchema: z.ZodType<
        StorageRedisTotalBandwidthInBytes,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        StorageRedisTotalBandwidthInBytes
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace StorageRedisTotalCommands$ {
    export const inboundSchema: z.ZodType<StorageRedisTotalCommands, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StorageRedisTotalCommands> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace StorageRedisTotalDailyAvgStorageInBytes$ {
    export const inboundSchema: z.ZodType<
        StorageRedisTotalDailyAvgStorageInBytes,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        StorageRedisTotalDailyAvgStorageInBytes
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace StorageRedisTotalDatabases$ {
    export const inboundSchema: z.ZodType<StorageRedisTotalDatabases, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StorageRedisTotalDatabases> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace WafOwaspExcessBytes$ {
    export const inboundSchema: z.ZodType<WafOwaspExcessBytes, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WafOwaspExcessBytes> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace WafOwaspRequests$ {
    export const inboundSchema: z.ZodType<WafOwaspRequests, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WafOwaspRequests> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace WebAnalyticsEvent$ {
    export const inboundSchema: z.ZodType<WebAnalyticsEvent, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebAnalyticsEvent> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace InvoiceItems$ {
    export const inboundSchema: z.ZodType<InvoiceItems, z.ZodTypeDef, unknown> = z
        .object({
            pro: z.lazy(() => Pro$.inboundSchema).optional(),
            enterprise: z.lazy(() => Enterprise$.inboundSchema).optional(),
            analytics: z.lazy(() => CreateTeamAnalytics$.inboundSchema).optional(),
            concurrentBuilds: z.lazy(() => ConcurrentBuilds$.inboundSchema).optional(),
            monitoring: z.lazy(() => Monitoring$.inboundSchema).optional(),
            passwordProtection: z
                .lazy(() => CreateTeamPasswordProtection$.inboundSchema)
                .optional(),
            previewDeploymentSuffix: z
                .lazy(() => PreviewDeploymentSuffix$.inboundSchema)
                .optional(),
            saml: z.lazy(() => CreateTeamSaml$.inboundSchema).optional(),
            teamSeats: z.lazy(() => TeamSeats$.inboundSchema).optional(),
            webAnalytics: z.lazy(() => CreateTeamWebAnalytics$.inboundSchema).optional(),
            analyticsUsage: z.lazy(() => AnalyticsUsage$.inboundSchema).optional(),
            artifacts: z.lazy(() => Artifacts$.inboundSchema).optional(),
            bandwidth: z.lazy(() => Bandwidth$.inboundSchema).optional(),
            blobStores: z.lazy(() => BlobStores$.inboundSchema).optional(),
            blobTotalAdvancedRequests: z
                .lazy(() => BlobTotalAdvancedRequests$.inboundSchema)
                .optional(),
            blobTotalAvgSizeInBytes: z
                .lazy(() => BlobTotalAvgSizeInBytes$.inboundSchema)
                .optional(),
            blobTotalGetResponseObjectSizeInBytes: z
                .lazy(() => BlobTotalGetResponseObjectSizeInBytes$.inboundSchema)
                .optional(),
            blobTotalSimpleRequests: z
                .lazy(() => BlobTotalSimpleRequests$.inboundSchema)
                .optional(),
            buildMinute: z.lazy(() => BuildMinute$.inboundSchema).optional(),
            dataCacheRead: z.lazy(() => DataCacheRead$.inboundSchema).optional(),
            dataCacheRevalidation: z.lazy(() => DataCacheRevalidation$.inboundSchema).optional(),
            dataCacheWrite: z.lazy(() => DataCacheWrite$.inboundSchema).optional(),
            edgeConfigRead: z.lazy(() => EdgeConfigRead$.inboundSchema).optional(),
            edgeConfigWrite: z.lazy(() => EdgeConfigWrite$.inboundSchema).optional(),
            edgeFunctionExecutionUnits: z
                .lazy(() => EdgeFunctionExecutionUnits$.inboundSchema)
                .optional(),
            edgeMiddlewareInvocations: z
                .lazy(() => EdgeMiddlewareInvocations$.inboundSchema)
                .optional(),
            edgeRequest: z.lazy(() => EdgeRequest$.inboundSchema).optional(),
            edgeRequestAdditionalCpuDuration: z
                .lazy(() => EdgeRequestAdditionalCpuDuration$.inboundSchema)
                .optional(),
            fastDataTransfer: z.lazy(() => FastDataTransfer$.inboundSchema).optional(),
            fastOriginTransfer: z.lazy(() => FastOriginTransfer$.inboundSchema).optional(),
            functionDuration: z.lazy(() => FunctionDuration$.inboundSchema).optional(),
            functionInvocation: z.lazy(() => FunctionInvocation$.inboundSchema).optional(),
            logDrainsVolume: z.lazy(() => LogDrainsVolume$.inboundSchema).optional(),
            monitoringMetric: z.lazy(() => MonitoringMetric$.inboundSchema).optional(),
            postgresComputeTime: z.lazy(() => PostgresComputeTime$.inboundSchema).optional(),
            postgresDataStorage: z.lazy(() => PostgresDataStorage$.inboundSchema).optional(),
            postgresDataTransfer: z.lazy(() => PostgresDataTransfer$.inboundSchema).optional(),
            postgresDatabase: z.lazy(() => PostgresDatabase$.inboundSchema).optional(),
            postgresWrittenData: z.lazy(() => PostgresWrittenData$.inboundSchema).optional(),
            serverlessFunctionExecution: z
                .lazy(() => ServerlessFunctionExecution$.inboundSchema)
                .optional(),
            sourceImages: z.lazy(() => SourceImages$.inboundSchema).optional(),
            storageRedisTotalBandwidthInBytes: z
                .lazy(() => StorageRedisTotalBandwidthInBytes$.inboundSchema)
                .optional(),
            storageRedisTotalCommands: z
                .lazy(() => StorageRedisTotalCommands$.inboundSchema)
                .optional(),
            storageRedisTotalDailyAvgStorageInBytes: z
                .lazy(() => StorageRedisTotalDailyAvgStorageInBytes$.inboundSchema)
                .optional(),
            storageRedisTotalDatabases: z
                .lazy(() => StorageRedisTotalDatabases$.inboundSchema)
                .optional(),
            wafOwaspExcessBytes: z.lazy(() => WafOwaspExcessBytes$.inboundSchema).optional(),
            wafOwaspRequests: z.lazy(() => WafOwaspRequests$.inboundSchema).optional(),
            webAnalyticsEvent: z.lazy(() => WebAnalyticsEvent$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.pro === undefined ? null : { pro: v.pro }),
                ...(v.enterprise === undefined ? null : { enterprise: v.enterprise }),
                ...(v.analytics === undefined ? null : { analytics: v.analytics }),
                ...(v.concurrentBuilds === undefined
                    ? null
                    : { concurrentBuilds: v.concurrentBuilds }),
                ...(v.monitoring === undefined ? null : { monitoring: v.monitoring }),
                ...(v.passwordProtection === undefined
                    ? null
                    : { passwordProtection: v.passwordProtection }),
                ...(v.previewDeploymentSuffix === undefined
                    ? null
                    : { previewDeploymentSuffix: v.previewDeploymentSuffix }),
                ...(v.saml === undefined ? null : { saml: v.saml }),
                ...(v.teamSeats === undefined ? null : { teamSeats: v.teamSeats }),
                ...(v.webAnalytics === undefined ? null : { webAnalytics: v.webAnalytics }),
                ...(v.analyticsUsage === undefined ? null : { analyticsUsage: v.analyticsUsage }),
                ...(v.artifacts === undefined ? null : { artifacts: v.artifacts }),
                ...(v.bandwidth === undefined ? null : { bandwidth: v.bandwidth }),
                ...(v.blobStores === undefined ? null : { blobStores: v.blobStores }),
                ...(v.blobTotalAdvancedRequests === undefined
                    ? null
                    : { blobTotalAdvancedRequests: v.blobTotalAdvancedRequests }),
                ...(v.blobTotalAvgSizeInBytes === undefined
                    ? null
                    : { blobTotalAvgSizeInBytes: v.blobTotalAvgSizeInBytes }),
                ...(v.blobTotalGetResponseObjectSizeInBytes === undefined
                    ? null
                    : {
                          blobTotalGetResponseObjectSizeInBytes:
                              v.blobTotalGetResponseObjectSizeInBytes,
                      }),
                ...(v.blobTotalSimpleRequests === undefined
                    ? null
                    : { blobTotalSimpleRequests: v.blobTotalSimpleRequests }),
                ...(v.buildMinute === undefined ? null : { buildMinute: v.buildMinute }),
                ...(v.dataCacheRead === undefined ? null : { dataCacheRead: v.dataCacheRead }),
                ...(v.dataCacheRevalidation === undefined
                    ? null
                    : { dataCacheRevalidation: v.dataCacheRevalidation }),
                ...(v.dataCacheWrite === undefined ? null : { dataCacheWrite: v.dataCacheWrite }),
                ...(v.edgeConfigRead === undefined ? null : { edgeConfigRead: v.edgeConfigRead }),
                ...(v.edgeConfigWrite === undefined
                    ? null
                    : { edgeConfigWrite: v.edgeConfigWrite }),
                ...(v.edgeFunctionExecutionUnits === undefined
                    ? null
                    : { edgeFunctionExecutionUnits: v.edgeFunctionExecutionUnits }),
                ...(v.edgeMiddlewareInvocations === undefined
                    ? null
                    : { edgeMiddlewareInvocations: v.edgeMiddlewareInvocations }),
                ...(v.edgeRequest === undefined ? null : { edgeRequest: v.edgeRequest }),
                ...(v.edgeRequestAdditionalCpuDuration === undefined
                    ? null
                    : { edgeRequestAdditionalCpuDuration: v.edgeRequestAdditionalCpuDuration }),
                ...(v.fastDataTransfer === undefined
                    ? null
                    : { fastDataTransfer: v.fastDataTransfer }),
                ...(v.fastOriginTransfer === undefined
                    ? null
                    : { fastOriginTransfer: v.fastOriginTransfer }),
                ...(v.functionDuration === undefined
                    ? null
                    : { functionDuration: v.functionDuration }),
                ...(v.functionInvocation === undefined
                    ? null
                    : { functionInvocation: v.functionInvocation }),
                ...(v.logDrainsVolume === undefined
                    ? null
                    : { logDrainsVolume: v.logDrainsVolume }),
                ...(v.monitoringMetric === undefined
                    ? null
                    : { monitoringMetric: v.monitoringMetric }),
                ...(v.postgresComputeTime === undefined
                    ? null
                    : { postgresComputeTime: v.postgresComputeTime }),
                ...(v.postgresDataStorage === undefined
                    ? null
                    : { postgresDataStorage: v.postgresDataStorage }),
                ...(v.postgresDataTransfer === undefined
                    ? null
                    : { postgresDataTransfer: v.postgresDataTransfer }),
                ...(v.postgresDatabase === undefined
                    ? null
                    : { postgresDatabase: v.postgresDatabase }),
                ...(v.postgresWrittenData === undefined
                    ? null
                    : { postgresWrittenData: v.postgresWrittenData }),
                ...(v.serverlessFunctionExecution === undefined
                    ? null
                    : { serverlessFunctionExecution: v.serverlessFunctionExecution }),
                ...(v.sourceImages === undefined ? null : { sourceImages: v.sourceImages }),
                ...(v.storageRedisTotalBandwidthInBytes === undefined
                    ? null
                    : { storageRedisTotalBandwidthInBytes: v.storageRedisTotalBandwidthInBytes }),
                ...(v.storageRedisTotalCommands === undefined
                    ? null
                    : { storageRedisTotalCommands: v.storageRedisTotalCommands }),
                ...(v.storageRedisTotalDailyAvgStorageInBytes === undefined
                    ? null
                    : {
                          storageRedisTotalDailyAvgStorageInBytes:
                              v.storageRedisTotalDailyAvgStorageInBytes,
                      }),
                ...(v.storageRedisTotalDatabases === undefined
                    ? null
                    : { storageRedisTotalDatabases: v.storageRedisTotalDatabases }),
                ...(v.wafOwaspExcessBytes === undefined
                    ? null
                    : { wafOwaspExcessBytes: v.wafOwaspExcessBytes }),
                ...(v.wafOwaspRequests === undefined
                    ? null
                    : { wafOwaspRequests: v.wafOwaspRequests }),
                ...(v.webAnalyticsEvent === undefined
                    ? null
                    : { webAnalyticsEvent: v.webAnalyticsEvent }),
            };
        });

    export type Outbound = {
        pro?: Pro$.Outbound | undefined;
        enterprise?: Enterprise$.Outbound | undefined;
        analytics?: CreateTeamAnalytics$.Outbound | undefined;
        concurrentBuilds?: ConcurrentBuilds$.Outbound | undefined;
        monitoring?: Monitoring$.Outbound | undefined;
        passwordProtection?: CreateTeamPasswordProtection$.Outbound | undefined;
        previewDeploymentSuffix?: PreviewDeploymentSuffix$.Outbound | undefined;
        saml?: CreateTeamSaml$.Outbound | undefined;
        teamSeats?: TeamSeats$.Outbound | undefined;
        webAnalytics?: CreateTeamWebAnalytics$.Outbound | undefined;
        analyticsUsage?: AnalyticsUsage$.Outbound | undefined;
        artifacts?: Artifacts$.Outbound | undefined;
        bandwidth?: Bandwidth$.Outbound | undefined;
        blobStores?: BlobStores$.Outbound | undefined;
        blobTotalAdvancedRequests?: BlobTotalAdvancedRequests$.Outbound | undefined;
        blobTotalAvgSizeInBytes?: BlobTotalAvgSizeInBytes$.Outbound | undefined;
        blobTotalGetResponseObjectSizeInBytes?:
            | BlobTotalGetResponseObjectSizeInBytes$.Outbound
            | undefined;
        blobTotalSimpleRequests?: BlobTotalSimpleRequests$.Outbound | undefined;
        buildMinute?: BuildMinute$.Outbound | undefined;
        dataCacheRead?: DataCacheRead$.Outbound | undefined;
        dataCacheRevalidation?: DataCacheRevalidation$.Outbound | undefined;
        dataCacheWrite?: DataCacheWrite$.Outbound | undefined;
        edgeConfigRead?: EdgeConfigRead$.Outbound | undefined;
        edgeConfigWrite?: EdgeConfigWrite$.Outbound | undefined;
        edgeFunctionExecutionUnits?: EdgeFunctionExecutionUnits$.Outbound | undefined;
        edgeMiddlewareInvocations?: EdgeMiddlewareInvocations$.Outbound | undefined;
        edgeRequest?: EdgeRequest$.Outbound | undefined;
        edgeRequestAdditionalCpuDuration?: EdgeRequestAdditionalCpuDuration$.Outbound | undefined;
        fastDataTransfer?: FastDataTransfer$.Outbound | undefined;
        fastOriginTransfer?: FastOriginTransfer$.Outbound | undefined;
        functionDuration?: FunctionDuration$.Outbound | undefined;
        functionInvocation?: FunctionInvocation$.Outbound | undefined;
        logDrainsVolume?: LogDrainsVolume$.Outbound | undefined;
        monitoringMetric?: MonitoringMetric$.Outbound | undefined;
        postgresComputeTime?: PostgresComputeTime$.Outbound | undefined;
        postgresDataStorage?: PostgresDataStorage$.Outbound | undefined;
        postgresDataTransfer?: PostgresDataTransfer$.Outbound | undefined;
        postgresDatabase?: PostgresDatabase$.Outbound | undefined;
        postgresWrittenData?: PostgresWrittenData$.Outbound | undefined;
        serverlessFunctionExecution?: ServerlessFunctionExecution$.Outbound | undefined;
        sourceImages?: SourceImages$.Outbound | undefined;
        storageRedisTotalBandwidthInBytes?: StorageRedisTotalBandwidthInBytes$.Outbound | undefined;
        storageRedisTotalCommands?: StorageRedisTotalCommands$.Outbound | undefined;
        storageRedisTotalDailyAvgStorageInBytes?:
            | StorageRedisTotalDailyAvgStorageInBytes$.Outbound
            | undefined;
        storageRedisTotalDatabases?: StorageRedisTotalDatabases$.Outbound | undefined;
        wafOwaspExcessBytes?: WafOwaspExcessBytes$.Outbound | undefined;
        wafOwaspRequests?: WafOwaspRequests$.Outbound | undefined;
        webAnalyticsEvent?: WebAnalyticsEvent$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceItems> = z
        .object({
            pro: z.lazy(() => Pro$.outboundSchema).optional(),
            enterprise: z.lazy(() => Enterprise$.outboundSchema).optional(),
            analytics: z.lazy(() => CreateTeamAnalytics$.outboundSchema).optional(),
            concurrentBuilds: z.lazy(() => ConcurrentBuilds$.outboundSchema).optional(),
            monitoring: z.lazy(() => Monitoring$.outboundSchema).optional(),
            passwordProtection: z
                .lazy(() => CreateTeamPasswordProtection$.outboundSchema)
                .optional(),
            previewDeploymentSuffix: z
                .lazy(() => PreviewDeploymentSuffix$.outboundSchema)
                .optional(),
            saml: z.lazy(() => CreateTeamSaml$.outboundSchema).optional(),
            teamSeats: z.lazy(() => TeamSeats$.outboundSchema).optional(),
            webAnalytics: z.lazy(() => CreateTeamWebAnalytics$.outboundSchema).optional(),
            analyticsUsage: z.lazy(() => AnalyticsUsage$.outboundSchema).optional(),
            artifacts: z.lazy(() => Artifacts$.outboundSchema).optional(),
            bandwidth: z.lazy(() => Bandwidth$.outboundSchema).optional(),
            blobStores: z.lazy(() => BlobStores$.outboundSchema).optional(),
            blobTotalAdvancedRequests: z
                .lazy(() => BlobTotalAdvancedRequests$.outboundSchema)
                .optional(),
            blobTotalAvgSizeInBytes: z
                .lazy(() => BlobTotalAvgSizeInBytes$.outboundSchema)
                .optional(),
            blobTotalGetResponseObjectSizeInBytes: z
                .lazy(() => BlobTotalGetResponseObjectSizeInBytes$.outboundSchema)
                .optional(),
            blobTotalSimpleRequests: z
                .lazy(() => BlobTotalSimpleRequests$.outboundSchema)
                .optional(),
            buildMinute: z.lazy(() => BuildMinute$.outboundSchema).optional(),
            dataCacheRead: z.lazy(() => DataCacheRead$.outboundSchema).optional(),
            dataCacheRevalidation: z.lazy(() => DataCacheRevalidation$.outboundSchema).optional(),
            dataCacheWrite: z.lazy(() => DataCacheWrite$.outboundSchema).optional(),
            edgeConfigRead: z.lazy(() => EdgeConfigRead$.outboundSchema).optional(),
            edgeConfigWrite: z.lazy(() => EdgeConfigWrite$.outboundSchema).optional(),
            edgeFunctionExecutionUnits: z
                .lazy(() => EdgeFunctionExecutionUnits$.outboundSchema)
                .optional(),
            edgeMiddlewareInvocations: z
                .lazy(() => EdgeMiddlewareInvocations$.outboundSchema)
                .optional(),
            edgeRequest: z.lazy(() => EdgeRequest$.outboundSchema).optional(),
            edgeRequestAdditionalCpuDuration: z
                .lazy(() => EdgeRequestAdditionalCpuDuration$.outboundSchema)
                .optional(),
            fastDataTransfer: z.lazy(() => FastDataTransfer$.outboundSchema).optional(),
            fastOriginTransfer: z.lazy(() => FastOriginTransfer$.outboundSchema).optional(),
            functionDuration: z.lazy(() => FunctionDuration$.outboundSchema).optional(),
            functionInvocation: z.lazy(() => FunctionInvocation$.outboundSchema).optional(),
            logDrainsVolume: z.lazy(() => LogDrainsVolume$.outboundSchema).optional(),
            monitoringMetric: z.lazy(() => MonitoringMetric$.outboundSchema).optional(),
            postgresComputeTime: z.lazy(() => PostgresComputeTime$.outboundSchema).optional(),
            postgresDataStorage: z.lazy(() => PostgresDataStorage$.outboundSchema).optional(),
            postgresDataTransfer: z.lazy(() => PostgresDataTransfer$.outboundSchema).optional(),
            postgresDatabase: z.lazy(() => PostgresDatabase$.outboundSchema).optional(),
            postgresWrittenData: z.lazy(() => PostgresWrittenData$.outboundSchema).optional(),
            serverlessFunctionExecution: z
                .lazy(() => ServerlessFunctionExecution$.outboundSchema)
                .optional(),
            sourceImages: z.lazy(() => SourceImages$.outboundSchema).optional(),
            storageRedisTotalBandwidthInBytes: z
                .lazy(() => StorageRedisTotalBandwidthInBytes$.outboundSchema)
                .optional(),
            storageRedisTotalCommands: z
                .lazy(() => StorageRedisTotalCommands$.outboundSchema)
                .optional(),
            storageRedisTotalDailyAvgStorageInBytes: z
                .lazy(() => StorageRedisTotalDailyAvgStorageInBytes$.outboundSchema)
                .optional(),
            storageRedisTotalDatabases: z
                .lazy(() => StorageRedisTotalDatabases$.outboundSchema)
                .optional(),
            wafOwaspExcessBytes: z.lazy(() => WafOwaspExcessBytes$.outboundSchema).optional(),
            wafOwaspRequests: z.lazy(() => WafOwaspRequests$.outboundSchema).optional(),
            webAnalyticsEvent: z.lazy(() => WebAnalyticsEvent$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.pro === undefined ? null : { pro: v.pro }),
                ...(v.enterprise === undefined ? null : { enterprise: v.enterprise }),
                ...(v.analytics === undefined ? null : { analytics: v.analytics }),
                ...(v.concurrentBuilds === undefined
                    ? null
                    : { concurrentBuilds: v.concurrentBuilds }),
                ...(v.monitoring === undefined ? null : { monitoring: v.monitoring }),
                ...(v.passwordProtection === undefined
                    ? null
                    : { passwordProtection: v.passwordProtection }),
                ...(v.previewDeploymentSuffix === undefined
                    ? null
                    : { previewDeploymentSuffix: v.previewDeploymentSuffix }),
                ...(v.saml === undefined ? null : { saml: v.saml }),
                ...(v.teamSeats === undefined ? null : { teamSeats: v.teamSeats }),
                ...(v.webAnalytics === undefined ? null : { webAnalytics: v.webAnalytics }),
                ...(v.analyticsUsage === undefined ? null : { analyticsUsage: v.analyticsUsage }),
                ...(v.artifacts === undefined ? null : { artifacts: v.artifacts }),
                ...(v.bandwidth === undefined ? null : { bandwidth: v.bandwidth }),
                ...(v.blobStores === undefined ? null : { blobStores: v.blobStores }),
                ...(v.blobTotalAdvancedRequests === undefined
                    ? null
                    : { blobTotalAdvancedRequests: v.blobTotalAdvancedRequests }),
                ...(v.blobTotalAvgSizeInBytes === undefined
                    ? null
                    : { blobTotalAvgSizeInBytes: v.blobTotalAvgSizeInBytes }),
                ...(v.blobTotalGetResponseObjectSizeInBytes === undefined
                    ? null
                    : {
                          blobTotalGetResponseObjectSizeInBytes:
                              v.blobTotalGetResponseObjectSizeInBytes,
                      }),
                ...(v.blobTotalSimpleRequests === undefined
                    ? null
                    : { blobTotalSimpleRequests: v.blobTotalSimpleRequests }),
                ...(v.buildMinute === undefined ? null : { buildMinute: v.buildMinute }),
                ...(v.dataCacheRead === undefined ? null : { dataCacheRead: v.dataCacheRead }),
                ...(v.dataCacheRevalidation === undefined
                    ? null
                    : { dataCacheRevalidation: v.dataCacheRevalidation }),
                ...(v.dataCacheWrite === undefined ? null : { dataCacheWrite: v.dataCacheWrite }),
                ...(v.edgeConfigRead === undefined ? null : { edgeConfigRead: v.edgeConfigRead }),
                ...(v.edgeConfigWrite === undefined
                    ? null
                    : { edgeConfigWrite: v.edgeConfigWrite }),
                ...(v.edgeFunctionExecutionUnits === undefined
                    ? null
                    : { edgeFunctionExecutionUnits: v.edgeFunctionExecutionUnits }),
                ...(v.edgeMiddlewareInvocations === undefined
                    ? null
                    : { edgeMiddlewareInvocations: v.edgeMiddlewareInvocations }),
                ...(v.edgeRequest === undefined ? null : { edgeRequest: v.edgeRequest }),
                ...(v.edgeRequestAdditionalCpuDuration === undefined
                    ? null
                    : { edgeRequestAdditionalCpuDuration: v.edgeRequestAdditionalCpuDuration }),
                ...(v.fastDataTransfer === undefined
                    ? null
                    : { fastDataTransfer: v.fastDataTransfer }),
                ...(v.fastOriginTransfer === undefined
                    ? null
                    : { fastOriginTransfer: v.fastOriginTransfer }),
                ...(v.functionDuration === undefined
                    ? null
                    : { functionDuration: v.functionDuration }),
                ...(v.functionInvocation === undefined
                    ? null
                    : { functionInvocation: v.functionInvocation }),
                ...(v.logDrainsVolume === undefined
                    ? null
                    : { logDrainsVolume: v.logDrainsVolume }),
                ...(v.monitoringMetric === undefined
                    ? null
                    : { monitoringMetric: v.monitoringMetric }),
                ...(v.postgresComputeTime === undefined
                    ? null
                    : { postgresComputeTime: v.postgresComputeTime }),
                ...(v.postgresDataStorage === undefined
                    ? null
                    : { postgresDataStorage: v.postgresDataStorage }),
                ...(v.postgresDataTransfer === undefined
                    ? null
                    : { postgresDataTransfer: v.postgresDataTransfer }),
                ...(v.postgresDatabase === undefined
                    ? null
                    : { postgresDatabase: v.postgresDatabase }),
                ...(v.postgresWrittenData === undefined
                    ? null
                    : { postgresWrittenData: v.postgresWrittenData }),
                ...(v.serverlessFunctionExecution === undefined
                    ? null
                    : { serverlessFunctionExecution: v.serverlessFunctionExecution }),
                ...(v.sourceImages === undefined ? null : { sourceImages: v.sourceImages }),
                ...(v.storageRedisTotalBandwidthInBytes === undefined
                    ? null
                    : { storageRedisTotalBandwidthInBytes: v.storageRedisTotalBandwidthInBytes }),
                ...(v.storageRedisTotalCommands === undefined
                    ? null
                    : { storageRedisTotalCommands: v.storageRedisTotalCommands }),
                ...(v.storageRedisTotalDailyAvgStorageInBytes === undefined
                    ? null
                    : {
                          storageRedisTotalDailyAvgStorageInBytes:
                              v.storageRedisTotalDailyAvgStorageInBytes,
                      }),
                ...(v.storageRedisTotalDatabases === undefined
                    ? null
                    : { storageRedisTotalDatabases: v.storageRedisTotalDatabases }),
                ...(v.wafOwaspExcessBytes === undefined
                    ? null
                    : { wafOwaspExcessBytes: v.wafOwaspExcessBytes }),
                ...(v.wafOwaspRequests === undefined
                    ? null
                    : { wafOwaspRequests: v.wafOwaspRequests }),
                ...(v.webAnalyticsEvent === undefined
                    ? null
                    : { webAnalyticsEvent: v.webAnalyticsEvent }),
            };
        });
}

/** @internal */
export namespace InvoiceSettings$ {
    export const inboundSchema: z.ZodType<InvoiceSettings, z.ZodTypeDef, unknown> = z
        .object({
            footer: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.footer === undefined ? null : { footer: v.footer }),
            };
        });

    export type Outbound = {
        footer?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceSettings> = z
        .object({
            footer: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.footer === undefined ? null : { footer: v.footer }),
            };
        });
}

/** @internal */
export namespace CreateTeamTrial$ {
    export const inboundSchema: z.ZodType<CreateTeamTrial, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTrial> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace CreateTeamPeriod$ {
    export const inboundSchema: z.ZodType<CreateTeamPeriod, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPeriod> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace Interval$ {
    export const inboundSchema = z.nativeEnum(Interval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Frequency$ {
    export const inboundSchema: z.ZodType<Frequency, z.ZodTypeDef, unknown> = z
        .object({
            interval: Interval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Frequency> = z
        .object({
            interval: Interval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace Duration$ {
    export const inboundSchema = z.nativeEnum(Duration);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Coupon$ {
    export const inboundSchema: z.ZodType<Coupon, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            name: z.nullable(z.string()),
            amountOff: z.nullable(z.number()),
            percentageOff: z.nullable(z.number()),
            durationInMonths: z.nullable(z.number()),
            duration: Duration$.inboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                amountOff: v.amountOff,
                percentageOff: v.percentageOff,
                durationInMonths: v.durationInMonths,
                duration: v.duration,
            };
        });

    export type Outbound = {
        id: string;
        name: string | null;
        amountOff: number | null;
        percentageOff: number | null;
        durationInMonths: number | null;
        duration: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Coupon> = z
        .object({
            id: z.string(),
            name: z.nullable(z.string()),
            amountOff: z.nullable(z.number()),
            percentageOff: z.nullable(z.number()),
            durationInMonths: z.nullable(z.number()),
            duration: Duration$.outboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                amountOff: v.amountOff,
                percentageOff: v.percentageOff,
                durationInMonths: v.durationInMonths,
                duration: v.duration,
            };
        });
}

/** @internal */
export namespace Discount$ {
    export const inboundSchema: z.ZodType<Discount, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            coupon: z.lazy(() => Coupon$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                coupon: v.coupon,
            };
        });

    export type Outbound = {
        id: string;
        coupon: Coupon$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Discount> = z
        .object({
            id: z.string(),
            coupon: z.lazy(() => Coupon$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                coupon: v.coupon,
            };
        });
}

/** @internal */
export namespace Items$ {
    export const inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            priceId: z.string(),
            productId: z.string(),
            amount: z.number(),
            quantity: z.number(),
        })
        .transform((v) => {
            return {
                id: v.id,
                priceId: v.priceId,
                productId: v.productId,
                amount: v.amount,
                quantity: v.quantity,
            };
        });

    export type Outbound = {
        id: string;
        priceId: string;
        productId: string;
        amount: number;
        quantity: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Items> = z
        .object({
            id: z.string(),
            priceId: z.string(),
            productId: z.string(),
            amount: z.number(),
            quantity: z.number(),
        })
        .transform((v) => {
            return {
                id: v.id,
                priceId: v.priceId,
                productId: v.productId,
                amount: v.amount,
                quantity: v.quantity,
            };
        });
}

/** @internal */
export namespace Subscriptions$ {
    export const inboundSchema: z.ZodType<Subscriptions, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            trial: z.nullable(z.lazy(() => CreateTeamTrial$.inboundSchema)),
            period: z.lazy(() => CreateTeamPeriod$.inboundSchema),
            frequency: z.lazy(() => Frequency$.inboundSchema),
            discount: z.nullable(z.lazy(() => Discount$.inboundSchema)),
            items: z.array(z.lazy(() => Items$.inboundSchema)),
        })
        .transform((v) => {
            return {
                id: v.id,
                trial: v.trial,
                period: v.period,
                frequency: v.frequency,
                discount: v.discount,
                items: v.items,
            };
        });

    export type Outbound = {
        id: string;
        trial: CreateTeamTrial$.Outbound | null;
        period: CreateTeamPeriod$.Outbound;
        frequency: Frequency$.Outbound;
        discount: Discount$.Outbound | null;
        items: Array<Items$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Subscriptions> = z
        .object({
            id: z.string(),
            trial: z.nullable(z.lazy(() => CreateTeamTrial$.outboundSchema)),
            period: z.lazy(() => CreateTeamPeriod$.outboundSchema),
            frequency: z.lazy(() => Frequency$.outboundSchema),
            discount: z.nullable(z.lazy(() => Discount$.outboundSchema)),
            items: z.array(z.lazy(() => Items$.outboundSchema)),
        })
        .transform((v) => {
            return {
                id: v.id,
                trial: v.trial,
                period: v.period,
                frequency: v.frequency,
                discount: v.discount,
                items: v.items,
            };
        });
}

/** @internal */
export namespace Controls$ {
    export const inboundSchema: z.ZodType<Controls, z.ZodTypeDef, unknown> = z
        .object({
            analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
            analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.analyticsSampleRateInPercent === undefined
                    ? null
                    : { analyticsSampleRateInPercent: v.analyticsSampleRateInPercent }),
                ...(v.analyticsSpendLimitInDollars === undefined
                    ? null
                    : { analyticsSpendLimitInDollars: v.analyticsSpendLimitInDollars }),
            };
        });

    export type Outbound = {
        analyticsSampleRateInPercent?: number | null | undefined;
        analyticsSpendLimitInDollars?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Controls> = z
        .object({
            analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
            analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.analyticsSampleRateInPercent === undefined
                    ? null
                    : { analyticsSampleRateInPercent: v.analyticsSampleRateInPercent }),
                ...(v.analyticsSpendLimitInDollars === undefined
                    ? null
                    : { analyticsSpendLimitInDollars: v.analyticsSpendLimitInDollars }),
            };
        });
}

/** @internal */
export namespace CreateTeamStatus$ {
    export const inboundSchema = z.nativeEnum(CreateTeamStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace PricingExperiment$ {
    export const inboundSchema = z.nativeEnum(PricingExperiment);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace Billing$ {
    export const inboundSchema: z.ZodType<Billing, z.ZodTypeDef, unknown> = z
        .object({
            currency: Currency$.inboundSchema.optional(),
            cancelation: z.nullable(z.number()).optional(),
            period: z.nullable(z.lazy(() => Period$.inboundSchema)),
            contract: z.nullable(z.lazy(() => Contract$.inboundSchema)).optional(),
            plan: CreateTeamPlan$.inboundSchema,
            planIteration: z.string().optional(),
            platform: Platform$.inboundSchema.optional(),
            orbCustomerId: z.string().optional(),
            syncedAt: z.number().optional(),
            programType: ProgramType$.inboundSchema.optional(),
            trial: z.nullable(z.lazy(() => Trial$.inboundSchema)).optional(),
            email: z.nullable(z.string()).optional(),
            tax: z.nullable(z.lazy(() => Tax$.inboundSchema)).optional(),
            language: z.nullable(z.string()).optional(),
            address: z.nullable(z.lazy(() => Address$.inboundSchema)).optional(),
            name: z.nullable(z.string()).optional(),
            invoiceItems: z.nullable(z.lazy(() => InvoiceItems$.inboundSchema)).optional(),
            invoiceSettings: z.lazy(() => InvoiceSettings$.inboundSchema).optional(),
            subscriptions: z
                .nullable(z.array(z.lazy(() => Subscriptions$.inboundSchema)))
                .optional(),
            controls: z.nullable(z.lazy(() => Controls$.inboundSchema)).optional(),
            purchaseOrder: z.nullable(z.string()).optional(),
            status: CreateTeamStatus$.inboundSchema.optional(),
            pricingExperiment: PricingExperiment$.inboundSchema.optional(),
            orbMigrationScheduledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.cancelation === undefined ? null : { cancelation: v.cancelation }),
                period: v.period,
                ...(v.contract === undefined ? null : { contract: v.contract }),
                plan: v.plan,
                ...(v.planIteration === undefined ? null : { planIteration: v.planIteration }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.orbCustomerId === undefined ? null : { orbCustomerId: v.orbCustomerId }),
                ...(v.syncedAt === undefined ? null : { syncedAt: v.syncedAt }),
                ...(v.programType === undefined ? null : { programType: v.programType }),
                ...(v.trial === undefined ? null : { trial: v.trial }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.invoiceItems === undefined ? null : { invoiceItems: v.invoiceItems }),
                ...(v.invoiceSettings === undefined
                    ? null
                    : { invoiceSettings: v.invoiceSettings }),
                ...(v.subscriptions === undefined ? null : { subscriptions: v.subscriptions }),
                ...(v.controls === undefined ? null : { controls: v.controls }),
                ...(v.purchaseOrder === undefined ? null : { purchaseOrder: v.purchaseOrder }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.pricingExperiment === undefined
                    ? null
                    : { pricingExperiment: v.pricingExperiment }),
                ...(v.orbMigrationScheduledAt === undefined
                    ? null
                    : { orbMigrationScheduledAt: v.orbMigrationScheduledAt }),
            };
        });

    export type Outbound = {
        currency?: string | undefined;
        cancelation?: number | null | undefined;
        period: Period$.Outbound | null;
        contract?: Contract$.Outbound | null | undefined;
        plan: string;
        planIteration?: string | undefined;
        platform?: string | undefined;
        orbCustomerId?: string | undefined;
        syncedAt?: number | undefined;
        programType?: string | undefined;
        trial?: Trial$.Outbound | null | undefined;
        email?: string | null | undefined;
        tax?: Tax$.Outbound | null | undefined;
        language?: string | null | undefined;
        address?: Address$.Outbound | null | undefined;
        name?: string | null | undefined;
        invoiceItems?: InvoiceItems$.Outbound | null | undefined;
        invoiceSettings?: InvoiceSettings$.Outbound | undefined;
        subscriptions?: Array<Subscriptions$.Outbound> | null | undefined;
        controls?: Controls$.Outbound | null | undefined;
        purchaseOrder?: string | null | undefined;
        status?: string | undefined;
        pricingExperiment?: string | undefined;
        orbMigrationScheduledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Billing> = z
        .object({
            currency: Currency$.outboundSchema.optional(),
            cancelation: z.nullable(z.number()).optional(),
            period: z.nullable(z.lazy(() => Period$.outboundSchema)),
            contract: z.nullable(z.lazy(() => Contract$.outboundSchema)).optional(),
            plan: CreateTeamPlan$.outboundSchema,
            planIteration: z.string().optional(),
            platform: Platform$.outboundSchema.optional(),
            orbCustomerId: z.string().optional(),
            syncedAt: z.number().optional(),
            programType: ProgramType$.outboundSchema.optional(),
            trial: z.nullable(z.lazy(() => Trial$.outboundSchema)).optional(),
            email: z.nullable(z.string()).optional(),
            tax: z.nullable(z.lazy(() => Tax$.outboundSchema)).optional(),
            language: z.nullable(z.string()).optional(),
            address: z.nullable(z.lazy(() => Address$.outboundSchema)).optional(),
            name: z.nullable(z.string()).optional(),
            invoiceItems: z.nullable(z.lazy(() => InvoiceItems$.outboundSchema)).optional(),
            invoiceSettings: z.lazy(() => InvoiceSettings$.outboundSchema).optional(),
            subscriptions: z
                .nullable(z.array(z.lazy(() => Subscriptions$.outboundSchema)))
                .optional(),
            controls: z.nullable(z.lazy(() => Controls$.outboundSchema)).optional(),
            purchaseOrder: z.nullable(z.string()).optional(),
            status: CreateTeamStatus$.outboundSchema.optional(),
            pricingExperiment: PricingExperiment$.outboundSchema.optional(),
            orbMigrationScheduledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.cancelation === undefined ? null : { cancelation: v.cancelation }),
                period: v.period,
                ...(v.contract === undefined ? null : { contract: v.contract }),
                plan: v.plan,
                ...(v.planIteration === undefined ? null : { planIteration: v.planIteration }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.orbCustomerId === undefined ? null : { orbCustomerId: v.orbCustomerId }),
                ...(v.syncedAt === undefined ? null : { syncedAt: v.syncedAt }),
                ...(v.programType === undefined ? null : { programType: v.programType }),
                ...(v.trial === undefined ? null : { trial: v.trial }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.invoiceItems === undefined ? null : { invoiceItems: v.invoiceItems }),
                ...(v.invoiceSettings === undefined
                    ? null
                    : { invoiceSettings: v.invoiceSettings }),
                ...(v.subscriptions === undefined ? null : { subscriptions: v.subscriptions }),
                ...(v.controls === undefined ? null : { controls: v.controls }),
                ...(v.purchaseOrder === undefined ? null : { purchaseOrder: v.purchaseOrder }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.pricingExperiment === undefined
                    ? null
                    : { pricingExperiment: v.pricingExperiment }),
                ...(v.orbMigrationScheduledAt === undefined
                    ? null
                    : { orbMigrationScheduledAt: v.orbMigrationScheduledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamResponseBody$ {
    export const inboundSchema: z.ZodType<CreateTeamResponseBody, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            slug: z.string(),
            billing: z.lazy(() => Billing$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                slug: v.slug,
                billing: v.billing,
            };
        });

    export type Outbound = {
        id: string;
        slug: string;
        billing: Billing$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamResponseBody> = z
        .object({
            id: z.string(),
            slug: z.string(),
            billing: z.lazy(() => Billing$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                slug: v.slug,
                billing: v.billing,
            };
        });
}

/** @internal */
export namespace CreateTeamResponse$ {
    export const inboundSchema: z.ZodType<CreateTeamResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            object: z.lazy(() => CreateTeamResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        object?: CreateTeamResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            object: z.lazy(() => CreateTeamResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
