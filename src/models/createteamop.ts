/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Utm = {
    /**
     * UTM source
     */
    utmSource?: string | undefined;
    /**
     * UTM medium
     */
    utmMedium?: string | undefined;
    /**
     * UTM campaign
     */
    utmCampaign?: string | undefined;
    /**
     * UTM term
     */
    utmTerm?: string | undefined;
};

/**
 * Attribution information for the session or current page
 */
export type Attribution = {
    /**
     * Session referrer
     */
    sessionReferrer?: string | undefined;
    /**
     * Session landing page
     */
    landingPage?: string | undefined;
    /**
     * Referrer to the signup page
     */
    pageBeforeConversionPage?: string | undefined;
    utm?: Utm | undefined;
};

export type CreateTeamRequestBody = {
    /**
     * The desired slug for the Team
     */
    slug: string;
    /**
     * The desired name for the Team. It will be generated from the provided slug if nothing is provided
     */
    name?: string | undefined;
    /**
     * Attribution information for the session or current page
     */
    attribution?: Attribution | undefined;
};

export enum CreateTeamCurrency {
    Usd = "usd",
    Eur = "eur",
}

export type CreateTeamPeriod = {
    start: number;
    end: number;
};

export type CreateTeamContract = {
    start: number;
    end: number;
};

export enum CreateTeamPlan {
    Pro = "pro",
    Enterprise = "enterprise",
    Hobby = "hobby",
}

export enum CreateTeamPlatform {
    Stripe = "stripe",
    StripeTestMode = "stripeTestMode",
}

export enum CreateTeamProgramType {
    Startup = "startup",
    Agency = "agency",
}

export type CreateTeamTrial = {
    start: number;
    end: number;
};

export type CreateTeamTax = {
    type: string;
    id: string;
};

export type CreateTeamAddress = {
    line1?: string | undefined;
    line2?: string | undefined;
    postalCode?: string | undefined;
    city?: string | undefined;
    country?: string | undefined;
    state?: string | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamPro = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency
        | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency =
    {
        interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseInterval;
        intervalCount: number;
    };

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamEnterprise = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency
        | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsInterval {
    Month = "month",
}

export type CreateTeamTeamsFrequency = {
    interval: CreateTeamTeamsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamAnalytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponseInterval {
    Month = "month",
}

export type CreateTeamTeamsResponseFrequency = {
    interval: CreateTeamTeamsResponseInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamConcurrentBuilds = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponseFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200Interval {
    Month = "month",
}

export type CreateTeamTeamsResponse200Frequency = {
    interval: CreateTeamTeamsResponse200Interval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamMonitoring = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200Frequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamPasswordProtection = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200ApplicationJSONFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamPreviewDeploymentSuffix = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamSaml = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency = {
    interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval;
    intervalCount: number;
};

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamTeamSeats = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency
        | undefined;
    maxQuantity?: number | undefined;
};

export enum CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval {
    Month = "month",
}

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency =
    {
        interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval;
        intervalCount: number;
    };

/**
 * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
 */
export type CreateTeamWebAnalytics = {
    tier?: number | undefined;
    price: number;
    quantity: number;
    highestQuantity?: number | undefined;
    name?: string | undefined;
    hidden: boolean;
    createdAt?: number | undefined;
    disabledAt?: number | null | undefined;
    frequency?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency
        | undefined;
    maxQuantity?: number | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamAnalyticsUsage = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamArtifacts = {
    matrix?: CreateTeamMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamBandwidth = {
    matrix?: CreateTeamTeamsMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponseMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamBlobStores = {
    matrix?: CreateTeamTeamsResponseMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200Matrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamBlobTotalAdvancedRequests = {
    matrix?: CreateTeamTeamsResponse200Matrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamBlobTotalAvgSizeInBytes = {
    matrix?: CreateTeamTeamsResponse200ApplicationJSONMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamBlobTotalGetResponseObjectSizeInBytes = {
    matrix?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamBlobTotalSimpleRequests = {
    matrix?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix = {
    defaultUnitPrice: string;
    dimensionPrices: Record<string, string>;
};

export type CreateTeamBuildMinute = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamDataCacheRead = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamDataCacheRevalidation = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamDataCacheWrite = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamEdgeConfigRead = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamEdgeConfigWrite = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamEdgeFunctionExecutionUnits = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamEdgeMiddlewareInvocations = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamEdgeRequest = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamEdgeRequestAdditionalCpuDuration = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamFastDataTransfer = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamFastOriginTransfer = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamFunctionDuration = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamFunctionInvocation = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamLogDrainsVolume = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamMonitoringMetric = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamPostgresComputeTime = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamPostgresDataStorage = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamPostgresDataTransfer = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamPostgresDatabase = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamPostgresWrittenData = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamServerlessFunctionExecution = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamSourceImages = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamStorageRedisTotalBandwidthInBytes = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamStorageRedisTotalCommands = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamStorageRedisTotalDailyAvgStorageInBytes = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamStorageRedisTotalDatabases = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamWafOwaspExcessBytes = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamWafOwaspRequests = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix =
    {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

export type CreateTeamWebAnalyticsEvent = {
    matrix?:
        | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix
        | undefined;
    tier?: number | undefined;
    price: number;
    batch: number;
    threshold: number;
    name?: string | undefined;
    hidden: boolean;
    disabledAt?: number | null | undefined;
    enabledAt?: number | null | undefined;
};

export type CreateTeamInvoiceItems = {
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    pro?: CreateTeamPro | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    enterprise?: CreateTeamEnterprise | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    analytics?: CreateTeamAnalytics | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    concurrentBuilds?: CreateTeamConcurrentBuilds | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    monitoring?: CreateTeamMonitoring | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    passwordProtection?: CreateTeamPasswordProtection | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    previewDeploymentSuffix?: CreateTeamPreviewDeploymentSuffix | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    saml?: CreateTeamSaml | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    teamSeats?: CreateTeamTeamSeats | undefined;
    /**
     * Will be used to create an invoice item. The price must be in cents: 2000 for $20.
     */
    webAnalytics?: CreateTeamWebAnalytics | undefined;
    analyticsUsage?: CreateTeamAnalyticsUsage | undefined;
    artifacts?: CreateTeamArtifacts | undefined;
    bandwidth?: CreateTeamBandwidth | undefined;
    blobStores?: CreateTeamBlobStores | undefined;
    blobTotalAdvancedRequests?: CreateTeamBlobTotalAdvancedRequests | undefined;
    blobTotalAvgSizeInBytes?: CreateTeamBlobTotalAvgSizeInBytes | undefined;
    blobTotalGetResponseObjectSizeInBytes?:
        | CreateTeamBlobTotalGetResponseObjectSizeInBytes
        | undefined;
    blobTotalSimpleRequests?: CreateTeamBlobTotalSimpleRequests | undefined;
    buildMinute?: CreateTeamBuildMinute | undefined;
    dataCacheRead?: CreateTeamDataCacheRead | undefined;
    dataCacheRevalidation?: CreateTeamDataCacheRevalidation | undefined;
    dataCacheWrite?: CreateTeamDataCacheWrite | undefined;
    edgeConfigRead?: CreateTeamEdgeConfigRead | undefined;
    edgeConfigWrite?: CreateTeamEdgeConfigWrite | undefined;
    edgeFunctionExecutionUnits?: CreateTeamEdgeFunctionExecutionUnits | undefined;
    edgeMiddlewareInvocations?: CreateTeamEdgeMiddlewareInvocations | undefined;
    edgeRequest?: CreateTeamEdgeRequest | undefined;
    edgeRequestAdditionalCpuDuration?: CreateTeamEdgeRequestAdditionalCpuDuration | undefined;
    fastDataTransfer?: CreateTeamFastDataTransfer | undefined;
    fastOriginTransfer?: CreateTeamFastOriginTransfer | undefined;
    functionDuration?: CreateTeamFunctionDuration | undefined;
    functionInvocation?: CreateTeamFunctionInvocation | undefined;
    logDrainsVolume?: CreateTeamLogDrainsVolume | undefined;
    monitoringMetric?: CreateTeamMonitoringMetric | undefined;
    postgresComputeTime?: CreateTeamPostgresComputeTime | undefined;
    postgresDataStorage?: CreateTeamPostgresDataStorage | undefined;
    postgresDataTransfer?: CreateTeamPostgresDataTransfer | undefined;
    postgresDatabase?: CreateTeamPostgresDatabase | undefined;
    postgresWrittenData?: CreateTeamPostgresWrittenData | undefined;
    serverlessFunctionExecution?: CreateTeamServerlessFunctionExecution | undefined;
    sourceImages?: CreateTeamSourceImages | undefined;
    storageRedisTotalBandwidthInBytes?: CreateTeamStorageRedisTotalBandwidthInBytes | undefined;
    storageRedisTotalCommands?: CreateTeamStorageRedisTotalCommands | undefined;
    storageRedisTotalDailyAvgStorageInBytes?:
        | CreateTeamStorageRedisTotalDailyAvgStorageInBytes
        | undefined;
    storageRedisTotalDatabases?: CreateTeamStorageRedisTotalDatabases | undefined;
    wafOwaspExcessBytes?: CreateTeamWafOwaspExcessBytes | undefined;
    wafOwaspRequests?: CreateTeamWafOwaspRequests | undefined;
    webAnalyticsEvent?: CreateTeamWebAnalyticsEvent | undefined;
};

export type CreateTeamInvoiceSettings = {
    footer?: string | undefined;
};

export type CreateTeamTeamsTrial = {
    start: number;
    end: number;
};

export type CreateTeamTeamsPeriod = {
    start: number;
    end: number;
};

export enum CreateTeamInterval {
    Month = "month",
    Day = "day",
    Week = "week",
    Year = "year",
}

export type CreateTeamFrequency = {
    interval: CreateTeamInterval;
    intervalCount: number;
};

export enum CreateTeamDuration {
    Forever = "forever",
    Repeating = "repeating",
    Once = "once",
}

export type CreateTeamCoupon = {
    id: string;
    name: string | null;
    amountOff: number | null;
    percentageOff: number | null;
    durationInMonths: number | null;
    duration: CreateTeamDuration;
};

export type CreateTeamDiscount = {
    id: string;
    coupon: CreateTeamCoupon;
};

export type CreateTeamItems = {
    id: string;
    priceId: string;
    productId: string;
    amount: number;
    quantity: number;
};

export type CreateTeamSubscriptions = {
    id: string;
    trial: CreateTeamTeamsTrial | null;
    period: CreateTeamTeamsPeriod;
    frequency: CreateTeamFrequency;
    discount: CreateTeamDiscount | null;
    items: Array<CreateTeamItems>;
};

export type CreateTeamControls = {
    analyticsSampleRateInPercent?: number | null | undefined;
    analyticsSpendLimitInDollars?: number | null | undefined;
};

export enum CreateTeamStatus {
    Active = "active",
    Trialing = "trialing",
    Overdue = "overdue",
    Expired = "expired",
    Canceled = "canceled",
}

export enum CreateTeamPricingExperiment {
    August2022 = "august-2022",
}

export type CreateTeamBilling = {
    currency?: CreateTeamCurrency | undefined;
    cancelation?: number | null | undefined;
    period: CreateTeamPeriod | null;
    contract?: CreateTeamContract | null | undefined;
    plan: CreateTeamPlan;
    planIteration?: string | undefined;
    platform?: CreateTeamPlatform | undefined;
    orbCustomerId?: string | undefined;
    syncedAt?: number | undefined;
    programType?: CreateTeamProgramType | undefined;
    trial?: CreateTeamTrial | null | undefined;
    email?: string | null | undefined;
    tax?: CreateTeamTax | null | undefined;
    language?: string | null | undefined;
    address?: CreateTeamAddress | null | undefined;
    name?: string | null | undefined;
    invoiceItems?: CreateTeamInvoiceItems | null | undefined;
    invoiceSettings?: CreateTeamInvoiceSettings | undefined;
    subscriptions?: Array<CreateTeamSubscriptions> | null | undefined;
    controls?: CreateTeamControls | null | undefined;
    purchaseOrder?: string | null | undefined;
    status?: CreateTeamStatus | undefined;
    pricingExperiment?: CreateTeamPricingExperiment | undefined;
    orbMigrationScheduledAt?: number | null | undefined;
};

/**
 * The team was created successfully
 */
export type CreateTeamResponseBody = {
    /**
     * Id of the created team
     */
    id: string;
    slug: string;
    billing: CreateTeamBilling;
};

/** @internal */
export namespace Utm$ {
    export const inboundSchema: z.ZodType<Utm, z.ZodTypeDef, unknown> = z
        .object({
            utmSource: z.string().optional(),
            utmMedium: z.string().optional(),
            utmCampaign: z.string().optional(),
            utmTerm: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.utmSource === undefined ? null : { utmSource: v.utmSource }),
                ...(v.utmMedium === undefined ? null : { utmMedium: v.utmMedium }),
                ...(v.utmCampaign === undefined ? null : { utmCampaign: v.utmCampaign }),
                ...(v.utmTerm === undefined ? null : { utmTerm: v.utmTerm }),
            };
        });

    export type Outbound = {
        utmSource?: string | undefined;
        utmMedium?: string | undefined;
        utmCampaign?: string | undefined;
        utmTerm?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Utm> = z
        .object({
            utmSource: z.string().optional(),
            utmMedium: z.string().optional(),
            utmCampaign: z.string().optional(),
            utmTerm: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.utmSource === undefined ? null : { utmSource: v.utmSource }),
                ...(v.utmMedium === undefined ? null : { utmMedium: v.utmMedium }),
                ...(v.utmCampaign === undefined ? null : { utmCampaign: v.utmCampaign }),
                ...(v.utmTerm === undefined ? null : { utmTerm: v.utmTerm }),
            };
        });
}

/** @internal */
export namespace Attribution$ {
    export const inboundSchema: z.ZodType<Attribution, z.ZodTypeDef, unknown> = z
        .object({
            sessionReferrer: z.string().optional(),
            landingPage: z.string().optional(),
            pageBeforeConversionPage: z.string().optional(),
            utm: z.lazy(() => Utm$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sessionReferrer === undefined
                    ? null
                    : { sessionReferrer: v.sessionReferrer }),
                ...(v.landingPage === undefined ? null : { landingPage: v.landingPage }),
                ...(v.pageBeforeConversionPage === undefined
                    ? null
                    : { pageBeforeConversionPage: v.pageBeforeConversionPage }),
                ...(v.utm === undefined ? null : { utm: v.utm }),
            };
        });

    export type Outbound = {
        sessionReferrer?: string | undefined;
        landingPage?: string | undefined;
        pageBeforeConversionPage?: string | undefined;
        utm?: Utm$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Attribution> = z
        .object({
            sessionReferrer: z.string().optional(),
            landingPage: z.string().optional(),
            pageBeforeConversionPage: z.string().optional(),
            utm: z.lazy(() => Utm$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.sessionReferrer === undefined
                    ? null
                    : { sessionReferrer: v.sessionReferrer }),
                ...(v.landingPage === undefined ? null : { landingPage: v.landingPage }),
                ...(v.pageBeforeConversionPage === undefined
                    ? null
                    : { pageBeforeConversionPage: v.pageBeforeConversionPage }),
                ...(v.utm === undefined ? null : { utm: v.utm }),
            };
        });
}

/** @internal */
export namespace CreateTeamRequestBody$ {
    export const inboundSchema: z.ZodType<CreateTeamRequestBody, z.ZodTypeDef, unknown> = z
        .object({
            slug: z.string(),
            name: z.string().optional(),
            attribution: z.lazy(() => Attribution$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                slug: v.slug,
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.attribution === undefined ? null : { attribution: v.attribution }),
            };
        });

    export type Outbound = {
        slug: string;
        name?: string | undefined;
        attribution?: Attribution$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamRequestBody> = z
        .object({
            slug: z.string(),
            name: z.string().optional(),
            attribution: z.lazy(() => Attribution$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                slug: v.slug,
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.attribution === undefined ? null : { attribution: v.attribution }),
            };
        });
}

/** @internal */
export namespace CreateTeamCurrency$ {
    export const inboundSchema = z.nativeEnum(CreateTeamCurrency);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamPeriod$ {
    export const inboundSchema: z.ZodType<CreateTeamPeriod, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPeriod> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace CreateTeamContract$ {
    export const inboundSchema: z.ZodType<CreateTeamContract, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamContract> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace CreateTeamPlan$ {
    export const inboundSchema = z.nativeEnum(CreateTeamPlan);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamPlatform$ {
    export const inboundSchema = z.nativeEnum(CreateTeamPlatform);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamProgramType$ {
    export const inboundSchema = z.nativeEnum(CreateTeamProgramType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTrial$ {
    export const inboundSchema: z.ZodType<CreateTeamTrial, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTrial> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace CreateTeamTax$ {
    export const inboundSchema: z.ZodType<CreateTeamTax, z.ZodTypeDef, unknown> = z
        .object({
            type: z.string(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                id: v.id,
            };
        });

    export type Outbound = {
        type: string;
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTax> = z
        .object({
            type: z.string(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                id: v.id,
            };
        });
}

/** @internal */
export namespace CreateTeamAddress$ {
    export const inboundSchema: z.ZodType<CreateTeamAddress, z.ZodTypeDef, unknown> = z
        .object({
            line1: z.string().optional(),
            line2: z.string().optional(),
            postalCode: z.string().optional(),
            city: z.string().optional(),
            country: z.string().optional(),
            state: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.line1 === undefined ? null : { line1: v.line1 }),
                ...(v.line2 === undefined ? null : { line2: v.line2 }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.state === undefined ? null : { state: v.state }),
            };
        });

    export type Outbound = {
        line1?: string | undefined;
        line2?: string | undefined;
        postalCode?: string | undefined;
        city?: string | undefined;
        country?: string | undefined;
        state?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamAddress> = z
        .object({
            line1: z.string().optional(),
            line2: z.string().optional(),
            postalCode: z.string().optional(),
            city: z.string().optional(),
            country: z.string().optional(),
            state: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.line1 === undefined ? null : { line1: v.line1 }),
                ...(v.line2 === undefined ? null : { line2: v.line2 }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.state === undefined ? null : { state: v.state }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamPro$ {
    export const inboundSchema: z.ZodType<CreateTeamPro, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPro> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsProFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamEnterprise$ {
    export const inboundSchema: z.ZodType<CreateTeamEnterprise, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamEnterprise> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEnterpriseFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsFrequency$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsFrequency, z.ZodTypeDef, unknown> = z
        .object({
            interval: CreateTeamTeamsInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsFrequency> = z
        .object({
            interval: CreateTeamTeamsInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamAnalytics$ {
    export const inboundSchema: z.ZodType<CreateTeamAnalytics, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsFrequency$.inboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamAnalytics> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsFrequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponseInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsResponseInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponseFrequency$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsResponseFrequency, z.ZodTypeDef, unknown> =
        z
            .object({
                interval: CreateTeamTeamsResponseInterval$.inboundSchema,
                intervalCount: z.number(),
            })
            .transform((v) => {
                return {
                    interval: v.interval,
                    intervalCount: v.intervalCount,
                };
            });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponseFrequency
    > = z
        .object({
            interval: CreateTeamTeamsResponseInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamConcurrentBuilds$ {
    export const inboundSchema: z.ZodType<CreateTeamConcurrentBuilds, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponseFrequency$.inboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsResponseFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamConcurrentBuilds> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponseFrequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200Interval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsResponse200Interval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200Frequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200Frequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval: CreateTeamTeamsResponse200Interval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200Frequency
    > = z
        .object({
            interval: CreateTeamTeamsResponse200Interval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamMonitoring$ {
    export const inboundSchema: z.ZodType<CreateTeamMonitoring, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponse200Frequency$.inboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsResponse200Frequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamMonitoring> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z.lazy(() => CreateTeamTeamsResponse200Frequency$.outboundSchema).optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamTeamsResponse200ApplicationJSONInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONFrequency
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamPasswordProtection$ {
    export const inboundSchema: z.ZodType<CreateTeamPasswordProtection, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONFrequency$.inboundSchema)
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?: CreateTeamTeamsResponse200ApplicationJSONFrequency$.Outbound | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPasswordProtection> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONFrequency$.outboundSchema)
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency
    > = z
        .object({
            interval: CreateTeamTeamsResponse200ApplicationJSONResponseBodyInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamPreviewDeploymentSuffix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamPreviewDeploymentSuffix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamPreviewDeploymentSuffix
    > = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamSaml$ {
    export const inboundSchema: z.ZodType<CreateTeamSaml, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamSaml> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamTeamSeats$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamSeats, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamSeats> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval$ {
    export const inboundSchema = z.nativeEnum(
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval
    );
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency
    > = z
        .object({
            interval:
                CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamWebAnalytics$ {
    export const inboundSchema: z.ZodType<CreateTeamWebAnalytics, z.ZodTypeDef, unknown> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$.inboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });

    export type Outbound = {
        tier?: number | undefined;
        price: number;
        quantity: number;
        highestQuantity?: number | undefined;
        name?: string | undefined;
        hidden: boolean;
        createdAt?: number | undefined;
        disabledAt?: number | null | undefined;
        frequency?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$.Outbound
            | undefined;
        maxQuantity?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamWebAnalytics> = z
        .object({
            tier: z.number().optional(),
            price: z.number(),
            quantity: z.number(),
            highestQuantity: z.number().optional(),
            name: z.string().optional(),
            hidden: z.boolean(),
            createdAt: z.number().optional(),
            disabledAt: z.nullable(z.number()).optional(),
            frequency: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsFrequency$.outboundSchema
                )
                .optional(),
            maxQuantity: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                quantity: v.quantity,
                ...(v.highestQuantity === undefined
                    ? null
                    : { highestQuantity: v.highestQuantity }),
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.maxQuantity === undefined ? null : { maxQuantity: v.maxQuantity }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamAnalyticsUsage$ {
    export const inboundSchema: z.ZodType<CreateTeamAnalyticsUsage, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamAnalyticsUsage> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsAnalyticsUsageMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamMatrix$ {
    export const inboundSchema: z.ZodType<CreateTeamMatrix, z.ZodTypeDef, unknown> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamMatrix> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamArtifacts$ {
    export const inboundSchema: z.ZodType<CreateTeamArtifacts, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => CreateTeamMatrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamArtifacts> = z
        .object({
            matrix: z.lazy(() => CreateTeamMatrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsMatrix$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsMatrix, z.ZodTypeDef, unknown> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsMatrix> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamBandwidth$ {
    export const inboundSchema: z.ZodType<CreateTeamBandwidth, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsMatrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamBandwidth> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsMatrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponseMatrix$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsResponseMatrix, z.ZodTypeDef, unknown> = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsResponseMatrix> =
        z
            .object({
                defaultUnitPrice: z.string(),
                dimensionPrices: z.record(z.string()),
            })
            .transform((v) => {
                return {
                    defaultUnitPrice: v.defaultUnitPrice,
                    dimensionPrices: v.dimensionPrices,
                };
            });
}

/** @internal */
export namespace CreateTeamBlobStores$ {
    export const inboundSchema: z.ZodType<CreateTeamBlobStores, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponseMatrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponseMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamBlobStores> = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponseMatrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200Matrix$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsResponse200Matrix, z.ZodTypeDef, unknown> =
        z
            .object({
                defaultUnitPrice: z.string(),
                dimensionPrices: z.record(z.string()),
            })
            .transform((v) => {
                return {
                    defaultUnitPrice: v.defaultUnitPrice,
                    dimensionPrices: v.dimensionPrices,
                };
            });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200Matrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamBlobTotalAdvancedRequests$ {
    export const inboundSchema: z.ZodType<
        CreateTeamBlobTotalAdvancedRequests,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponse200Matrix$.inboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponse200Matrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamBlobTotalAdvancedRequests
    > = z
        .object({
            matrix: z.lazy(() => CreateTeamTeamsResponse200Matrix$.outboundSchema).optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamBlobTotalAvgSizeInBytes$ {
    export const inboundSchema: z.ZodType<
        CreateTeamBlobTotalAvgSizeInBytes,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONMatrix$.inboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponse200ApplicationJSONMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamBlobTotalAvgSizeInBytes
    > = z
        .object({
            matrix: z
                .lazy(() => CreateTeamTeamsResponse200ApplicationJSONMatrix$.outboundSchema)
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamBlobTotalGetResponseObjectSizeInBytes$ {
    export const inboundSchema: z.ZodType<
        CreateTeamBlobTotalGetResponseObjectSizeInBytes,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () => CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?: CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$.Outbound | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamBlobTotalGetResponseObjectSizeInBytes
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamBlobTotalSimpleRequests$ {
    export const inboundSchema: z.ZodType<
        CreateTeamBlobTotalSimpleRequests,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamBlobTotalSimpleRequests
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamBuildMinute$ {
    export const inboundSchema: z.ZodType<CreateTeamBuildMinute, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamBuildMinute> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamDataCacheRead$ {
    export const inboundSchema: z.ZodType<CreateTeamDataCacheRead, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamDataCacheRead> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheReadMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamDataCacheRevalidation$ {
    export const inboundSchema: z.ZodType<CreateTeamDataCacheRevalidation, z.ZodTypeDef, unknown> =
        z
            .object({
                matrix: z
                    .lazy(
                        () =>
                            CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$.inboundSchema
                    )
                    .optional(),
                tier: z.number().optional(),
                price: z.number(),
                batch: z.number(),
                threshold: z.number(),
                name: z.string().optional(),
                hidden: z.boolean(),
                disabledAt: z.nullable(z.number()).optional(),
                enabledAt: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                    ...(v.tier === undefined ? null : { tier: v.tier }),
                    price: v.price,
                    batch: v.batch,
                    threshold: v.threshold,
                    ...(v.name === undefined ? null : { name: v.name }),
                    hidden: v.hidden,
                    ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                    ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
                };
            });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamDataCacheRevalidation
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheRevalidationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamDataCacheWrite$ {
    export const inboundSchema: z.ZodType<CreateTeamDataCacheWrite, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamDataCacheWrite> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsDataCacheWriteMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamEdgeConfigRead$ {
    export const inboundSchema: z.ZodType<CreateTeamEdgeConfigRead, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamEdgeConfigRead> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigReadMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamEdgeConfigWrite$ {
    export const inboundSchema: z.ZodType<CreateTeamEdgeConfigWrite, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamEdgeConfigWrite> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeConfigWriteMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamEdgeFunctionExecutionUnits$ {
    export const inboundSchema: z.ZodType<
        CreateTeamEdgeFunctionExecutionUnits,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamEdgeFunctionExecutionUnits
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeFunctionExecutionUnitsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamEdgeMiddlewareInvocations$ {
    export const inboundSchema: z.ZodType<
        CreateTeamEdgeMiddlewareInvocations,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamEdgeMiddlewareInvocations
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeMiddlewareInvocationsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamEdgeRequest$ {
    export const inboundSchema: z.ZodType<CreateTeamEdgeRequest, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamEdgeRequest> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamEdgeRequestAdditionalCpuDuration$ {
    export const inboundSchema: z.ZodType<
        CreateTeamEdgeRequestAdditionalCpuDuration,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamEdgeRequestAdditionalCpuDuration
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsEdgeRequestAdditionalCpuDurationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamFastDataTransfer$ {
    export const inboundSchema: z.ZodType<CreateTeamFastDataTransfer, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamFastDataTransfer> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastDataTransferMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamFastOriginTransfer$ {
    export const inboundSchema: z.ZodType<CreateTeamFastOriginTransfer, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamFastOriginTransfer> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFastOriginTransferMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamFunctionDuration$ {
    export const inboundSchema: z.ZodType<CreateTeamFunctionDuration, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamFunctionDuration> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionDurationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamFunctionInvocation$ {
    export const inboundSchema: z.ZodType<CreateTeamFunctionInvocation, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamFunctionInvocation> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsFunctionInvocationMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamLogDrainsVolume$ {
    export const inboundSchema: z.ZodType<CreateTeamLogDrainsVolume, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamLogDrainsVolume> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsLogDrainsVolumeMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamMonitoringMetric$ {
    export const inboundSchema: z.ZodType<CreateTeamMonitoringMetric, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamMonitoringMetric> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsMonitoringMetricMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamPostgresComputeTime$ {
    export const inboundSchema: z.ZodType<CreateTeamPostgresComputeTime, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPostgresComputeTime> =
        z
            .object({
                matrix: z
                    .lazy(
                        () =>
                            CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresComputeTimeMatrix$.outboundSchema
                    )
                    .optional(),
                tier: z.number().optional(),
                price: z.number(),
                batch: z.number(),
                threshold: z.number(),
                name: z.string().optional(),
                hidden: z.boolean(),
                disabledAt: z.nullable(z.number()).optional(),
                enabledAt: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                    ...(v.tier === undefined ? null : { tier: v.tier }),
                    price: v.price,
                    batch: v.batch,
                    threshold: v.threshold,
                    ...(v.name === undefined ? null : { name: v.name }),
                    hidden: v.hidden,
                    ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                    ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
                };
            });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamPostgresDataStorage$ {
    export const inboundSchema: z.ZodType<CreateTeamPostgresDataStorage, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPostgresDataStorage> =
        z
            .object({
                matrix: z
                    .lazy(
                        () =>
                            CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataStorageMatrix$.outboundSchema
                    )
                    .optional(),
                tier: z.number().optional(),
                price: z.number(),
                batch: z.number(),
                threshold: z.number(),
                name: z.string().optional(),
                hidden: z.boolean(),
                disabledAt: z.nullable(z.number()).optional(),
                enabledAt: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                    ...(v.tier === undefined ? null : { tier: v.tier }),
                    price: v.price,
                    batch: v.batch,
                    threshold: v.threshold,
                    ...(v.name === undefined ? null : { name: v.name }),
                    hidden: v.hidden,
                    ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                    ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
                };
            });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamPostgresDataTransfer$ {
    export const inboundSchema: z.ZodType<CreateTeamPostgresDataTransfer, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPostgresDataTransfer> =
        z
            .object({
                matrix: z
                    .lazy(
                        () =>
                            CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDataTransferMatrix$.outboundSchema
                    )
                    .optional(),
                tier: z.number().optional(),
                price: z.number(),
                batch: z.number(),
                threshold: z.number(),
                name: z.string().optional(),
                hidden: z.boolean(),
                disabledAt: z.nullable(z.number()).optional(),
                enabledAt: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                    ...(v.tier === undefined ? null : { tier: v.tier }),
                    price: v.price,
                    batch: v.batch,
                    threshold: v.threshold,
                    ...(v.name === undefined ? null : { name: v.name }),
                    hidden: v.hidden,
                    ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                    ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
                };
            });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamPostgresDatabase$ {
    export const inboundSchema: z.ZodType<CreateTeamPostgresDatabase, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPostgresDatabase> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresDatabaseMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamPostgresWrittenData$ {
    export const inboundSchema: z.ZodType<CreateTeamPostgresWrittenData, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamPostgresWrittenData> =
        z
            .object({
                matrix: z
                    .lazy(
                        () =>
                            CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsPostgresWrittenDataMatrix$.outboundSchema
                    )
                    .optional(),
                tier: z.number().optional(),
                price: z.number(),
                batch: z.number(),
                threshold: z.number(),
                name: z.string().optional(),
                hidden: z.boolean(),
                disabledAt: z.nullable(z.number()).optional(),
                enabledAt: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                    ...(v.tier === undefined ? null : { tier: v.tier }),
                    price: v.price,
                    batch: v.batch,
                    threshold: v.threshold,
                    ...(v.name === undefined ? null : { name: v.name }),
                    hidden: v.hidden,
                    ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                    ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
                };
            });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamServerlessFunctionExecution$ {
    export const inboundSchema: z.ZodType<
        CreateTeamServerlessFunctionExecution,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamServerlessFunctionExecution
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsServerlessFunctionExecutionMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamSourceImages$ {
    export const inboundSchema: z.ZodType<CreateTeamSourceImages, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamSourceImages> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsSourceImagesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamStorageRedisTotalBandwidthInBytes$ {
    export const inboundSchema: z.ZodType<
        CreateTeamStorageRedisTotalBandwidthInBytes,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamStorageRedisTotalBandwidthInBytes
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalBandwidthInBytesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamStorageRedisTotalCommands$ {
    export const inboundSchema: z.ZodType<
        CreateTeamStorageRedisTotalCommands,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamStorageRedisTotalCommands
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalCommandsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamStorageRedisTotalDailyAvgStorageInBytes$ {
    export const inboundSchema: z.ZodType<
        CreateTeamStorageRedisTotalDailyAvgStorageInBytes,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamStorageRedisTotalDailyAvgStorageInBytes
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDailyAvgStorageInBytesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamStorageRedisTotalDatabases$ {
    export const inboundSchema: z.ZodType<
        CreateTeamStorageRedisTotalDatabases,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamStorageRedisTotalDatabases
    > = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsStorageRedisTotalDatabasesMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamWafOwaspExcessBytes$ {
    export const inboundSchema: z.ZodType<CreateTeamWafOwaspExcessBytes, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamWafOwaspExcessBytes> =
        z
            .object({
                matrix: z
                    .lazy(
                        () =>
                            CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspExcessBytesMatrix$.outboundSchema
                    )
                    .optional(),
                tier: z.number().optional(),
                price: z.number(),
                batch: z.number(),
                threshold: z.number(),
                name: z.string().optional(),
                hidden: z.boolean(),
                disabledAt: z.nullable(z.number()).optional(),
                enabledAt: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                    ...(v.tier === undefined ? null : { tier: v.tier }),
                    price: v.price,
                    batch: v.batch,
                    threshold: v.threshold,
                    ...(v.name === undefined ? null : { name: v.name }),
                    hidden: v.hidden,
                    ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                    ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
                };
            });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamWafOwaspRequests$ {
    export const inboundSchema: z.ZodType<CreateTeamWafOwaspRequests, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamWafOwaspRequests> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWafOwaspRequestsMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$ {
    export const inboundSchema: z.ZodType<
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });

    export type Outbound = {
        defaultUnitPrice: string;
        dimensionPrices: Record<string, string>;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix
    > = z
        .object({
            defaultUnitPrice: z.string(),
            dimensionPrices: z.record(z.string()),
        })
        .transform((v) => {
            return {
                defaultUnitPrice: v.defaultUnitPrice,
                dimensionPrices: v.dimensionPrices,
            };
        });
}

/** @internal */
export namespace CreateTeamWebAnalyticsEvent$ {
    export const inboundSchema: z.ZodType<CreateTeamWebAnalyticsEvent, z.ZodTypeDef, unknown> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$.inboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });

    export type Outbound = {
        matrix?:
            | CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$.Outbound
            | undefined;
        tier?: number | undefined;
        price: number;
        batch: number;
        threshold: number;
        name?: string | undefined;
        hidden: boolean;
        disabledAt?: number | null | undefined;
        enabledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamWebAnalyticsEvent> = z
        .object({
            matrix: z
                .lazy(
                    () =>
                        CreateTeamTeamsResponse200ApplicationJSONResponseBodyBillingInvoiceItemsWebAnalyticsEventMatrix$.outboundSchema
                )
                .optional(),
            tier: z.number().optional(),
            price: z.number(),
            batch: z.number(),
            threshold: z.number(),
            name: z.string().optional(),
            hidden: z.boolean(),
            disabledAt: z.nullable(z.number()).optional(),
            enabledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.matrix === undefined ? null : { matrix: v.matrix }),
                ...(v.tier === undefined ? null : { tier: v.tier }),
                price: v.price,
                batch: v.batch,
                threshold: v.threshold,
                ...(v.name === undefined ? null : { name: v.name }),
                hidden: v.hidden,
                ...(v.disabledAt === undefined ? null : { disabledAt: v.disabledAt }),
                ...(v.enabledAt === undefined ? null : { enabledAt: v.enabledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamInvoiceItems$ {
    export const inboundSchema: z.ZodType<CreateTeamInvoiceItems, z.ZodTypeDef, unknown> = z
        .object({
            pro: z.lazy(() => CreateTeamPro$.inboundSchema).optional(),
            enterprise: z.lazy(() => CreateTeamEnterprise$.inboundSchema).optional(),
            analytics: z.lazy(() => CreateTeamAnalytics$.inboundSchema).optional(),
            concurrentBuilds: z.lazy(() => CreateTeamConcurrentBuilds$.inboundSchema).optional(),
            monitoring: z.lazy(() => CreateTeamMonitoring$.inboundSchema).optional(),
            passwordProtection: z
                .lazy(() => CreateTeamPasswordProtection$.inboundSchema)
                .optional(),
            previewDeploymentSuffix: z
                .lazy(() => CreateTeamPreviewDeploymentSuffix$.inboundSchema)
                .optional(),
            saml: z.lazy(() => CreateTeamSaml$.inboundSchema).optional(),
            teamSeats: z.lazy(() => CreateTeamTeamSeats$.inboundSchema).optional(),
            webAnalytics: z.lazy(() => CreateTeamWebAnalytics$.inboundSchema).optional(),
            analyticsUsage: z.lazy(() => CreateTeamAnalyticsUsage$.inboundSchema).optional(),
            artifacts: z.lazy(() => CreateTeamArtifacts$.inboundSchema).optional(),
            bandwidth: z.lazy(() => CreateTeamBandwidth$.inboundSchema).optional(),
            blobStores: z.lazy(() => CreateTeamBlobStores$.inboundSchema).optional(),
            blobTotalAdvancedRequests: z
                .lazy(() => CreateTeamBlobTotalAdvancedRequests$.inboundSchema)
                .optional(),
            blobTotalAvgSizeInBytes: z
                .lazy(() => CreateTeamBlobTotalAvgSizeInBytes$.inboundSchema)
                .optional(),
            blobTotalGetResponseObjectSizeInBytes: z
                .lazy(() => CreateTeamBlobTotalGetResponseObjectSizeInBytes$.inboundSchema)
                .optional(),
            blobTotalSimpleRequests: z
                .lazy(() => CreateTeamBlobTotalSimpleRequests$.inboundSchema)
                .optional(),
            buildMinute: z.lazy(() => CreateTeamBuildMinute$.inboundSchema).optional(),
            dataCacheRead: z.lazy(() => CreateTeamDataCacheRead$.inboundSchema).optional(),
            dataCacheRevalidation: z
                .lazy(() => CreateTeamDataCacheRevalidation$.inboundSchema)
                .optional(),
            dataCacheWrite: z.lazy(() => CreateTeamDataCacheWrite$.inboundSchema).optional(),
            edgeConfigRead: z.lazy(() => CreateTeamEdgeConfigRead$.inboundSchema).optional(),
            edgeConfigWrite: z.lazy(() => CreateTeamEdgeConfigWrite$.inboundSchema).optional(),
            edgeFunctionExecutionUnits: z
                .lazy(() => CreateTeamEdgeFunctionExecutionUnits$.inboundSchema)
                .optional(),
            edgeMiddlewareInvocations: z
                .lazy(() => CreateTeamEdgeMiddlewareInvocations$.inboundSchema)
                .optional(),
            edgeRequest: z.lazy(() => CreateTeamEdgeRequest$.inboundSchema).optional(),
            edgeRequestAdditionalCpuDuration: z
                .lazy(() => CreateTeamEdgeRequestAdditionalCpuDuration$.inboundSchema)
                .optional(),
            fastDataTransfer: z.lazy(() => CreateTeamFastDataTransfer$.inboundSchema).optional(),
            fastOriginTransfer: z
                .lazy(() => CreateTeamFastOriginTransfer$.inboundSchema)
                .optional(),
            functionDuration: z.lazy(() => CreateTeamFunctionDuration$.inboundSchema).optional(),
            functionInvocation: z
                .lazy(() => CreateTeamFunctionInvocation$.inboundSchema)
                .optional(),
            logDrainsVolume: z.lazy(() => CreateTeamLogDrainsVolume$.inboundSchema).optional(),
            monitoringMetric: z.lazy(() => CreateTeamMonitoringMetric$.inboundSchema).optional(),
            postgresComputeTime: z
                .lazy(() => CreateTeamPostgresComputeTime$.inboundSchema)
                .optional(),
            postgresDataStorage: z
                .lazy(() => CreateTeamPostgresDataStorage$.inboundSchema)
                .optional(),
            postgresDataTransfer: z
                .lazy(() => CreateTeamPostgresDataTransfer$.inboundSchema)
                .optional(),
            postgresDatabase: z.lazy(() => CreateTeamPostgresDatabase$.inboundSchema).optional(),
            postgresWrittenData: z
                .lazy(() => CreateTeamPostgresWrittenData$.inboundSchema)
                .optional(),
            serverlessFunctionExecution: z
                .lazy(() => CreateTeamServerlessFunctionExecution$.inboundSchema)
                .optional(),
            sourceImages: z.lazy(() => CreateTeamSourceImages$.inboundSchema).optional(),
            storageRedisTotalBandwidthInBytes: z
                .lazy(() => CreateTeamStorageRedisTotalBandwidthInBytes$.inboundSchema)
                .optional(),
            storageRedisTotalCommands: z
                .lazy(() => CreateTeamStorageRedisTotalCommands$.inboundSchema)
                .optional(),
            storageRedisTotalDailyAvgStorageInBytes: z
                .lazy(() => CreateTeamStorageRedisTotalDailyAvgStorageInBytes$.inboundSchema)
                .optional(),
            storageRedisTotalDatabases: z
                .lazy(() => CreateTeamStorageRedisTotalDatabases$.inboundSchema)
                .optional(),
            wafOwaspExcessBytes: z
                .lazy(() => CreateTeamWafOwaspExcessBytes$.inboundSchema)
                .optional(),
            wafOwaspRequests: z.lazy(() => CreateTeamWafOwaspRequests$.inboundSchema).optional(),
            webAnalyticsEvent: z.lazy(() => CreateTeamWebAnalyticsEvent$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.pro === undefined ? null : { pro: v.pro }),
                ...(v.enterprise === undefined ? null : { enterprise: v.enterprise }),
                ...(v.analytics === undefined ? null : { analytics: v.analytics }),
                ...(v.concurrentBuilds === undefined
                    ? null
                    : { concurrentBuilds: v.concurrentBuilds }),
                ...(v.monitoring === undefined ? null : { monitoring: v.monitoring }),
                ...(v.passwordProtection === undefined
                    ? null
                    : { passwordProtection: v.passwordProtection }),
                ...(v.previewDeploymentSuffix === undefined
                    ? null
                    : { previewDeploymentSuffix: v.previewDeploymentSuffix }),
                ...(v.saml === undefined ? null : { saml: v.saml }),
                ...(v.teamSeats === undefined ? null : { teamSeats: v.teamSeats }),
                ...(v.webAnalytics === undefined ? null : { webAnalytics: v.webAnalytics }),
                ...(v.analyticsUsage === undefined ? null : { analyticsUsage: v.analyticsUsage }),
                ...(v.artifacts === undefined ? null : { artifacts: v.artifacts }),
                ...(v.bandwidth === undefined ? null : { bandwidth: v.bandwidth }),
                ...(v.blobStores === undefined ? null : { blobStores: v.blobStores }),
                ...(v.blobTotalAdvancedRequests === undefined
                    ? null
                    : { blobTotalAdvancedRequests: v.blobTotalAdvancedRequests }),
                ...(v.blobTotalAvgSizeInBytes === undefined
                    ? null
                    : { blobTotalAvgSizeInBytes: v.blobTotalAvgSizeInBytes }),
                ...(v.blobTotalGetResponseObjectSizeInBytes === undefined
                    ? null
                    : {
                          blobTotalGetResponseObjectSizeInBytes:
                              v.blobTotalGetResponseObjectSizeInBytes,
                      }),
                ...(v.blobTotalSimpleRequests === undefined
                    ? null
                    : { blobTotalSimpleRequests: v.blobTotalSimpleRequests }),
                ...(v.buildMinute === undefined ? null : { buildMinute: v.buildMinute }),
                ...(v.dataCacheRead === undefined ? null : { dataCacheRead: v.dataCacheRead }),
                ...(v.dataCacheRevalidation === undefined
                    ? null
                    : { dataCacheRevalidation: v.dataCacheRevalidation }),
                ...(v.dataCacheWrite === undefined ? null : { dataCacheWrite: v.dataCacheWrite }),
                ...(v.edgeConfigRead === undefined ? null : { edgeConfigRead: v.edgeConfigRead }),
                ...(v.edgeConfigWrite === undefined
                    ? null
                    : { edgeConfigWrite: v.edgeConfigWrite }),
                ...(v.edgeFunctionExecutionUnits === undefined
                    ? null
                    : { edgeFunctionExecutionUnits: v.edgeFunctionExecutionUnits }),
                ...(v.edgeMiddlewareInvocations === undefined
                    ? null
                    : { edgeMiddlewareInvocations: v.edgeMiddlewareInvocations }),
                ...(v.edgeRequest === undefined ? null : { edgeRequest: v.edgeRequest }),
                ...(v.edgeRequestAdditionalCpuDuration === undefined
                    ? null
                    : { edgeRequestAdditionalCpuDuration: v.edgeRequestAdditionalCpuDuration }),
                ...(v.fastDataTransfer === undefined
                    ? null
                    : { fastDataTransfer: v.fastDataTransfer }),
                ...(v.fastOriginTransfer === undefined
                    ? null
                    : { fastOriginTransfer: v.fastOriginTransfer }),
                ...(v.functionDuration === undefined
                    ? null
                    : { functionDuration: v.functionDuration }),
                ...(v.functionInvocation === undefined
                    ? null
                    : { functionInvocation: v.functionInvocation }),
                ...(v.logDrainsVolume === undefined
                    ? null
                    : { logDrainsVolume: v.logDrainsVolume }),
                ...(v.monitoringMetric === undefined
                    ? null
                    : { monitoringMetric: v.monitoringMetric }),
                ...(v.postgresComputeTime === undefined
                    ? null
                    : { postgresComputeTime: v.postgresComputeTime }),
                ...(v.postgresDataStorage === undefined
                    ? null
                    : { postgresDataStorage: v.postgresDataStorage }),
                ...(v.postgresDataTransfer === undefined
                    ? null
                    : { postgresDataTransfer: v.postgresDataTransfer }),
                ...(v.postgresDatabase === undefined
                    ? null
                    : { postgresDatabase: v.postgresDatabase }),
                ...(v.postgresWrittenData === undefined
                    ? null
                    : { postgresWrittenData: v.postgresWrittenData }),
                ...(v.serverlessFunctionExecution === undefined
                    ? null
                    : { serverlessFunctionExecution: v.serverlessFunctionExecution }),
                ...(v.sourceImages === undefined ? null : { sourceImages: v.sourceImages }),
                ...(v.storageRedisTotalBandwidthInBytes === undefined
                    ? null
                    : { storageRedisTotalBandwidthInBytes: v.storageRedisTotalBandwidthInBytes }),
                ...(v.storageRedisTotalCommands === undefined
                    ? null
                    : { storageRedisTotalCommands: v.storageRedisTotalCommands }),
                ...(v.storageRedisTotalDailyAvgStorageInBytes === undefined
                    ? null
                    : {
                          storageRedisTotalDailyAvgStorageInBytes:
                              v.storageRedisTotalDailyAvgStorageInBytes,
                      }),
                ...(v.storageRedisTotalDatabases === undefined
                    ? null
                    : { storageRedisTotalDatabases: v.storageRedisTotalDatabases }),
                ...(v.wafOwaspExcessBytes === undefined
                    ? null
                    : { wafOwaspExcessBytes: v.wafOwaspExcessBytes }),
                ...(v.wafOwaspRequests === undefined
                    ? null
                    : { wafOwaspRequests: v.wafOwaspRequests }),
                ...(v.webAnalyticsEvent === undefined
                    ? null
                    : { webAnalyticsEvent: v.webAnalyticsEvent }),
            };
        });

    export type Outbound = {
        pro?: CreateTeamPro$.Outbound | undefined;
        enterprise?: CreateTeamEnterprise$.Outbound | undefined;
        analytics?: CreateTeamAnalytics$.Outbound | undefined;
        concurrentBuilds?: CreateTeamConcurrentBuilds$.Outbound | undefined;
        monitoring?: CreateTeamMonitoring$.Outbound | undefined;
        passwordProtection?: CreateTeamPasswordProtection$.Outbound | undefined;
        previewDeploymentSuffix?: CreateTeamPreviewDeploymentSuffix$.Outbound | undefined;
        saml?: CreateTeamSaml$.Outbound | undefined;
        teamSeats?: CreateTeamTeamSeats$.Outbound | undefined;
        webAnalytics?: CreateTeamWebAnalytics$.Outbound | undefined;
        analyticsUsage?: CreateTeamAnalyticsUsage$.Outbound | undefined;
        artifacts?: CreateTeamArtifacts$.Outbound | undefined;
        bandwidth?: CreateTeamBandwidth$.Outbound | undefined;
        blobStores?: CreateTeamBlobStores$.Outbound | undefined;
        blobTotalAdvancedRequests?: CreateTeamBlobTotalAdvancedRequests$.Outbound | undefined;
        blobTotalAvgSizeInBytes?: CreateTeamBlobTotalAvgSizeInBytes$.Outbound | undefined;
        blobTotalGetResponseObjectSizeInBytes?:
            | CreateTeamBlobTotalGetResponseObjectSizeInBytes$.Outbound
            | undefined;
        blobTotalSimpleRequests?: CreateTeamBlobTotalSimpleRequests$.Outbound | undefined;
        buildMinute?: CreateTeamBuildMinute$.Outbound | undefined;
        dataCacheRead?: CreateTeamDataCacheRead$.Outbound | undefined;
        dataCacheRevalidation?: CreateTeamDataCacheRevalidation$.Outbound | undefined;
        dataCacheWrite?: CreateTeamDataCacheWrite$.Outbound | undefined;
        edgeConfigRead?: CreateTeamEdgeConfigRead$.Outbound | undefined;
        edgeConfigWrite?: CreateTeamEdgeConfigWrite$.Outbound | undefined;
        edgeFunctionExecutionUnits?: CreateTeamEdgeFunctionExecutionUnits$.Outbound | undefined;
        edgeMiddlewareInvocations?: CreateTeamEdgeMiddlewareInvocations$.Outbound | undefined;
        edgeRequest?: CreateTeamEdgeRequest$.Outbound | undefined;
        edgeRequestAdditionalCpuDuration?:
            | CreateTeamEdgeRequestAdditionalCpuDuration$.Outbound
            | undefined;
        fastDataTransfer?: CreateTeamFastDataTransfer$.Outbound | undefined;
        fastOriginTransfer?: CreateTeamFastOriginTransfer$.Outbound | undefined;
        functionDuration?: CreateTeamFunctionDuration$.Outbound | undefined;
        functionInvocation?: CreateTeamFunctionInvocation$.Outbound | undefined;
        logDrainsVolume?: CreateTeamLogDrainsVolume$.Outbound | undefined;
        monitoringMetric?: CreateTeamMonitoringMetric$.Outbound | undefined;
        postgresComputeTime?: CreateTeamPostgresComputeTime$.Outbound | undefined;
        postgresDataStorage?: CreateTeamPostgresDataStorage$.Outbound | undefined;
        postgresDataTransfer?: CreateTeamPostgresDataTransfer$.Outbound | undefined;
        postgresDatabase?: CreateTeamPostgresDatabase$.Outbound | undefined;
        postgresWrittenData?: CreateTeamPostgresWrittenData$.Outbound | undefined;
        serverlessFunctionExecution?: CreateTeamServerlessFunctionExecution$.Outbound | undefined;
        sourceImages?: CreateTeamSourceImages$.Outbound | undefined;
        storageRedisTotalBandwidthInBytes?:
            | CreateTeamStorageRedisTotalBandwidthInBytes$.Outbound
            | undefined;
        storageRedisTotalCommands?: CreateTeamStorageRedisTotalCommands$.Outbound | undefined;
        storageRedisTotalDailyAvgStorageInBytes?:
            | CreateTeamStorageRedisTotalDailyAvgStorageInBytes$.Outbound
            | undefined;
        storageRedisTotalDatabases?: CreateTeamStorageRedisTotalDatabases$.Outbound | undefined;
        wafOwaspExcessBytes?: CreateTeamWafOwaspExcessBytes$.Outbound | undefined;
        wafOwaspRequests?: CreateTeamWafOwaspRequests$.Outbound | undefined;
        webAnalyticsEvent?: CreateTeamWebAnalyticsEvent$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamInvoiceItems> = z
        .object({
            pro: z.lazy(() => CreateTeamPro$.outboundSchema).optional(),
            enterprise: z.lazy(() => CreateTeamEnterprise$.outboundSchema).optional(),
            analytics: z.lazy(() => CreateTeamAnalytics$.outboundSchema).optional(),
            concurrentBuilds: z.lazy(() => CreateTeamConcurrentBuilds$.outboundSchema).optional(),
            monitoring: z.lazy(() => CreateTeamMonitoring$.outboundSchema).optional(),
            passwordProtection: z
                .lazy(() => CreateTeamPasswordProtection$.outboundSchema)
                .optional(),
            previewDeploymentSuffix: z
                .lazy(() => CreateTeamPreviewDeploymentSuffix$.outboundSchema)
                .optional(),
            saml: z.lazy(() => CreateTeamSaml$.outboundSchema).optional(),
            teamSeats: z.lazy(() => CreateTeamTeamSeats$.outboundSchema).optional(),
            webAnalytics: z.lazy(() => CreateTeamWebAnalytics$.outboundSchema).optional(),
            analyticsUsage: z.lazy(() => CreateTeamAnalyticsUsage$.outboundSchema).optional(),
            artifacts: z.lazy(() => CreateTeamArtifacts$.outboundSchema).optional(),
            bandwidth: z.lazy(() => CreateTeamBandwidth$.outboundSchema).optional(),
            blobStores: z.lazy(() => CreateTeamBlobStores$.outboundSchema).optional(),
            blobTotalAdvancedRequests: z
                .lazy(() => CreateTeamBlobTotalAdvancedRequests$.outboundSchema)
                .optional(),
            blobTotalAvgSizeInBytes: z
                .lazy(() => CreateTeamBlobTotalAvgSizeInBytes$.outboundSchema)
                .optional(),
            blobTotalGetResponseObjectSizeInBytes: z
                .lazy(() => CreateTeamBlobTotalGetResponseObjectSizeInBytes$.outboundSchema)
                .optional(),
            blobTotalSimpleRequests: z
                .lazy(() => CreateTeamBlobTotalSimpleRequests$.outboundSchema)
                .optional(),
            buildMinute: z.lazy(() => CreateTeamBuildMinute$.outboundSchema).optional(),
            dataCacheRead: z.lazy(() => CreateTeamDataCacheRead$.outboundSchema).optional(),
            dataCacheRevalidation: z
                .lazy(() => CreateTeamDataCacheRevalidation$.outboundSchema)
                .optional(),
            dataCacheWrite: z.lazy(() => CreateTeamDataCacheWrite$.outboundSchema).optional(),
            edgeConfigRead: z.lazy(() => CreateTeamEdgeConfigRead$.outboundSchema).optional(),
            edgeConfigWrite: z.lazy(() => CreateTeamEdgeConfigWrite$.outboundSchema).optional(),
            edgeFunctionExecutionUnits: z
                .lazy(() => CreateTeamEdgeFunctionExecutionUnits$.outboundSchema)
                .optional(),
            edgeMiddlewareInvocations: z
                .lazy(() => CreateTeamEdgeMiddlewareInvocations$.outboundSchema)
                .optional(),
            edgeRequest: z.lazy(() => CreateTeamEdgeRequest$.outboundSchema).optional(),
            edgeRequestAdditionalCpuDuration: z
                .lazy(() => CreateTeamEdgeRequestAdditionalCpuDuration$.outboundSchema)
                .optional(),
            fastDataTransfer: z.lazy(() => CreateTeamFastDataTransfer$.outboundSchema).optional(),
            fastOriginTransfer: z
                .lazy(() => CreateTeamFastOriginTransfer$.outboundSchema)
                .optional(),
            functionDuration: z.lazy(() => CreateTeamFunctionDuration$.outboundSchema).optional(),
            functionInvocation: z
                .lazy(() => CreateTeamFunctionInvocation$.outboundSchema)
                .optional(),
            logDrainsVolume: z.lazy(() => CreateTeamLogDrainsVolume$.outboundSchema).optional(),
            monitoringMetric: z.lazy(() => CreateTeamMonitoringMetric$.outboundSchema).optional(),
            postgresComputeTime: z
                .lazy(() => CreateTeamPostgresComputeTime$.outboundSchema)
                .optional(),
            postgresDataStorage: z
                .lazy(() => CreateTeamPostgresDataStorage$.outboundSchema)
                .optional(),
            postgresDataTransfer: z
                .lazy(() => CreateTeamPostgresDataTransfer$.outboundSchema)
                .optional(),
            postgresDatabase: z.lazy(() => CreateTeamPostgresDatabase$.outboundSchema).optional(),
            postgresWrittenData: z
                .lazy(() => CreateTeamPostgresWrittenData$.outboundSchema)
                .optional(),
            serverlessFunctionExecution: z
                .lazy(() => CreateTeamServerlessFunctionExecution$.outboundSchema)
                .optional(),
            sourceImages: z.lazy(() => CreateTeamSourceImages$.outboundSchema).optional(),
            storageRedisTotalBandwidthInBytes: z
                .lazy(() => CreateTeamStorageRedisTotalBandwidthInBytes$.outboundSchema)
                .optional(),
            storageRedisTotalCommands: z
                .lazy(() => CreateTeamStorageRedisTotalCommands$.outboundSchema)
                .optional(),
            storageRedisTotalDailyAvgStorageInBytes: z
                .lazy(() => CreateTeamStorageRedisTotalDailyAvgStorageInBytes$.outboundSchema)
                .optional(),
            storageRedisTotalDatabases: z
                .lazy(() => CreateTeamStorageRedisTotalDatabases$.outboundSchema)
                .optional(),
            wafOwaspExcessBytes: z
                .lazy(() => CreateTeamWafOwaspExcessBytes$.outboundSchema)
                .optional(),
            wafOwaspRequests: z.lazy(() => CreateTeamWafOwaspRequests$.outboundSchema).optional(),
            webAnalyticsEvent: z.lazy(() => CreateTeamWebAnalyticsEvent$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.pro === undefined ? null : { pro: v.pro }),
                ...(v.enterprise === undefined ? null : { enterprise: v.enterprise }),
                ...(v.analytics === undefined ? null : { analytics: v.analytics }),
                ...(v.concurrentBuilds === undefined
                    ? null
                    : { concurrentBuilds: v.concurrentBuilds }),
                ...(v.monitoring === undefined ? null : { monitoring: v.monitoring }),
                ...(v.passwordProtection === undefined
                    ? null
                    : { passwordProtection: v.passwordProtection }),
                ...(v.previewDeploymentSuffix === undefined
                    ? null
                    : { previewDeploymentSuffix: v.previewDeploymentSuffix }),
                ...(v.saml === undefined ? null : { saml: v.saml }),
                ...(v.teamSeats === undefined ? null : { teamSeats: v.teamSeats }),
                ...(v.webAnalytics === undefined ? null : { webAnalytics: v.webAnalytics }),
                ...(v.analyticsUsage === undefined ? null : { analyticsUsage: v.analyticsUsage }),
                ...(v.artifacts === undefined ? null : { artifacts: v.artifacts }),
                ...(v.bandwidth === undefined ? null : { bandwidth: v.bandwidth }),
                ...(v.blobStores === undefined ? null : { blobStores: v.blobStores }),
                ...(v.blobTotalAdvancedRequests === undefined
                    ? null
                    : { blobTotalAdvancedRequests: v.blobTotalAdvancedRequests }),
                ...(v.blobTotalAvgSizeInBytes === undefined
                    ? null
                    : { blobTotalAvgSizeInBytes: v.blobTotalAvgSizeInBytes }),
                ...(v.blobTotalGetResponseObjectSizeInBytes === undefined
                    ? null
                    : {
                          blobTotalGetResponseObjectSizeInBytes:
                              v.blobTotalGetResponseObjectSizeInBytes,
                      }),
                ...(v.blobTotalSimpleRequests === undefined
                    ? null
                    : { blobTotalSimpleRequests: v.blobTotalSimpleRequests }),
                ...(v.buildMinute === undefined ? null : { buildMinute: v.buildMinute }),
                ...(v.dataCacheRead === undefined ? null : { dataCacheRead: v.dataCacheRead }),
                ...(v.dataCacheRevalidation === undefined
                    ? null
                    : { dataCacheRevalidation: v.dataCacheRevalidation }),
                ...(v.dataCacheWrite === undefined ? null : { dataCacheWrite: v.dataCacheWrite }),
                ...(v.edgeConfigRead === undefined ? null : { edgeConfigRead: v.edgeConfigRead }),
                ...(v.edgeConfigWrite === undefined
                    ? null
                    : { edgeConfigWrite: v.edgeConfigWrite }),
                ...(v.edgeFunctionExecutionUnits === undefined
                    ? null
                    : { edgeFunctionExecutionUnits: v.edgeFunctionExecutionUnits }),
                ...(v.edgeMiddlewareInvocations === undefined
                    ? null
                    : { edgeMiddlewareInvocations: v.edgeMiddlewareInvocations }),
                ...(v.edgeRequest === undefined ? null : { edgeRequest: v.edgeRequest }),
                ...(v.edgeRequestAdditionalCpuDuration === undefined
                    ? null
                    : { edgeRequestAdditionalCpuDuration: v.edgeRequestAdditionalCpuDuration }),
                ...(v.fastDataTransfer === undefined
                    ? null
                    : { fastDataTransfer: v.fastDataTransfer }),
                ...(v.fastOriginTransfer === undefined
                    ? null
                    : { fastOriginTransfer: v.fastOriginTransfer }),
                ...(v.functionDuration === undefined
                    ? null
                    : { functionDuration: v.functionDuration }),
                ...(v.functionInvocation === undefined
                    ? null
                    : { functionInvocation: v.functionInvocation }),
                ...(v.logDrainsVolume === undefined
                    ? null
                    : { logDrainsVolume: v.logDrainsVolume }),
                ...(v.monitoringMetric === undefined
                    ? null
                    : { monitoringMetric: v.monitoringMetric }),
                ...(v.postgresComputeTime === undefined
                    ? null
                    : { postgresComputeTime: v.postgresComputeTime }),
                ...(v.postgresDataStorage === undefined
                    ? null
                    : { postgresDataStorage: v.postgresDataStorage }),
                ...(v.postgresDataTransfer === undefined
                    ? null
                    : { postgresDataTransfer: v.postgresDataTransfer }),
                ...(v.postgresDatabase === undefined
                    ? null
                    : { postgresDatabase: v.postgresDatabase }),
                ...(v.postgresWrittenData === undefined
                    ? null
                    : { postgresWrittenData: v.postgresWrittenData }),
                ...(v.serverlessFunctionExecution === undefined
                    ? null
                    : { serverlessFunctionExecution: v.serverlessFunctionExecution }),
                ...(v.sourceImages === undefined ? null : { sourceImages: v.sourceImages }),
                ...(v.storageRedisTotalBandwidthInBytes === undefined
                    ? null
                    : { storageRedisTotalBandwidthInBytes: v.storageRedisTotalBandwidthInBytes }),
                ...(v.storageRedisTotalCommands === undefined
                    ? null
                    : { storageRedisTotalCommands: v.storageRedisTotalCommands }),
                ...(v.storageRedisTotalDailyAvgStorageInBytes === undefined
                    ? null
                    : {
                          storageRedisTotalDailyAvgStorageInBytes:
                              v.storageRedisTotalDailyAvgStorageInBytes,
                      }),
                ...(v.storageRedisTotalDatabases === undefined
                    ? null
                    : { storageRedisTotalDatabases: v.storageRedisTotalDatabases }),
                ...(v.wafOwaspExcessBytes === undefined
                    ? null
                    : { wafOwaspExcessBytes: v.wafOwaspExcessBytes }),
                ...(v.wafOwaspRequests === undefined
                    ? null
                    : { wafOwaspRequests: v.wafOwaspRequests }),
                ...(v.webAnalyticsEvent === undefined
                    ? null
                    : { webAnalyticsEvent: v.webAnalyticsEvent }),
            };
        });
}

/** @internal */
export namespace CreateTeamInvoiceSettings$ {
    export const inboundSchema: z.ZodType<CreateTeamInvoiceSettings, z.ZodTypeDef, unknown> = z
        .object({
            footer: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.footer === undefined ? null : { footer: v.footer }),
            };
        });

    export type Outbound = {
        footer?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamInvoiceSettings> = z
        .object({
            footer: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.footer === undefined ? null : { footer: v.footer }),
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsTrial$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsTrial, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsTrial> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace CreateTeamTeamsPeriod$ {
    export const inboundSchema: z.ZodType<CreateTeamTeamsPeriod, z.ZodTypeDef, unknown> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });

    export type Outbound = {
        start: number;
        end: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamTeamsPeriod> = z
        .object({
            start: z.number(),
            end: z.number(),
        })
        .transform((v) => {
            return {
                start: v.start,
                end: v.end,
            };
        });
}

/** @internal */
export namespace CreateTeamInterval$ {
    export const inboundSchema = z.nativeEnum(CreateTeamInterval);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamFrequency$ {
    export const inboundSchema: z.ZodType<CreateTeamFrequency, z.ZodTypeDef, unknown> = z
        .object({
            interval: CreateTeamInterval$.inboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });

    export type Outbound = {
        interval: string;
        intervalCount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamFrequency> = z
        .object({
            interval: CreateTeamInterval$.outboundSchema,
            intervalCount: z.number(),
        })
        .transform((v) => {
            return {
                interval: v.interval,
                intervalCount: v.intervalCount,
            };
        });
}

/** @internal */
export namespace CreateTeamDuration$ {
    export const inboundSchema = z.nativeEnum(CreateTeamDuration);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamCoupon$ {
    export const inboundSchema: z.ZodType<CreateTeamCoupon, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            name: z.nullable(z.string()),
            amountOff: z.nullable(z.number()),
            percentageOff: z.nullable(z.number()),
            durationInMonths: z.nullable(z.number()),
            duration: CreateTeamDuration$.inboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                amountOff: v.amountOff,
                percentageOff: v.percentageOff,
                durationInMonths: v.durationInMonths,
                duration: v.duration,
            };
        });

    export type Outbound = {
        id: string;
        name: string | null;
        amountOff: number | null;
        percentageOff: number | null;
        durationInMonths: number | null;
        duration: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamCoupon> = z
        .object({
            id: z.string(),
            name: z.nullable(z.string()),
            amountOff: z.nullable(z.number()),
            percentageOff: z.nullable(z.number()),
            durationInMonths: z.nullable(z.number()),
            duration: CreateTeamDuration$.outboundSchema,
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                amountOff: v.amountOff,
                percentageOff: v.percentageOff,
                durationInMonths: v.durationInMonths,
                duration: v.duration,
            };
        });
}

/** @internal */
export namespace CreateTeamDiscount$ {
    export const inboundSchema: z.ZodType<CreateTeamDiscount, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            coupon: z.lazy(() => CreateTeamCoupon$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                coupon: v.coupon,
            };
        });

    export type Outbound = {
        id: string;
        coupon: CreateTeamCoupon$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamDiscount> = z
        .object({
            id: z.string(),
            coupon: z.lazy(() => CreateTeamCoupon$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                coupon: v.coupon,
            };
        });
}

/** @internal */
export namespace CreateTeamItems$ {
    export const inboundSchema: z.ZodType<CreateTeamItems, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            priceId: z.string(),
            productId: z.string(),
            amount: z.number(),
            quantity: z.number(),
        })
        .transform((v) => {
            return {
                id: v.id,
                priceId: v.priceId,
                productId: v.productId,
                amount: v.amount,
                quantity: v.quantity,
            };
        });

    export type Outbound = {
        id: string;
        priceId: string;
        productId: string;
        amount: number;
        quantity: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamItems> = z
        .object({
            id: z.string(),
            priceId: z.string(),
            productId: z.string(),
            amount: z.number(),
            quantity: z.number(),
        })
        .transform((v) => {
            return {
                id: v.id,
                priceId: v.priceId,
                productId: v.productId,
                amount: v.amount,
                quantity: v.quantity,
            };
        });
}

/** @internal */
export namespace CreateTeamSubscriptions$ {
    export const inboundSchema: z.ZodType<CreateTeamSubscriptions, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            trial: z.nullable(z.lazy(() => CreateTeamTeamsTrial$.inboundSchema)),
            period: z.lazy(() => CreateTeamTeamsPeriod$.inboundSchema),
            frequency: z.lazy(() => CreateTeamFrequency$.inboundSchema),
            discount: z.nullable(z.lazy(() => CreateTeamDiscount$.inboundSchema)),
            items: z.array(z.lazy(() => CreateTeamItems$.inboundSchema)),
        })
        .transform((v) => {
            return {
                id: v.id,
                trial: v.trial,
                period: v.period,
                frequency: v.frequency,
                discount: v.discount,
                items: v.items,
            };
        });

    export type Outbound = {
        id: string;
        trial: CreateTeamTeamsTrial$.Outbound | null;
        period: CreateTeamTeamsPeriod$.Outbound;
        frequency: CreateTeamFrequency$.Outbound;
        discount: CreateTeamDiscount$.Outbound | null;
        items: Array<CreateTeamItems$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamSubscriptions> = z
        .object({
            id: z.string(),
            trial: z.nullable(z.lazy(() => CreateTeamTeamsTrial$.outboundSchema)),
            period: z.lazy(() => CreateTeamTeamsPeriod$.outboundSchema),
            frequency: z.lazy(() => CreateTeamFrequency$.outboundSchema),
            discount: z.nullable(z.lazy(() => CreateTeamDiscount$.outboundSchema)),
            items: z.array(z.lazy(() => CreateTeamItems$.outboundSchema)),
        })
        .transform((v) => {
            return {
                id: v.id,
                trial: v.trial,
                period: v.period,
                frequency: v.frequency,
                discount: v.discount,
                items: v.items,
            };
        });
}

/** @internal */
export namespace CreateTeamControls$ {
    export const inboundSchema: z.ZodType<CreateTeamControls, z.ZodTypeDef, unknown> = z
        .object({
            analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
            analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.analyticsSampleRateInPercent === undefined
                    ? null
                    : { analyticsSampleRateInPercent: v.analyticsSampleRateInPercent }),
                ...(v.analyticsSpendLimitInDollars === undefined
                    ? null
                    : { analyticsSpendLimitInDollars: v.analyticsSpendLimitInDollars }),
            };
        });

    export type Outbound = {
        analyticsSampleRateInPercent?: number | null | undefined;
        analyticsSpendLimitInDollars?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamControls> = z
        .object({
            analyticsSampleRateInPercent: z.nullable(z.number()).optional(),
            analyticsSpendLimitInDollars: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.analyticsSampleRateInPercent === undefined
                    ? null
                    : { analyticsSampleRateInPercent: v.analyticsSampleRateInPercent }),
                ...(v.analyticsSpendLimitInDollars === undefined
                    ? null
                    : { analyticsSpendLimitInDollars: v.analyticsSpendLimitInDollars }),
            };
        });
}

/** @internal */
export namespace CreateTeamStatus$ {
    export const inboundSchema = z.nativeEnum(CreateTeamStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamPricingExperiment$ {
    export const inboundSchema = z.nativeEnum(CreateTeamPricingExperiment);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateTeamBilling$ {
    export const inboundSchema: z.ZodType<CreateTeamBilling, z.ZodTypeDef, unknown> = z
        .object({
            currency: CreateTeamCurrency$.inboundSchema.optional(),
            cancelation: z.nullable(z.number()).optional(),
            period: z.nullable(z.lazy(() => CreateTeamPeriod$.inboundSchema)),
            contract: z.nullable(z.lazy(() => CreateTeamContract$.inboundSchema)).optional(),
            plan: CreateTeamPlan$.inboundSchema,
            planIteration: z.string().optional(),
            platform: CreateTeamPlatform$.inboundSchema.optional(),
            orbCustomerId: z.string().optional(),
            syncedAt: z.number().optional(),
            programType: CreateTeamProgramType$.inboundSchema.optional(),
            trial: z.nullable(z.lazy(() => CreateTeamTrial$.inboundSchema)).optional(),
            email: z.nullable(z.string()).optional(),
            tax: z.nullable(z.lazy(() => CreateTeamTax$.inboundSchema)).optional(),
            language: z.nullable(z.string()).optional(),
            address: z.nullable(z.lazy(() => CreateTeamAddress$.inboundSchema)).optional(),
            name: z.nullable(z.string()).optional(),
            invoiceItems: z
                .nullable(z.lazy(() => CreateTeamInvoiceItems$.inboundSchema))
                .optional(),
            invoiceSettings: z.lazy(() => CreateTeamInvoiceSettings$.inboundSchema).optional(),
            subscriptions: z
                .nullable(z.array(z.lazy(() => CreateTeamSubscriptions$.inboundSchema)))
                .optional(),
            controls: z.nullable(z.lazy(() => CreateTeamControls$.inboundSchema)).optional(),
            purchaseOrder: z.nullable(z.string()).optional(),
            status: CreateTeamStatus$.inboundSchema.optional(),
            pricingExperiment: CreateTeamPricingExperiment$.inboundSchema.optional(),
            orbMigrationScheduledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.cancelation === undefined ? null : { cancelation: v.cancelation }),
                period: v.period,
                ...(v.contract === undefined ? null : { contract: v.contract }),
                plan: v.plan,
                ...(v.planIteration === undefined ? null : { planIteration: v.planIteration }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.orbCustomerId === undefined ? null : { orbCustomerId: v.orbCustomerId }),
                ...(v.syncedAt === undefined ? null : { syncedAt: v.syncedAt }),
                ...(v.programType === undefined ? null : { programType: v.programType }),
                ...(v.trial === undefined ? null : { trial: v.trial }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.invoiceItems === undefined ? null : { invoiceItems: v.invoiceItems }),
                ...(v.invoiceSettings === undefined
                    ? null
                    : { invoiceSettings: v.invoiceSettings }),
                ...(v.subscriptions === undefined ? null : { subscriptions: v.subscriptions }),
                ...(v.controls === undefined ? null : { controls: v.controls }),
                ...(v.purchaseOrder === undefined ? null : { purchaseOrder: v.purchaseOrder }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.pricingExperiment === undefined
                    ? null
                    : { pricingExperiment: v.pricingExperiment }),
                ...(v.orbMigrationScheduledAt === undefined
                    ? null
                    : { orbMigrationScheduledAt: v.orbMigrationScheduledAt }),
            };
        });

    export type Outbound = {
        currency?: string | undefined;
        cancelation?: number | null | undefined;
        period: CreateTeamPeriod$.Outbound | null;
        contract?: CreateTeamContract$.Outbound | null | undefined;
        plan: string;
        planIteration?: string | undefined;
        platform?: string | undefined;
        orbCustomerId?: string | undefined;
        syncedAt?: number | undefined;
        programType?: string | undefined;
        trial?: CreateTeamTrial$.Outbound | null | undefined;
        email?: string | null | undefined;
        tax?: CreateTeamTax$.Outbound | null | undefined;
        language?: string | null | undefined;
        address?: CreateTeamAddress$.Outbound | null | undefined;
        name?: string | null | undefined;
        invoiceItems?: CreateTeamInvoiceItems$.Outbound | null | undefined;
        invoiceSettings?: CreateTeamInvoiceSettings$.Outbound | undefined;
        subscriptions?: Array<CreateTeamSubscriptions$.Outbound> | null | undefined;
        controls?: CreateTeamControls$.Outbound | null | undefined;
        purchaseOrder?: string | null | undefined;
        status?: string | undefined;
        pricingExperiment?: string | undefined;
        orbMigrationScheduledAt?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamBilling> = z
        .object({
            currency: CreateTeamCurrency$.outboundSchema.optional(),
            cancelation: z.nullable(z.number()).optional(),
            period: z.nullable(z.lazy(() => CreateTeamPeriod$.outboundSchema)),
            contract: z.nullable(z.lazy(() => CreateTeamContract$.outboundSchema)).optional(),
            plan: CreateTeamPlan$.outboundSchema,
            planIteration: z.string().optional(),
            platform: CreateTeamPlatform$.outboundSchema.optional(),
            orbCustomerId: z.string().optional(),
            syncedAt: z.number().optional(),
            programType: CreateTeamProgramType$.outboundSchema.optional(),
            trial: z.nullable(z.lazy(() => CreateTeamTrial$.outboundSchema)).optional(),
            email: z.nullable(z.string()).optional(),
            tax: z.nullable(z.lazy(() => CreateTeamTax$.outboundSchema)).optional(),
            language: z.nullable(z.string()).optional(),
            address: z.nullable(z.lazy(() => CreateTeamAddress$.outboundSchema)).optional(),
            name: z.nullable(z.string()).optional(),
            invoiceItems: z
                .nullable(z.lazy(() => CreateTeamInvoiceItems$.outboundSchema))
                .optional(),
            invoiceSettings: z.lazy(() => CreateTeamInvoiceSettings$.outboundSchema).optional(),
            subscriptions: z
                .nullable(z.array(z.lazy(() => CreateTeamSubscriptions$.outboundSchema)))
                .optional(),
            controls: z.nullable(z.lazy(() => CreateTeamControls$.outboundSchema)).optional(),
            purchaseOrder: z.nullable(z.string()).optional(),
            status: CreateTeamStatus$.outboundSchema.optional(),
            pricingExperiment: CreateTeamPricingExperiment$.outboundSchema.optional(),
            orbMigrationScheduledAt: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.cancelation === undefined ? null : { cancelation: v.cancelation }),
                period: v.period,
                ...(v.contract === undefined ? null : { contract: v.contract }),
                plan: v.plan,
                ...(v.planIteration === undefined ? null : { planIteration: v.planIteration }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.orbCustomerId === undefined ? null : { orbCustomerId: v.orbCustomerId }),
                ...(v.syncedAt === undefined ? null : { syncedAt: v.syncedAt }),
                ...(v.programType === undefined ? null : { programType: v.programType }),
                ...(v.trial === undefined ? null : { trial: v.trial }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.invoiceItems === undefined ? null : { invoiceItems: v.invoiceItems }),
                ...(v.invoiceSettings === undefined
                    ? null
                    : { invoiceSettings: v.invoiceSettings }),
                ...(v.subscriptions === undefined ? null : { subscriptions: v.subscriptions }),
                ...(v.controls === undefined ? null : { controls: v.controls }),
                ...(v.purchaseOrder === undefined ? null : { purchaseOrder: v.purchaseOrder }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.pricingExperiment === undefined
                    ? null
                    : { pricingExperiment: v.pricingExperiment }),
                ...(v.orbMigrationScheduledAt === undefined
                    ? null
                    : { orbMigrationScheduledAt: v.orbMigrationScheduledAt }),
            };
        });
}

/** @internal */
export namespace CreateTeamResponseBody$ {
    export const inboundSchema: z.ZodType<CreateTeamResponseBody, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string(),
            slug: z.string(),
            billing: z.lazy(() => CreateTeamBilling$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                slug: v.slug,
                billing: v.billing,
            };
        });

    export type Outbound = {
        id: string;
        slug: string;
        billing: CreateTeamBilling$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateTeamResponseBody> = z
        .object({
            id: z.string(),
            slug: z.string(),
            billing: z.lazy(() => CreateTeamBilling$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                slug: v.slug,
                billing: v.billing,
            };
        });
}
