/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type RemoveRecordRequest = {
    domain: string;
    recordId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};

/**
 * Successful response by removing the specified DNS record.
 */
export type RemoveRecordResponseBody = {};

/** @internal */
export namespace RemoveRecordRequest$ {
    export const inboundSchema: z.ZodType<RemoveRecordRequest, z.ZodTypeDef, unknown> = z.object({
        domain: z.string(),
        recordId: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
    });

    export type Outbound = {
        domain: string;
        recordId: string;
        teamId?: string | undefined;
        slug?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoveRecordRequest> = z.object({
        domain: z.string(),
        recordId: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
    });
}

/** @internal */
export namespace RemoveRecordResponseBody$ {
    export const inboundSchema: z.ZodType<RemoveRecordResponseBody, z.ZodTypeDef, unknown> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RemoveRecordResponseBody> =
        z.object({});
}
