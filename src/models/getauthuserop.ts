/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    AuthUser,
    AuthUser$inboundSchema,
    AuthUser$Outbound,
    AuthUser$outboundSchema,
} from "./authuser.js";
import {
    AuthUserLimited,
    AuthUserLimited$inboundSchema,
    AuthUserLimited$Outbound,
    AuthUserLimited$outboundSchema,
} from "./authuserlimited.js";
import * as z from "zod";

export type GetAuthUserUser = AuthUserLimited | AuthUser;

/**
 * Successful response.
 */
export type GetAuthUserResponseBody = {
    user: AuthUserLimited | AuthUser;
};

/** @internal */
export const GetAuthUserUser$inboundSchema: z.ZodType<GetAuthUserUser, z.ZodTypeDef, unknown> =
    z.union([AuthUserLimited$inboundSchema, AuthUser$inboundSchema]);

/** @internal */
export type GetAuthUserUser$Outbound = AuthUserLimited$Outbound | AuthUser$Outbound;

/** @internal */
export const GetAuthUserUser$outboundSchema: z.ZodType<
    GetAuthUserUser$Outbound,
    z.ZodTypeDef,
    GetAuthUserUser
> = z.union([AuthUserLimited$outboundSchema, AuthUser$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAuthUserUser$ {
    /** @deprecated use `GetAuthUserUser$inboundSchema` instead. */
    export const inboundSchema = GetAuthUserUser$inboundSchema;
    /** @deprecated use `GetAuthUserUser$outboundSchema` instead. */
    export const outboundSchema = GetAuthUserUser$outboundSchema;
    /** @deprecated use `GetAuthUserUser$Outbound` instead. */
    export type Outbound = GetAuthUserUser$Outbound;
}

/** @internal */
export const GetAuthUserResponseBody$inboundSchema: z.ZodType<
    GetAuthUserResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    user: z.union([AuthUserLimited$inboundSchema, AuthUser$inboundSchema]),
});

/** @internal */
export type GetAuthUserResponseBody$Outbound = {
    user: AuthUserLimited$Outbound | AuthUser$Outbound;
};

/** @internal */
export const GetAuthUserResponseBody$outboundSchema: z.ZodType<
    GetAuthUserResponseBody$Outbound,
    z.ZodTypeDef,
    GetAuthUserResponseBody
> = z.object({
    user: z.union([AuthUserLimited$outboundSchema, AuthUser$outboundSchema]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAuthUserResponseBody$ {
    /** @deprecated use `GetAuthUserResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetAuthUserResponseBody$inboundSchema;
    /** @deprecated use `GetAuthUserResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetAuthUserResponseBody$outboundSchema;
    /** @deprecated use `GetAuthUserResponseBody$Outbound` instead. */
    export type Outbound = GetAuthUserResponseBody$Outbound;
}
