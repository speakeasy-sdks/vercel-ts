/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type GetProjectEnvRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * The unique ID for the environment variable to get the decrypted value.
     */
    id: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};

export enum GetProjectEnvTargetProjects2 {
    Production = "production",
    Preview = "preview",
    Development = "development",
}

export enum GetProjectEnvTargetProjects1 {
    Production = "production",
    Preview = "preview",
    Development = "development",
}

export type GetProjectEnvResponseBodyProjectsTarget =
    | Array<GetProjectEnvTargetProjects1>
    | GetProjectEnvTargetProjects2;

export enum GetProjectEnvResponseBodyProjectsType {
    Secret = "secret",
    System = "system",
    Encrypted = "encrypted",
    Plain = "plain",
    Sensitive = "sensitive",
}

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type {
    IntegrationStoreSecret = "integration-store-secret",
}

export type GetProjectEnvContentHintProjects14 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type {
    PostgresUrlNoSsl = "postgres-url-no-ssl",
}

export type GetProjectEnvContentHintProjects13 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type {
    PostgresDatabase = "postgres-database",
}

export type GetProjectEnvContentHintProjects12 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type {
    PostgresPassword = "postgres-password",
}

export type GetProjectEnvContentHintProjects11 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type {
    PostgresHost = "postgres-host",
}

export type GetProjectEnvContentHintProjects10 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type {
    PostgresUser = "postgres-user",
}

export type GetProjectEnvContentHintProjects9 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type {
    PostgresPrismaUrl = "postgres-prisma-url",
}

export type GetProjectEnvContentHintProjects8 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type {
    PostgresUrlNonPooling = "postgres-url-non-pooling",
}

export type GetProjectEnvContentHintProjects7 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type {
    PostgresUrl = "postgres-url",
}

export type GetProjectEnvContentHintProjects6 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type {
    BlobReadWriteToken = "blob-read-write-token",
}

export type GetProjectEnvContentHintProjects5 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type {
    RedisRestApiReadOnlyToken = "redis-rest-api-read-only-token",
}

export type GetProjectEnvContentHintProjects4 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type {
    RedisRestApiToken = "redis-rest-api-token",
}

export type GetProjectEnvContentHintProjects3 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type {
    RedisRestApiUrl = "redis-rest-api-url",
}

export type GetProjectEnvContentHintProjects2 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type {
    RedisUrl = "redis-url",
}

export type GetProjectEnvContentHintProjects1 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type;
    storeId: string;
};

export type GetProjectEnvResponseBodyProjectsContentHint =
    | GetProjectEnvContentHintProjects1
    | GetProjectEnvContentHintProjects2
    | GetProjectEnvContentHintProjects3
    | GetProjectEnvContentHintProjects4
    | GetProjectEnvContentHintProjects5
    | GetProjectEnvContentHintProjects6
    | GetProjectEnvContentHintProjects7
    | GetProjectEnvContentHintProjects8
    | GetProjectEnvContentHintProjects9
    | GetProjectEnvContentHintProjects10
    | GetProjectEnvContentHintProjects11
    | GetProjectEnvContentHintProjects12
    | GetProjectEnvContentHintProjects13
    | GetProjectEnvContentHintProjects14;

export enum GetProjectEnvResponseBodyProjectsResponse200Type {
    FlagsSecret = "flags-secret",
}

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyProjectsInternalContentHint = {
    type: GetProjectEnvResponseBodyProjectsResponse200Type;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};

export type GetProjectEnvResponseBody2 = {
    target?: Array<GetProjectEnvTargetProjects1> | GetProjectEnvTargetProjects2 | undefined;
    type: GetProjectEnvResponseBodyProjectsType;
    id?: string | undefined;
    key: string;
    value: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | GetProjectEnvContentHintProjects1
        | GetProjectEnvContentHintProjects2
        | GetProjectEnvContentHintProjects3
        | GetProjectEnvContentHintProjects4
        | GetProjectEnvContentHintProjects5
        | GetProjectEnvContentHintProjects6
        | GetProjectEnvContentHintProjects7
        | GetProjectEnvContentHintProjects8
        | GetProjectEnvContentHintProjects9
        | GetProjectEnvContentHintProjects10
        | GetProjectEnvContentHintProjects11
        | GetProjectEnvContentHintProjects12
        | GetProjectEnvContentHintProjects13
        | GetProjectEnvContentHintProjects14
        | null
        | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: GetProjectEnvResponseBodyProjectsInternalContentHint | null | undefined;
    /**
     * Whether `value` is decrypted.
     */
    decrypted?: boolean | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
};

export enum GetProjectEnvTarget2 {
    Production = "production",
    Preview = "preview",
    Development = "development",
}

export enum GetProjectEnvTarget1 {
    Production = "production",
    Preview = "preview",
    Development = "development",
}

export type GetProjectEnvResponseBodyTarget = Array<GetProjectEnvTarget1> | GetProjectEnvTarget2;

export enum GetProjectEnvResponseBodyType {
    Secret = "secret",
    System = "system",
    Encrypted = "encrypted",
    Plain = "plain",
    Sensitive = "sensitive",
}

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type {
    IntegrationStoreSecret = "integration-store-secret",
}

export type GetProjectEnvContentHint14 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type {
    PostgresUrlNoSsl = "postgres-url-no-ssl",
}

export type GetProjectEnvContentHint13 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type {
    PostgresDatabase = "postgres-database",
}

export type GetProjectEnvContentHint12 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type {
    PostgresPassword = "postgres-password",
}

export type GetProjectEnvContentHint11 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type {
    PostgresHost = "postgres-host",
}

export type GetProjectEnvContentHint10 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type {
    PostgresUser = "postgres-user",
}

export type GetProjectEnvContentHint9 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type {
    PostgresPrismaUrl = "postgres-prisma-url",
}

export type GetProjectEnvContentHint8 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type {
    PostgresUrlNonPooling = "postgres-url-non-pooling",
}

export type GetProjectEnvContentHint7 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType {
    PostgresUrl = "postgres-url",
}

export type GetProjectEnvContentHint6 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200ApplicationJSONType {
    BlobReadWriteToken = "blob-read-write-token",
}

export type GetProjectEnvContentHint5 = {
    type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONType;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponse200Type {
    RedisRestApiReadOnlyToken = "redis-rest-api-read-only-token",
}

export type GetProjectEnvContentHint4 = {
    type: GetProjectEnvContentHintProjectsResponse200Type;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsResponseType {
    RedisRestApiToken = "redis-rest-api-token",
}

export type GetProjectEnvContentHint3 = {
    type: GetProjectEnvContentHintProjectsResponseType;
    storeId: string;
};

export enum GetProjectEnvContentHintProjectsType {
    RedisRestApiUrl = "redis-rest-api-url",
}

export type GetProjectEnvContentHint2 = {
    type: GetProjectEnvContentHintProjectsType;
    storeId: string;
};

export enum GetProjectEnvContentHintType {
    RedisUrl = "redis-url",
}

export type GetProjectEnvContentHint1 = {
    type: GetProjectEnvContentHintType;
    storeId: string;
};

export type GetProjectEnvResponseBodyContentHint =
    | GetProjectEnvContentHint1
    | GetProjectEnvContentHint2
    | GetProjectEnvContentHint3
    | GetProjectEnvContentHint4
    | GetProjectEnvContentHint5
    | GetProjectEnvContentHint6
    | GetProjectEnvContentHint7
    | GetProjectEnvContentHint8
    | GetProjectEnvContentHint9
    | GetProjectEnvContentHint10
    | GetProjectEnvContentHint11
    | GetProjectEnvContentHint12
    | GetProjectEnvContentHint13
    | GetProjectEnvContentHint14;

export enum GetProjectEnvResponseBodyProjectsResponseType {
    FlagsSecret = "flags-secret",
}

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyInternalContentHint = {
    type: GetProjectEnvResponseBodyProjectsResponseType;
    /**
     * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
     */
    encryptedValue: string;
};

export type GetProjectEnvResponseBody1 = {
    decrypted: boolean;
    target?: Array<GetProjectEnvTarget1> | GetProjectEnvTarget2 | undefined;
    type: GetProjectEnvResponseBodyType;
    id?: string | undefined;
    key: string;
    configurationId?: string | null | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    createdBy?: string | null | undefined;
    updatedBy?: string | null | undefined;
    gitBranch?: string | undefined;
    edgeConfigId?: string | null | undefined;
    edgeConfigTokenId?: string | null | undefined;
    contentHint?:
        | GetProjectEnvContentHint1
        | GetProjectEnvContentHint2
        | GetProjectEnvContentHint3
        | GetProjectEnvContentHint4
        | GetProjectEnvContentHint5
        | GetProjectEnvContentHint6
        | GetProjectEnvContentHint7
        | GetProjectEnvContentHint8
        | GetProjectEnvContentHint9
        | GetProjectEnvContentHint10
        | GetProjectEnvContentHint11
        | GetProjectEnvContentHint12
        | GetProjectEnvContentHint13
        | GetProjectEnvContentHint14
        | null
        | undefined;
    /**
     * Similar to `contentHints`, but should not be exposed to the user.
     */
    internalContentHint?: GetProjectEnvResponseBodyInternalContentHint | null | undefined;
    comment?: string | undefined;
    customEnvironmentId?: string | undefined;
};

export type GetProjectEnvResponseBody = GetProjectEnvResponseBody1 | GetProjectEnvResponseBody2;

/** @internal */
export namespace GetProjectEnvRequest$ {
    export const inboundSchema: z.ZodType<GetProjectEnvRequest, z.ZodTypeDef, unknown> = z.object({
        idOrName: z.string(),
        id: z.string(),
        teamId: z.string().optional(),
        slug: z.string().optional(),
    });

    export type Outbound = {
        idOrName: string;
        id: string;
        teamId?: string | undefined;
        slug?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvRequest> = z.object(
        {
            idOrName: z.string(),
            id: z.string(),
            teamId: z.string().optional(),
            slug: z.string().optional(),
        }
    );
}

/** @internal */
export namespace GetProjectEnvTargetProjects2$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTargetProjects2> = z.nativeEnum(
        GetProjectEnvTargetProjects2
    );
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTargetProjects2> =
        inboundSchema;
}

/** @internal */
export namespace GetProjectEnvTargetProjects1$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTargetProjects1> = z.nativeEnum(
        GetProjectEnvTargetProjects1
    );
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTargetProjects1> =
        inboundSchema;
}

/** @internal */
export namespace GetProjectEnvResponseBodyProjectsTarget$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvResponseBodyProjectsTarget,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.array(GetProjectEnvTargetProjects1$.inboundSchema),
        GetProjectEnvTargetProjects2$.inboundSchema,
    ]);

    export type Outbound = Array<string> | string;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvResponseBodyProjectsTarget
    > = z.union([
        z.array(GetProjectEnvTargetProjects1$.outboundSchema),
        GetProjectEnvTargetProjects2$.outboundSchema,
    ]);
}

/** @internal */
export namespace GetProjectEnvResponseBodyProjectsType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsType> =
        z.nativeEnum(GetProjectEnvResponseBodyProjectsType);
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvResponseBodyProjectsType> =
        inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects14$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects14,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects14
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody214Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects13$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects13,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects13
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody213Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects12$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects12,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects12
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody212Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects11$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects11,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects11
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody211Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects10$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects10,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects10
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody210Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects9$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects9,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects9
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody29Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects8$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects8,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects8
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody28Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects7$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects7,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects7
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody27Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects6$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects6,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects6
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody26Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects5$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects5,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects5
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody25Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects4$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects4,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects4
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody24Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects3$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects3,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects3
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody23Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects2$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects2,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects2
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody22Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjects1$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvContentHintProjects1,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.inboundSchema,
        storeId: z.string(),
    });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvContentHintProjects1
    > = z.object({
        type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody2Type$.outboundSchema,
        storeId: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvResponseBodyProjectsContentHint$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvResponseBodyProjectsContentHint,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.lazy(() => GetProjectEnvContentHintProjects1$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects2$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects3$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects4$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects5$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects6$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects7$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects8$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects9$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects10$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects11$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects12$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects13$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects14$.inboundSchema),
    ]);

    export type Outbound =
        | GetProjectEnvContentHintProjects1$.Outbound
        | GetProjectEnvContentHintProjects2$.Outbound
        | GetProjectEnvContentHintProjects3$.Outbound
        | GetProjectEnvContentHintProjects4$.Outbound
        | GetProjectEnvContentHintProjects5$.Outbound
        | GetProjectEnvContentHintProjects6$.Outbound
        | GetProjectEnvContentHintProjects7$.Outbound
        | GetProjectEnvContentHintProjects8$.Outbound
        | GetProjectEnvContentHintProjects9$.Outbound
        | GetProjectEnvContentHintProjects10$.Outbound
        | GetProjectEnvContentHintProjects11$.Outbound
        | GetProjectEnvContentHintProjects12$.Outbound
        | GetProjectEnvContentHintProjects13$.Outbound
        | GetProjectEnvContentHintProjects14$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvResponseBodyProjectsContentHint
    > = z.union([
        z.lazy(() => GetProjectEnvContentHintProjects1$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects2$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects3$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects4$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects5$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects6$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects7$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects8$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects9$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects10$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects11$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects12$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects13$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHintProjects14$.outboundSchema),
    ]);
}

/** @internal */
export namespace GetProjectEnvResponseBodyProjectsResponse200Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvResponseBodyProjectsResponse200Type
    > = z.nativeEnum(GetProjectEnvResponseBodyProjectsResponse200Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvResponseBodyProjectsResponse200Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvResponseBodyProjectsInternalContentHint$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvResponseBodyProjectsInternalContentHint,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvResponseBodyProjectsResponse200Type$.inboundSchema,
        encryptedValue: z.string(),
    });

    export type Outbound = {
        type: string;
        encryptedValue: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvResponseBodyProjectsInternalContentHint
    > = z.object({
        type: GetProjectEnvResponseBodyProjectsResponse200Type$.outboundSchema,
        encryptedValue: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvResponseBody2$ {
    export const inboundSchema: z.ZodType<GetProjectEnvResponseBody2, z.ZodTypeDef, unknown> =
        z.object({
            target: z
                .union([
                    z.array(GetProjectEnvTargetProjects1$.inboundSchema),
                    GetProjectEnvTargetProjects2$.inboundSchema,
                ])
                .optional(),
            type: GetProjectEnvResponseBodyProjectsType$.inboundSchema,
            id: z.string().optional(),
            key: z.string(),
            value: z.string(),
            configurationId: z.nullable(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            createdBy: z.nullable(z.string()).optional(),
            updatedBy: z.nullable(z.string()).optional(),
            gitBranch: z.string().optional(),
            edgeConfigId: z.nullable(z.string()).optional(),
            edgeConfigTokenId: z.nullable(z.string()).optional(),
            contentHint: z
                .nullable(
                    z.union([
                        z.lazy(() => GetProjectEnvContentHintProjects1$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects2$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects3$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects4$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects5$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects6$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects7$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects8$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects9$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects10$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects11$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects12$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects13$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects14$.inboundSchema),
                    ])
                )
                .optional(),
            internalContentHint: z
                .nullable(
                    z.lazy(
                        () => GetProjectEnvResponseBodyProjectsInternalContentHint$.inboundSchema
                    )
                )
                .optional(),
            decrypted: z.boolean().optional(),
            comment: z.string().optional(),
            customEnvironmentId: z.string().optional(),
        });

    export type Outbound = {
        target?: Array<string> | string | undefined;
        type: string;
        id?: string | undefined;
        key: string;
        value: string;
        configurationId?: string | null | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        createdBy?: string | null | undefined;
        updatedBy?: string | null | undefined;
        gitBranch?: string | undefined;
        edgeConfigId?: string | null | undefined;
        edgeConfigTokenId?: string | null | undefined;
        contentHint?:
            | GetProjectEnvContentHintProjects1$.Outbound
            | GetProjectEnvContentHintProjects2$.Outbound
            | GetProjectEnvContentHintProjects3$.Outbound
            | GetProjectEnvContentHintProjects4$.Outbound
            | GetProjectEnvContentHintProjects5$.Outbound
            | GetProjectEnvContentHintProjects6$.Outbound
            | GetProjectEnvContentHintProjects7$.Outbound
            | GetProjectEnvContentHintProjects8$.Outbound
            | GetProjectEnvContentHintProjects9$.Outbound
            | GetProjectEnvContentHintProjects10$.Outbound
            | GetProjectEnvContentHintProjects11$.Outbound
            | GetProjectEnvContentHintProjects12$.Outbound
            | GetProjectEnvContentHintProjects13$.Outbound
            | GetProjectEnvContentHintProjects14$.Outbound
            | null
            | undefined;
        internalContentHint?:
            | GetProjectEnvResponseBodyProjectsInternalContentHint$.Outbound
            | null
            | undefined;
        decrypted?: boolean | undefined;
        comment?: string | undefined;
        customEnvironmentId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvResponseBody2> =
        z.object({
            target: z
                .union([
                    z.array(GetProjectEnvTargetProjects1$.outboundSchema),
                    GetProjectEnvTargetProjects2$.outboundSchema,
                ])
                .optional(),
            type: GetProjectEnvResponseBodyProjectsType$.outboundSchema,
            id: z.string().optional(),
            key: z.string(),
            value: z.string(),
            configurationId: z.nullable(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            createdBy: z.nullable(z.string()).optional(),
            updatedBy: z.nullable(z.string()).optional(),
            gitBranch: z.string().optional(),
            edgeConfigId: z.nullable(z.string()).optional(),
            edgeConfigTokenId: z.nullable(z.string()).optional(),
            contentHint: z
                .nullable(
                    z.union([
                        z.lazy(() => GetProjectEnvContentHintProjects1$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects2$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects3$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects4$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects5$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects6$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects7$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects8$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects9$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects10$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects11$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects12$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects13$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHintProjects14$.outboundSchema),
                    ])
                )
                .optional(),
            internalContentHint: z
                .nullable(
                    z.lazy(
                        () => GetProjectEnvResponseBodyProjectsInternalContentHint$.outboundSchema
                    )
                )
                .optional(),
            decrypted: z.boolean().optional(),
            comment: z.string().optional(),
            customEnvironmentId: z.string().optional(),
        });
}

/** @internal */
export namespace GetProjectEnvTarget2$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTarget2> =
        z.nativeEnum(GetProjectEnvTarget2);
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTarget2> = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvTarget1$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTarget1> =
        z.nativeEnum(GetProjectEnvTarget1);
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvTarget1> = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvResponseBodyTarget$ {
    export const inboundSchema: z.ZodType<GetProjectEnvResponseBodyTarget, z.ZodTypeDef, unknown> =
        z.union([
            z.array(GetProjectEnvTarget1$.inboundSchema),
            GetProjectEnvTarget2$.inboundSchema,
        ]);

    export type Outbound = Array<string> | string;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvResponseBodyTarget
    > = z.union([
        z.array(GetProjectEnvTarget1$.outboundSchema),
        GetProjectEnvTarget2$.outboundSchema,
    ]);
}

/** @internal */
export namespace GetProjectEnvResponseBodyType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvResponseBodyType> =
        z.nativeEnum(GetProjectEnvResponseBodyType);
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvResponseBodyType> =
        inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint14$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint14, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint14> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody114Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint13$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint13, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint13> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody113Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint12$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint12, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint12> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody112Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint11$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint11, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint11> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody111Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint10$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint10, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint10> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody110Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint9$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint9, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint9> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody19Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint8$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint8, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint8> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody18Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint7$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint7, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint7> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBody1Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint6$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint6, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint6> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONResponseBodyType$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONType
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200ApplicationJSONType);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200ApplicationJSONType
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint5$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint5, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint5> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200ApplicationJSONType$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponse200Type$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200Type
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponse200Type);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponse200Type
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint4$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint4, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200Type$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint4> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponse200Type$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsResponseType$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponseType
    > = z.nativeEnum(GetProjectEnvContentHintProjectsResponseType);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvContentHintProjectsResponseType
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint3$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint3, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponseType$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint3> =
        z.object({
            type: GetProjectEnvContentHintProjectsResponseType$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintProjectsType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsType> =
        z.nativeEnum(GetProjectEnvContentHintProjectsType);
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvContentHintProjectsType> =
        inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint2$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint2, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintProjectsType$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint2> =
        z.object({
            type: GetProjectEnvContentHintProjectsType$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvContentHintType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof GetProjectEnvContentHintType> = z.nativeEnum(
        GetProjectEnvContentHintType
    );
    export const outboundSchema: z.ZodNativeEnum<typeof GetProjectEnvContentHintType> =
        inboundSchema;
}

/** @internal */
export namespace GetProjectEnvContentHint1$ {
    export const inboundSchema: z.ZodType<GetProjectEnvContentHint1, z.ZodTypeDef, unknown> =
        z.object({
            type: GetProjectEnvContentHintType$.inboundSchema,
            storeId: z.string(),
        });

    export type Outbound = {
        type: string;
        storeId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvContentHint1> =
        z.object({
            type: GetProjectEnvContentHintType$.outboundSchema,
            storeId: z.string(),
        });
}

/** @internal */
export namespace GetProjectEnvResponseBodyContentHint$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvResponseBodyContentHint,
        z.ZodTypeDef,
        unknown
    > = z.union([
        z.lazy(() => GetProjectEnvContentHint1$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint2$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint3$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint4$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint5$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint6$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint7$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint8$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint9$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint10$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint11$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint12$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint13$.inboundSchema),
        z.lazy(() => GetProjectEnvContentHint14$.inboundSchema),
    ]);

    export type Outbound =
        | GetProjectEnvContentHint1$.Outbound
        | GetProjectEnvContentHint2$.Outbound
        | GetProjectEnvContentHint3$.Outbound
        | GetProjectEnvContentHint4$.Outbound
        | GetProjectEnvContentHint5$.Outbound
        | GetProjectEnvContentHint6$.Outbound
        | GetProjectEnvContentHint7$.Outbound
        | GetProjectEnvContentHint8$.Outbound
        | GetProjectEnvContentHint9$.Outbound
        | GetProjectEnvContentHint10$.Outbound
        | GetProjectEnvContentHint11$.Outbound
        | GetProjectEnvContentHint12$.Outbound
        | GetProjectEnvContentHint13$.Outbound
        | GetProjectEnvContentHint14$.Outbound;
    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvResponseBodyContentHint
    > = z.union([
        z.lazy(() => GetProjectEnvContentHint1$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint2$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint3$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint4$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint5$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint6$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint7$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint8$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint9$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint10$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint11$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint12$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint13$.outboundSchema),
        z.lazy(() => GetProjectEnvContentHint14$.outboundSchema),
    ]);
}

/** @internal */
export namespace GetProjectEnvResponseBodyProjectsResponseType$ {
    export const inboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvResponseBodyProjectsResponseType
    > = z.nativeEnum(GetProjectEnvResponseBodyProjectsResponseType);
    export const outboundSchema: z.ZodNativeEnum<
        typeof GetProjectEnvResponseBodyProjectsResponseType
    > = inboundSchema;
}

/** @internal */
export namespace GetProjectEnvResponseBodyInternalContentHint$ {
    export const inboundSchema: z.ZodType<
        GetProjectEnvResponseBodyInternalContentHint,
        z.ZodTypeDef,
        unknown
    > = z.object({
        type: GetProjectEnvResponseBodyProjectsResponseType$.inboundSchema,
        encryptedValue: z.string(),
    });

    export type Outbound = {
        type: string;
        encryptedValue: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetProjectEnvResponseBodyInternalContentHint
    > = z.object({
        type: GetProjectEnvResponseBodyProjectsResponseType$.outboundSchema,
        encryptedValue: z.string(),
    });
}

/** @internal */
export namespace GetProjectEnvResponseBody1$ {
    export const inboundSchema: z.ZodType<GetProjectEnvResponseBody1, z.ZodTypeDef, unknown> =
        z.object({
            decrypted: z.boolean(),
            target: z
                .union([
                    z.array(GetProjectEnvTarget1$.inboundSchema),
                    GetProjectEnvTarget2$.inboundSchema,
                ])
                .optional(),
            type: GetProjectEnvResponseBodyType$.inboundSchema,
            id: z.string().optional(),
            key: z.string(),
            configurationId: z.nullable(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            createdBy: z.nullable(z.string()).optional(),
            updatedBy: z.nullable(z.string()).optional(),
            gitBranch: z.string().optional(),
            edgeConfigId: z.nullable(z.string()).optional(),
            edgeConfigTokenId: z.nullable(z.string()).optional(),
            contentHint: z
                .nullable(
                    z.union([
                        z.lazy(() => GetProjectEnvContentHint1$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint2$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint3$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint4$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint5$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint6$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint7$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint8$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint9$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint10$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint11$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint12$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint13$.inboundSchema),
                        z.lazy(() => GetProjectEnvContentHint14$.inboundSchema),
                    ])
                )
                .optional(),
            internalContentHint: z
                .nullable(z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$.inboundSchema))
                .optional(),
            comment: z.string().optional(),
            customEnvironmentId: z.string().optional(),
        });

    export type Outbound = {
        decrypted: boolean;
        target?: Array<string> | string | undefined;
        type: string;
        id?: string | undefined;
        key: string;
        configurationId?: string | null | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        createdBy?: string | null | undefined;
        updatedBy?: string | null | undefined;
        gitBranch?: string | undefined;
        edgeConfigId?: string | null | undefined;
        edgeConfigTokenId?: string | null | undefined;
        contentHint?:
            | GetProjectEnvContentHint1$.Outbound
            | GetProjectEnvContentHint2$.Outbound
            | GetProjectEnvContentHint3$.Outbound
            | GetProjectEnvContentHint4$.Outbound
            | GetProjectEnvContentHint5$.Outbound
            | GetProjectEnvContentHint6$.Outbound
            | GetProjectEnvContentHint7$.Outbound
            | GetProjectEnvContentHint8$.Outbound
            | GetProjectEnvContentHint9$.Outbound
            | GetProjectEnvContentHint10$.Outbound
            | GetProjectEnvContentHint11$.Outbound
            | GetProjectEnvContentHint12$.Outbound
            | GetProjectEnvContentHint13$.Outbound
            | GetProjectEnvContentHint14$.Outbound
            | null
            | undefined;
        internalContentHint?:
            | GetProjectEnvResponseBodyInternalContentHint$.Outbound
            | null
            | undefined;
        comment?: string | undefined;
        customEnvironmentId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvResponseBody1> =
        z.object({
            decrypted: z.boolean(),
            target: z
                .union([
                    z.array(GetProjectEnvTarget1$.outboundSchema),
                    GetProjectEnvTarget2$.outboundSchema,
                ])
                .optional(),
            type: GetProjectEnvResponseBodyType$.outboundSchema,
            id: z.string().optional(),
            key: z.string(),
            configurationId: z.nullable(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            createdBy: z.nullable(z.string()).optional(),
            updatedBy: z.nullable(z.string()).optional(),
            gitBranch: z.string().optional(),
            edgeConfigId: z.nullable(z.string()).optional(),
            edgeConfigTokenId: z.nullable(z.string()).optional(),
            contentHint: z
                .nullable(
                    z.union([
                        z.lazy(() => GetProjectEnvContentHint1$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint2$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint3$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint4$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint5$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint6$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint7$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint8$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint9$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint10$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint11$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint12$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint13$.outboundSchema),
                        z.lazy(() => GetProjectEnvContentHint14$.outboundSchema),
                    ])
                )
                .optional(),
            internalContentHint: z
                .nullable(
                    z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$.outboundSchema)
                )
                .optional(),
            comment: z.string().optional(),
            customEnvironmentId: z.string().optional(),
        });
}

/** @internal */
export namespace GetProjectEnvResponseBody$ {
    export const inboundSchema: z.ZodType<GetProjectEnvResponseBody, z.ZodTypeDef, unknown> =
        z.union([
            z.lazy(() => GetProjectEnvResponseBody1$.inboundSchema),
            z.lazy(() => GetProjectEnvResponseBody2$.inboundSchema),
        ]);

    export type Outbound =
        | GetProjectEnvResponseBody1$.Outbound
        | GetProjectEnvResponseBody2$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetProjectEnvResponseBody> =
        z.union([
            z.lazy(() => GetProjectEnvResponseBody1$.outboundSchema),
            z.lazy(() => GetProjectEnvResponseBody2$.outboundSchema),
        ]);
}
