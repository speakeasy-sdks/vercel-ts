/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";

export type GetProjectEnvRequest = {
  /**
   * The unique project identifier or the project name
   */
  idOrName: string;
  /**
   * The unique ID for the environment variable to get the decrypted value.
   */
  id: string;
  /**
   * The Team identifier to perform the request on behalf of.
   */
  teamId?: string | undefined;
  /**
   * The Team slug to perform the request on behalf of.
   */
  slug?: string | undefined;
};

export const GetProjectEnvTargetEnvsResponse2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTargetEnvsResponse2 = ClosedEnum<
  typeof GetProjectEnvTargetEnvsResponse2
>;

export const GetProjectEnvTargetEnvsResponse1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTargetEnvsResponse1 = ClosedEnum<
  typeof GetProjectEnvTargetEnvsResponse1
>;

export type GetProjectEnvResponseBodyEnvsResponseTarget =
  | Array<GetProjectEnvTargetEnvsResponse1>
  | GetProjectEnvTargetEnvsResponse2;

export const GetProjectEnvResponseBodyEnvsResponseType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type GetProjectEnvResponseBodyEnvsResponseType = ClosedEnum<
  typeof GetProjectEnvResponseBodyEnvsResponseType
>;

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type
  >;

export type GetProjectEnvContentHintEnvsResponse14 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type
  >;

export type GetProjectEnvContentHintEnvsResponse13 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type
  >;

export type GetProjectEnvContentHintEnvsResponse12 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type
  >;

export type GetProjectEnvContentHintEnvsResponse11 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type
  >;

export type GetProjectEnvContentHintEnvsResponse10 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type
  >;

export type GetProjectEnvContentHintEnvsResponse9 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type
  >;

export type GetProjectEnvContentHintEnvsResponse8 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type
  >;

export type GetProjectEnvContentHintEnvsResponse7 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type
  >;

export type GetProjectEnvContentHintEnvsResponse6 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type =
  {
    BlobReadWriteToken: "blob-read-write-token",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type
  >;

export type GetProjectEnvContentHintEnvsResponse5 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type =
  {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type
  >;

export type GetProjectEnvContentHintEnvsResponse4 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type =
  {
    RedisRestApiToken: "redis-rest-api-token",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type
  >;

export type GetProjectEnvContentHintEnvsResponse3 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type =
  {
    RedisRestApiUrl: "redis-rest-api-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type
  >;

export type GetProjectEnvContentHintEnvsResponse2 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type =
  {
    RedisUrl: "redis-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type
  >;

export type GetProjectEnvContentHintEnvsResponse1 = {
  type: GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type;
  storeId: string;
};

export type GetProjectEnvResponseBodyEnvsResponseContentHint =
  | GetProjectEnvContentHintEnvsResponse1
  | GetProjectEnvContentHintEnvsResponse2
  | GetProjectEnvContentHintEnvsResponse3
  | GetProjectEnvContentHintEnvsResponse4
  | GetProjectEnvContentHintEnvsResponse5
  | GetProjectEnvContentHintEnvsResponse6
  | GetProjectEnvContentHintEnvsResponse7
  | GetProjectEnvContentHintEnvsResponse8
  | GetProjectEnvContentHintEnvsResponse9
  | GetProjectEnvContentHintEnvsResponse10
  | GetProjectEnvContentHintEnvsResponse11
  | GetProjectEnvContentHintEnvsResponse12
  | GetProjectEnvContentHintEnvsResponse13
  | GetProjectEnvContentHintEnvsResponse14;

export const GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type = {
  FlagsSecret: "flags-secret",
} as const;
export type GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type =
  ClosedEnum<
    typeof GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type
  >;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyEnvsResponseInternalContentHint = {
  type: GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type GetProjectEnvResponseBody3 = {
  target?:
    | Array<GetProjectEnvTargetEnvsResponse1>
    | GetProjectEnvTargetEnvsResponse2
    | undefined;
  type: GetProjectEnvResponseBodyEnvsResponseType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintEnvsResponse1
    | GetProjectEnvContentHintEnvsResponse2
    | GetProjectEnvContentHintEnvsResponse3
    | GetProjectEnvContentHintEnvsResponse4
    | GetProjectEnvContentHintEnvsResponse5
    | GetProjectEnvContentHintEnvsResponse6
    | GetProjectEnvContentHintEnvsResponse7
    | GetProjectEnvContentHintEnvsResponse8
    | GetProjectEnvContentHintEnvsResponse9
    | GetProjectEnvContentHintEnvsResponse10
    | GetProjectEnvContentHintEnvsResponse11
    | GetProjectEnvContentHintEnvsResponse12
    | GetProjectEnvContentHintEnvsResponse13
    | GetProjectEnvContentHintEnvsResponse14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | GetProjectEnvResponseBodyEnvsResponseInternalContentHint
    | null
    | undefined;
  /**
   * Whether `value` and `vsmValue` are decrypted.
   */
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

export const GetProjectEnvTargetEnvs2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTargetEnvs2 = ClosedEnum<
  typeof GetProjectEnvTargetEnvs2
>;

export const GetProjectEnvTargetEnvs1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTargetEnvs1 = ClosedEnum<
  typeof GetProjectEnvTargetEnvs1
>;

export type GetProjectEnvResponseBodyEnvsTarget =
  | Array<GetProjectEnvTargetEnvs1>
  | GetProjectEnvTargetEnvs2;

export const GetProjectEnvResponseBodyEnvsType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type GetProjectEnvResponseBodyEnvsType = ClosedEnum<
  typeof GetProjectEnvResponseBodyEnvsType
>;

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type
  >;

export type GetProjectEnvContentHintEnvs14 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type
  >;

export type GetProjectEnvContentHintEnvs13 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type
  >;

export type GetProjectEnvContentHintEnvs12 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type
  >;

export type GetProjectEnvContentHintEnvs11 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type
  >;

export type GetProjectEnvContentHintEnvs10 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type
  >;

export type GetProjectEnvContentHintEnvs9 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type
  >;

export type GetProjectEnvContentHintEnvs8 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type
  >;

export type GetProjectEnvContentHintEnvs7 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type
  >;

export type GetProjectEnvContentHintEnvs6 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type =
  {
    BlobReadWriteToken: "blob-read-write-token",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type
  >;

export type GetProjectEnvContentHintEnvs5 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type =
  {
    RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type
  >;

export type GetProjectEnvContentHintEnvs4 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type =
  {
    RedisRestApiToken: "redis-rest-api-token",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type
  >;

export type GetProjectEnvContentHintEnvs3 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type =
  {
    RedisRestApiUrl: "redis-rest-api-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type
  >;

export type GetProjectEnvContentHintEnvs2 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type =
  {
    RedisUrl: "redis-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type
  >;

export type GetProjectEnvContentHintEnvs1 = {
  type: GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type;
  storeId: string;
};

export type GetProjectEnvResponseBodyEnvsContentHint =
  | GetProjectEnvContentHintEnvs1
  | GetProjectEnvContentHintEnvs2
  | GetProjectEnvContentHintEnvs3
  | GetProjectEnvContentHintEnvs4
  | GetProjectEnvContentHintEnvs5
  | GetProjectEnvContentHintEnvs6
  | GetProjectEnvContentHintEnvs7
  | GetProjectEnvContentHintEnvs8
  | GetProjectEnvContentHintEnvs9
  | GetProjectEnvContentHintEnvs10
  | GetProjectEnvContentHintEnvs11
  | GetProjectEnvContentHintEnvs12
  | GetProjectEnvContentHintEnvs13
  | GetProjectEnvContentHintEnvs14;

export const GetProjectEnvResponseBodyEnvsResponse200Type = {
  FlagsSecret: "flags-secret",
} as const;
export type GetProjectEnvResponseBodyEnvsResponse200Type = ClosedEnum<
  typeof GetProjectEnvResponseBodyEnvsResponse200Type
>;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyEnvsInternalContentHint = {
  type: GetProjectEnvResponseBodyEnvsResponse200Type;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type GetProjectEnvResponseBody2 = {
  target?:
    | Array<GetProjectEnvTargetEnvs1>
    | GetProjectEnvTargetEnvs2
    | undefined;
  type: GetProjectEnvResponseBodyEnvsType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintEnvs1
    | GetProjectEnvContentHintEnvs2
    | GetProjectEnvContentHintEnvs3
    | GetProjectEnvContentHintEnvs4
    | GetProjectEnvContentHintEnvs5
    | GetProjectEnvContentHintEnvs6
    | GetProjectEnvContentHintEnvs7
    | GetProjectEnvContentHintEnvs8
    | GetProjectEnvContentHintEnvs9
    | GetProjectEnvContentHintEnvs10
    | GetProjectEnvContentHintEnvs11
    | GetProjectEnvContentHintEnvs12
    | GetProjectEnvContentHintEnvs13
    | GetProjectEnvContentHintEnvs14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | GetProjectEnvResponseBodyEnvsInternalContentHint
    | null
    | undefined;
  /**
   * Whether `value` and `vsmValue` are decrypted.
   */
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

export const GetProjectEnvTarget2 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTarget2 = ClosedEnum<typeof GetProjectEnvTarget2>;

export const GetProjectEnvTarget1 = {
  Production: "production",
  Preview: "preview",
  Development: "development",
} as const;
export type GetProjectEnvTarget1 = ClosedEnum<typeof GetProjectEnvTarget1>;

export type GetProjectEnvResponseBodyTarget =
  | Array<GetProjectEnvTarget1>
  | GetProjectEnvTarget2;

export const GetProjectEnvResponseBodyType = {
  System: "system",
  Encrypted: "encrypted",
  Plain: "plain",
  Sensitive: "sensitive",
  Secret: "secret",
} as const;
export type GetProjectEnvResponseBodyType = ClosedEnum<
  typeof GetProjectEnvResponseBodyType
>;

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type =
  {
    IntegrationStoreSecret: "integration-store-secret",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type
  >;

export type GetProjectEnvContentHint14 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type =
  {
    PostgresUrlNoSsl: "postgres-url-no-ssl",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type
  >;

export type GetProjectEnvContentHint13 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type =
  {
    PostgresDatabase: "postgres-database",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type
  >;

export type GetProjectEnvContentHint12 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type =
  {
    PostgresPassword: "postgres-password",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type
  >;

export type GetProjectEnvContentHint11 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type =
  {
    PostgresHost: "postgres-host",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type
  >;

export type GetProjectEnvContentHint10 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type =
  {
    PostgresUser: "postgres-user",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type
  >;

export type GetProjectEnvContentHint9 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type =
  {
    PostgresPrismaUrl: "postgres-prisma-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type
  >;

export type GetProjectEnvContentHint8 = {
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type =
  {
    PostgresUrlNonPooling: "postgres-url-non-pooling",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type
  >;

export type GetProjectEnvContentHint7 = {
  type: GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType =
  {
    PostgresUrl: "postgres-url",
  } as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType
  >;

export type GetProjectEnvContentHint6 = {
  type: GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONType = {
  BlobReadWriteToken: "blob-read-write-token",
} as const;
export type GetProjectEnvContentHintEnvsResponse200ApplicationJSONType =
  ClosedEnum<typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONType>;

export type GetProjectEnvContentHint5 = {
  type: GetProjectEnvContentHintEnvsResponse200ApplicationJSONType;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponse200Type = {
  RedisRestApiReadOnlyToken: "redis-rest-api-read-only-token",
} as const;
export type GetProjectEnvContentHintEnvsResponse200Type = ClosedEnum<
  typeof GetProjectEnvContentHintEnvsResponse200Type
>;

export type GetProjectEnvContentHint4 = {
  type: GetProjectEnvContentHintEnvsResponse200Type;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsResponseType = {
  RedisRestApiToken: "redis-rest-api-token",
} as const;
export type GetProjectEnvContentHintEnvsResponseType = ClosedEnum<
  typeof GetProjectEnvContentHintEnvsResponseType
>;

export type GetProjectEnvContentHint3 = {
  type: GetProjectEnvContentHintEnvsResponseType;
  storeId: string;
};

export const GetProjectEnvContentHintEnvsType = {
  RedisRestApiUrl: "redis-rest-api-url",
} as const;
export type GetProjectEnvContentHintEnvsType = ClosedEnum<
  typeof GetProjectEnvContentHintEnvsType
>;

export type GetProjectEnvContentHint2 = {
  type: GetProjectEnvContentHintEnvsType;
  storeId: string;
};

export const GetProjectEnvContentHintType = {
  RedisUrl: "redis-url",
} as const;
export type GetProjectEnvContentHintType = ClosedEnum<
  typeof GetProjectEnvContentHintType
>;

export type GetProjectEnvContentHint1 = {
  type: GetProjectEnvContentHintType;
  storeId: string;
};

export type GetProjectEnvResponseBodyContentHint =
  | GetProjectEnvContentHint1
  | GetProjectEnvContentHint2
  | GetProjectEnvContentHint3
  | GetProjectEnvContentHint4
  | GetProjectEnvContentHint5
  | GetProjectEnvContentHint6
  | GetProjectEnvContentHint7
  | GetProjectEnvContentHint8
  | GetProjectEnvContentHint9
  | GetProjectEnvContentHint10
  | GetProjectEnvContentHint11
  | GetProjectEnvContentHint12
  | GetProjectEnvContentHint13
  | GetProjectEnvContentHint14;

export const GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType = {
  FlagsSecret: "flags-secret",
} as const;
export type GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType
  >;

/**
 * Similar to `contentHints`, but should not be exposed to the user.
 */
export type GetProjectEnvResponseBodyInternalContentHint = {
  type: GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType;
  /**
   * Contains the `value` of the env variable, encrypted with a special key to make decryption possible in the subscriber Lambda.
   */
  encryptedValue: string;
};

export type GetProjectEnvResponseBody1 = {
  decrypted: boolean;
  target?: Array<GetProjectEnvTarget1> | GetProjectEnvTarget2 | undefined;
  type: GetProjectEnvResponseBodyType;
  /**
   * This is used to identiy variables that have been migrated from type secret to sensitive.
   */
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHint1
    | GetProjectEnvContentHint2
    | GetProjectEnvContentHint3
    | GetProjectEnvContentHint4
    | GetProjectEnvContentHint5
    | GetProjectEnvContentHint6
    | GetProjectEnvContentHint7
    | GetProjectEnvContentHint8
    | GetProjectEnvContentHint9
    | GetProjectEnvContentHint10
    | GetProjectEnvContentHint11
    | GetProjectEnvContentHint12
    | GetProjectEnvContentHint13
    | GetProjectEnvContentHint14
    | null
    | undefined;
  /**
   * Similar to `contentHints`, but should not be exposed to the user.
   */
  internalContentHint?:
    | GetProjectEnvResponseBodyInternalContentHint
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

export type GetProjectEnvResponseBody =
  | GetProjectEnvResponseBody1
  | GetProjectEnvResponseBody3
  | GetProjectEnvResponseBody2;

/** @internal */
export const GetProjectEnvRequest$inboundSchema: z.ZodType<
  GetProjectEnvRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  idOrName: z.string(),
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/** @internal */
export type GetProjectEnvRequest$Outbound = {
  idOrName: string;
  id: string;
  teamId?: string | undefined;
  slug?: string | undefined;
};

/** @internal */
export const GetProjectEnvRequest$outboundSchema: z.ZodType<
  GetProjectEnvRequest$Outbound,
  z.ZodTypeDef,
  GetProjectEnvRequest
> = z.object({
  idOrName: z.string(),
  id: z.string(),
  teamId: z.string().optional(),
  slug: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvRequest$ {
  /** @deprecated use `GetProjectEnvRequest$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvRequest$inboundSchema;
  /** @deprecated use `GetProjectEnvRequest$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvRequest$outboundSchema;
  /** @deprecated use `GetProjectEnvRequest$Outbound` instead. */
  export type Outbound = GetProjectEnvRequest$Outbound;
}

/** @internal */
export const GetProjectEnvTargetEnvsResponse2$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvsResponse2
> = z.nativeEnum(GetProjectEnvTargetEnvsResponse2);

/** @internal */
export const GetProjectEnvTargetEnvsResponse2$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvsResponse2
> = GetProjectEnvTargetEnvsResponse2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTargetEnvsResponse2$ {
  /** @deprecated use `GetProjectEnvTargetEnvsResponse2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTargetEnvsResponse2$inboundSchema;
  /** @deprecated use `GetProjectEnvTargetEnvsResponse2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTargetEnvsResponse2$outboundSchema;
}

/** @internal */
export const GetProjectEnvTargetEnvsResponse1$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvsResponse1
> = z.nativeEnum(GetProjectEnvTargetEnvsResponse1);

/** @internal */
export const GetProjectEnvTargetEnvsResponse1$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvsResponse1
> = GetProjectEnvTargetEnvsResponse1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTargetEnvsResponse1$ {
  /** @deprecated use `GetProjectEnvTargetEnvsResponse1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTargetEnvsResponse1$inboundSchema;
  /** @deprecated use `GetProjectEnvTargetEnvsResponse1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTargetEnvsResponse1$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseTarget$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsResponseTarget,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.array(GetProjectEnvTargetEnvsResponse1$inboundSchema),
    GetProjectEnvTargetEnvsResponse2$inboundSchema,
  ]);

/** @internal */
export type GetProjectEnvResponseBodyEnvsResponseTarget$Outbound =
  | Array<string>
  | string;

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseTarget$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsResponseTarget$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyEnvsResponseTarget
  > = z.union([
    z.array(GetProjectEnvTargetEnvsResponse1$outboundSchema),
    GetProjectEnvTargetEnvsResponse2$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsResponseTarget$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseTarget$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsResponseTarget$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseTarget$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsResponseTarget$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseTarget$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyEnvsResponseTarget$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyEnvsResponseType> = z
    .nativeEnum(GetProjectEnvResponseBodyEnvsResponseType);

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyEnvsResponseType> =
    GetProjectEnvResponseBodyEnvsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsResponseType$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsResponseType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsResponseType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse14$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse14$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse14$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse14
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody314Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse14$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse14$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse14$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse14$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse14$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse14$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse14$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse13$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse13$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse13$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse13
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody313Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse13$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse13$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse13$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse13$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse13$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse13$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse13$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse12$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse12$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse12$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse12
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody312Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse12$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse12$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse12$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse12$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse12$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse12$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse12$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse11$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse11$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse11$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse11
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody311Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse11$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse11$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse11$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse11$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse11$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse11$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse11$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse10$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse10$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse10$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse10
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody310Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse10$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse10$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse10$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse10$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse10$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse10$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse10$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse9$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse9$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse9$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse9
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody39Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse9$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse9$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse9$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse9$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse9$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse9$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse9$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse8$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse8$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse8$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse8
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody38Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse8$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse8$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse8$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse8$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse8$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse8$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse8$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse7$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse7$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse7$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse7
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody37Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse7$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse7$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse7$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse7$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse7$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse7$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse7$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse6$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse6$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse6$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse6
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody36Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse6$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse6$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse6$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse6$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse6$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse6$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse6$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse5$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse5$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse5$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse5
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody35Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse5$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse5$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse5$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse5$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse5$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse5$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse5$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse4$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse4$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse4$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse4
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody34Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse4$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse4$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse4$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse4$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse4$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse4$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse4$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse3$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse3$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse3$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse3
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody33Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse3$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse3$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse3$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse3$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse3$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse3$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse3$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse2$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse2$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse2$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse2
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody32Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse2$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse2$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse2$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse2$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse2$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse1$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvsResponse1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvsResponse1$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvsResponse1$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvsResponse1
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse1$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse1$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse1$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse1$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse1$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvsResponse1$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsResponseContentHint,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetProjectEnvContentHintEnvsResponse1$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse2$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse3$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse4$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse5$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse6$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse7$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse8$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse9$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse10$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse11$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse12$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse13$inboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse14$inboundSchema),
  ]);

/** @internal */
export type GetProjectEnvResponseBodyEnvsResponseContentHint$Outbound =
  | GetProjectEnvContentHintEnvsResponse1$Outbound
  | GetProjectEnvContentHintEnvsResponse2$Outbound
  | GetProjectEnvContentHintEnvsResponse3$Outbound
  | GetProjectEnvContentHintEnvsResponse4$Outbound
  | GetProjectEnvContentHintEnvsResponse5$Outbound
  | GetProjectEnvContentHintEnvsResponse6$Outbound
  | GetProjectEnvContentHintEnvsResponse7$Outbound
  | GetProjectEnvContentHintEnvsResponse8$Outbound
  | GetProjectEnvContentHintEnvsResponse9$Outbound
  | GetProjectEnvContentHintEnvsResponse10$Outbound
  | GetProjectEnvContentHintEnvsResponse11$Outbound
  | GetProjectEnvContentHintEnvsResponse12$Outbound
  | GetProjectEnvContentHintEnvsResponse13$Outbound
  | GetProjectEnvContentHintEnvsResponse14$Outbound;

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsResponseContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyEnvsResponseContentHint
  > = z.union([
    z.lazy(() => GetProjectEnvContentHintEnvsResponse1$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse2$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse3$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse4$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse5$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse6$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse7$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse8$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse9$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse10$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse11$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse12$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse13$outboundSchema),
    z.lazy(() => GetProjectEnvContentHintEnvsResponse14$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsResponseContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsResponseContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsResponseContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseContentHint$Outbound` instead. */
  export type Outbound =
    GetProjectEnvResponseBodyEnvsResponseContentHint$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type
  > = z.nativeEnum(
    GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type,
  );

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type
  > =
    GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsResponseInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type GetProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound =
  {
    type: string;
    encryptedValue: string;
  };

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyEnvsResponseInternalContentHint
  > = z.object({
    type:
      GetProjectEnvResponseBodyEnvsResponse200ApplicationJson3Type$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsResponseInternalContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound` instead. */
  export type Outbound =
    GetProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBody3$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody3,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(GetProjectEnvTargetEnvsResponse1$inboundSchema),
    GetProjectEnvTargetEnvsResponse2$inboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyEnvsResponseType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintEnvsResponse1$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse2$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse3$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse4$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse5$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse6$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse7$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse8$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse9$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse10$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse11$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse12$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse13$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyEnvsResponseInternalContentHint$inboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/** @internal */
export type GetProjectEnvResponseBody3$Outbound = {
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintEnvsResponse1$Outbound
    | GetProjectEnvContentHintEnvsResponse2$Outbound
    | GetProjectEnvContentHintEnvsResponse3$Outbound
    | GetProjectEnvContentHintEnvsResponse4$Outbound
    | GetProjectEnvContentHintEnvsResponse5$Outbound
    | GetProjectEnvContentHintEnvsResponse6$Outbound
    | GetProjectEnvContentHintEnvsResponse7$Outbound
    | GetProjectEnvContentHintEnvsResponse8$Outbound
    | GetProjectEnvContentHintEnvsResponse9$Outbound
    | GetProjectEnvContentHintEnvsResponse10$Outbound
    | GetProjectEnvContentHintEnvsResponse11$Outbound
    | GetProjectEnvContentHintEnvsResponse12$Outbound
    | GetProjectEnvContentHintEnvsResponse13$Outbound
    | GetProjectEnvContentHintEnvsResponse14$Outbound
    | null
    | undefined;
  internalContentHint?:
    | GetProjectEnvResponseBodyEnvsResponseInternalContentHint$Outbound
    | null
    | undefined;
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
};

/** @internal */
export const GetProjectEnvResponseBody3$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody3$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody3
> = z.object({
  target: z.union([
    z.array(GetProjectEnvTargetEnvsResponse1$outboundSchema),
    GetProjectEnvTargetEnvsResponse2$outboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyEnvsResponseType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintEnvsResponse1$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse2$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse3$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse4$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse5$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse6$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse7$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse8$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse9$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse10$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse11$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse12$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse13$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvsResponse14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyEnvsResponseInternalContentHint$outboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody3$ {
  /** @deprecated use `GetProjectEnvResponseBody3$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody3$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody3$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody3$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody3$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody3$Outbound;
}

/** @internal */
export const GetProjectEnvTargetEnvs2$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvs2
> = z.nativeEnum(GetProjectEnvTargetEnvs2);

/** @internal */
export const GetProjectEnvTargetEnvs2$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvs2
> = GetProjectEnvTargetEnvs2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTargetEnvs2$ {
  /** @deprecated use `GetProjectEnvTargetEnvs2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTargetEnvs2$inboundSchema;
  /** @deprecated use `GetProjectEnvTargetEnvs2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTargetEnvs2$outboundSchema;
}

/** @internal */
export const GetProjectEnvTargetEnvs1$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvs1
> = z.nativeEnum(GetProjectEnvTargetEnvs1);

/** @internal */
export const GetProjectEnvTargetEnvs1$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTargetEnvs1
> = GetProjectEnvTargetEnvs1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTargetEnvs1$ {
  /** @deprecated use `GetProjectEnvTargetEnvs1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTargetEnvs1$inboundSchema;
  /** @deprecated use `GetProjectEnvTargetEnvs1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTargetEnvs1$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsTarget$inboundSchema: z.ZodType<
  GetProjectEnvResponseBodyEnvsTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(GetProjectEnvTargetEnvs1$inboundSchema),
  GetProjectEnvTargetEnvs2$inboundSchema,
]);

/** @internal */
export type GetProjectEnvResponseBodyEnvsTarget$Outbound =
  | Array<string>
  | string;

/** @internal */
export const GetProjectEnvResponseBodyEnvsTarget$outboundSchema: z.ZodType<
  GetProjectEnvResponseBodyEnvsTarget$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBodyEnvsTarget
> = z.union([
  z.array(GetProjectEnvTargetEnvs1$outboundSchema),
  GetProjectEnvTargetEnvs2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsTarget$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsTarget$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsTarget$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsTarget$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsTarget$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsTarget$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyEnvsTarget$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsType$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvResponseBodyEnvsType
> = z.nativeEnum(GetProjectEnvResponseBodyEnvsType);

/** @internal */
export const GetProjectEnvResponseBodyEnvsType$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvResponseBodyEnvsType
> = GetProjectEnvResponseBodyEnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsType$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsType$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBodyEnvsType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs14$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs14$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs14$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs14
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody214Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs14$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs14$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs14$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs14$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs14$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs14$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs14$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs13$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs13$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs13$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs13
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody213Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs13$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs13$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs13$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs13$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs13$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs13$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs13$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs12$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs12$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs12$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs12
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody212Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs12$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs12$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs12$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs12$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs12$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs12$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs12$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs11$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs11$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs11$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs11
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody211Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs11$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs11$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs11$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs11$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs11$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs11$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs11$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs10$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs10$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs10$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs10
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody210Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs10$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs10$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs10$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs10$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs10$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs10$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs10$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs9$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs9$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs9$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs9
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody29Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs9$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs9$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs9$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs9$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs9$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs9$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs9$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs8$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs8$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs8$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs8
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody28Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs8$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs8$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs8$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs8$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs8$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs8$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs8$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs7$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs7$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs7$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs7
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody27Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs7$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs7$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs7$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs7$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs7$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs7$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs7$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs6$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs6$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs6$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs6
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody26Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs6$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs6$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs6$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs6$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs6$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs6$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs6$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs5$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs5$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs5$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs5
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody25Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs5$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs5$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs5$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs5$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs5$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs5$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs5$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs4$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs4$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs4$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs4
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody24Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs4$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs4$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs4$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs4$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs4$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs4$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs4$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs3$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs3$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs3$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs3
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody23Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs3$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs3$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs3$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs3$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs3$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs3$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs3$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs2$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs2$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs2$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs2
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody22Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs2$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs2$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs2$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs2$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs2$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvs1$inboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHintEnvs1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHintEnvs1$outboundSchema: z.ZodType<
  GetProjectEnvContentHintEnvs1$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHintEnvs1
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody2Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvs1$ {
  /** @deprecated use `GetProjectEnvContentHintEnvs1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvs1$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvs1$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvs1$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHintEnvs1$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsContentHint$inboundSchema: z.ZodType<
  GetProjectEnvResponseBodyEnvsContentHint,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetProjectEnvContentHintEnvs1$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs2$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs3$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs4$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs5$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs6$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs7$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs8$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs9$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs10$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs11$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs12$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs13$inboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs14$inboundSchema),
]);

/** @internal */
export type GetProjectEnvResponseBodyEnvsContentHint$Outbound =
  | GetProjectEnvContentHintEnvs1$Outbound
  | GetProjectEnvContentHintEnvs2$Outbound
  | GetProjectEnvContentHintEnvs3$Outbound
  | GetProjectEnvContentHintEnvs4$Outbound
  | GetProjectEnvContentHintEnvs5$Outbound
  | GetProjectEnvContentHintEnvs6$Outbound
  | GetProjectEnvContentHintEnvs7$Outbound
  | GetProjectEnvContentHintEnvs8$Outbound
  | GetProjectEnvContentHintEnvs9$Outbound
  | GetProjectEnvContentHintEnvs10$Outbound
  | GetProjectEnvContentHintEnvs11$Outbound
  | GetProjectEnvContentHintEnvs12$Outbound
  | GetProjectEnvContentHintEnvs13$Outbound
  | GetProjectEnvContentHintEnvs14$Outbound;

/** @internal */
export const GetProjectEnvResponseBodyEnvsContentHint$outboundSchema: z.ZodType<
  GetProjectEnvResponseBodyEnvsContentHint$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBodyEnvsContentHint
> = z.union([
  z.lazy(() => GetProjectEnvContentHintEnvs1$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs2$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs3$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs4$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs5$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs6$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs7$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs8$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs9$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs10$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs11$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs12$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs13$outboundSchema),
  z.lazy(() => GetProjectEnvContentHintEnvs14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsContentHint$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyEnvsContentHint$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyEnvsResponse200Type> = z
    .nativeEnum(GetProjectEnvResponseBodyEnvsResponse200Type);

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvResponseBodyEnvsResponse200Type> =
    GetProjectEnvResponseBodyEnvsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsResponse200Type$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsResponse200Type$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsResponse200Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type: GetProjectEnvResponseBodyEnvsResponse200Type$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type GetProjectEnvResponseBodyEnvsInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const GetProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyEnvsInternalContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyEnvsInternalContentHint
  > = z.object({
    type: GetProjectEnvResponseBodyEnvsResponse200Type$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsInternalContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsInternalContentHint$Outbound` instead. */
  export type Outbound =
    GetProjectEnvResponseBodyEnvsInternalContentHint$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBody2$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  target: z.union([
    z.array(GetProjectEnvTargetEnvs1$inboundSchema),
    GetProjectEnvTargetEnvs2$inboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyEnvsType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintEnvs1$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs2$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs3$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs4$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs5$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs6$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs7$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs8$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs9$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs10$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs11$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs12$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs13$inboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyEnvsInternalContentHint$inboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/** @internal */
export type GetProjectEnvResponseBody2$Outbound = {
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  value: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHintEnvs1$Outbound
    | GetProjectEnvContentHintEnvs2$Outbound
    | GetProjectEnvContentHintEnvs3$Outbound
    | GetProjectEnvContentHintEnvs4$Outbound
    | GetProjectEnvContentHintEnvs5$Outbound
    | GetProjectEnvContentHintEnvs6$Outbound
    | GetProjectEnvContentHintEnvs7$Outbound
    | GetProjectEnvContentHintEnvs8$Outbound
    | GetProjectEnvContentHintEnvs9$Outbound
    | GetProjectEnvContentHintEnvs10$Outbound
    | GetProjectEnvContentHintEnvs11$Outbound
    | GetProjectEnvContentHintEnvs12$Outbound
    | GetProjectEnvContentHintEnvs13$Outbound
    | GetProjectEnvContentHintEnvs14$Outbound
    | null
    | undefined;
  internalContentHint?:
    | GetProjectEnvResponseBodyEnvsInternalContentHint$Outbound
    | null
    | undefined;
  decrypted?: boolean | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

/** @internal */
export const GetProjectEnvResponseBody2$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody2$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody2
> = z.object({
  target: z.union([
    z.array(GetProjectEnvTargetEnvs1$outboundSchema),
    GetProjectEnvTargetEnvs2$outboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyEnvsType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  value: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHintEnvs1$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs2$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs3$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs4$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs5$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs6$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs7$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs8$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs9$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs10$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs11$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs12$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs13$outboundSchema),
      z.lazy(() => GetProjectEnvContentHintEnvs14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() =>
      GetProjectEnvResponseBodyEnvsInternalContentHint$outboundSchema
    ),
  ).optional(),
  decrypted: z.boolean().optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody2$ {
  /** @deprecated use `GetProjectEnvResponseBody2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody2$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody2$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody2$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody2$Outbound;
}

/** @internal */
export const GetProjectEnvTarget2$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget2
> = z.nativeEnum(GetProjectEnvTarget2);

/** @internal */
export const GetProjectEnvTarget2$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget2
> = GetProjectEnvTarget2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTarget2$ {
  /** @deprecated use `GetProjectEnvTarget2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTarget2$inboundSchema;
  /** @deprecated use `GetProjectEnvTarget2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTarget2$outboundSchema;
}

/** @internal */
export const GetProjectEnvTarget1$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget1
> = z.nativeEnum(GetProjectEnvTarget1);

/** @internal */
export const GetProjectEnvTarget1$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvTarget1
> = GetProjectEnvTarget1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvTarget1$ {
  /** @deprecated use `GetProjectEnvTarget1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvTarget1$inboundSchema;
  /** @deprecated use `GetProjectEnvTarget1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvTarget1$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyTarget$inboundSchema: z.ZodType<
  GetProjectEnvResponseBodyTarget,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(GetProjectEnvTarget1$inboundSchema),
  GetProjectEnvTarget2$inboundSchema,
]);

/** @internal */
export type GetProjectEnvResponseBodyTarget$Outbound = Array<string> | string;

/** @internal */
export const GetProjectEnvResponseBodyTarget$outboundSchema: z.ZodType<
  GetProjectEnvResponseBodyTarget$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBodyTarget
> = z.union([
  z.array(GetProjectEnvTarget1$outboundSchema),
  GetProjectEnvTarget2$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyTarget$ {
  /** @deprecated use `GetProjectEnvResponseBodyTarget$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBodyTarget$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyTarget$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBodyTarget$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyTarget$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyTarget$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyType$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvResponseBodyType
> = z.nativeEnum(GetProjectEnvResponseBodyType);

/** @internal */
export const GetProjectEnvResponseBodyType$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvResponseBodyType
> = GetProjectEnvResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyType$ {
  /** @deprecated use `GetProjectEnvResponseBodyType$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBodyType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyType$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBodyType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint14$inboundSchema: z.ZodType<
  GetProjectEnvContentHint14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$inboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint14$Outbound = {
  type: string;
  storeId: string;
  integrationId: string;
  integrationProductId: string;
  integrationConfigurationId: string;
};

/** @internal */
export const GetProjectEnvContentHint14$outboundSchema: z.ZodType<
  GetProjectEnvContentHint14$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint14
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody114Type$outboundSchema,
  storeId: z.string(),
  integrationId: z.string(),
  integrationProductId: z.string(),
  integrationConfigurationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint14$ {
  /** @deprecated use `GetProjectEnvContentHint14$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint14$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint14$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint14$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint14$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint14$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint13$inboundSchema: z.ZodType<
  GetProjectEnvContentHint13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint13$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint13$outboundSchema: z.ZodType<
  GetProjectEnvContentHint13$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint13
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody113Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint13$ {
  /** @deprecated use `GetProjectEnvContentHint13$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint13$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint13$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint13$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint13$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint13$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint12$inboundSchema: z.ZodType<
  GetProjectEnvContentHint12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint12$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint12$outboundSchema: z.ZodType<
  GetProjectEnvContentHint12$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint12
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody112Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint12$ {
  /** @deprecated use `GetProjectEnvContentHint12$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint12$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint12$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint12$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint12$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint12$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint11$inboundSchema: z.ZodType<
  GetProjectEnvContentHint11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint11$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint11$outboundSchema: z.ZodType<
  GetProjectEnvContentHint11$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint11
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody111Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint11$ {
  /** @deprecated use `GetProjectEnvContentHint11$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint11$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint11$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint11$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint11$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint11$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint10$inboundSchema: z.ZodType<
  GetProjectEnvContentHint10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint10$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint10$outboundSchema: z.ZodType<
  GetProjectEnvContentHint10$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint10
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody110Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint10$ {
  /** @deprecated use `GetProjectEnvContentHint10$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint10$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint10$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint10$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint10$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint10$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint9$inboundSchema: z.ZodType<
  GetProjectEnvContentHint9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint9$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint9$outboundSchema: z.ZodType<
  GetProjectEnvContentHint9$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint9
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody19Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint9$ {
  /** @deprecated use `GetProjectEnvContentHint9$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint9$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint9$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint9$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint9$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint9$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint8$inboundSchema: z.ZodType<
  GetProjectEnvContentHint8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint8$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint8$outboundSchema: z.ZodType<
  GetProjectEnvContentHint8$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint8
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody18Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint8$ {
  /** @deprecated use `GetProjectEnvContentHint8$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint8$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint8$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint8$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint8$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint8$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint7$inboundSchema: z.ZodType<
  GetProjectEnvContentHint7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint7$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint7$outboundSchema: z.ZodType<
  GetProjectEnvContentHint7$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint7
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBody1Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint7$ {
  /** @deprecated use `GetProjectEnvContentHint7$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint7$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint7$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint7$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint7$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint7$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType
  > =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint6$inboundSchema: z.ZodType<
  GetProjectEnvContentHint6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint6$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint6$outboundSchema: z.ZodType<
  GetProjectEnvContentHint6$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint6
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint6$ {
  /** @deprecated use `GetProjectEnvContentHint6$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint6$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint6$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint6$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint6$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint6$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONType
  > = z.nativeEnum(GetProjectEnvContentHintEnvsResponse200ApplicationJSONType);

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvContentHintEnvsResponse200ApplicationJSONType
  > = GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint5$inboundSchema: z.ZodType<
  GetProjectEnvContentHint5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint5$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint5$outboundSchema: z.ZodType<
  GetProjectEnvContentHint5$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint5
> = z.object({
  type:
    GetProjectEnvContentHintEnvsResponse200ApplicationJSONType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint5$ {
  /** @deprecated use `GetProjectEnvContentHint5$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint5$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint5$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint5$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint5$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint5$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintEnvsResponse200Type> = z
    .nativeEnum(GetProjectEnvContentHintEnvsResponse200Type);

/** @internal */
export const GetProjectEnvContentHintEnvsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintEnvsResponse200Type> =
    GetProjectEnvContentHintEnvsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponse200Type$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponse200Type$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponse200Type$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint4$inboundSchema: z.ZodType<
  GetProjectEnvContentHint4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintEnvsResponse200Type$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint4$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint4$outboundSchema: z.ZodType<
  GetProjectEnvContentHint4$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint4
> = z.object({
  type: GetProjectEnvContentHintEnvsResponse200Type$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint4$ {
  /** @deprecated use `GetProjectEnvContentHint4$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint4$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint4$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint4$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint4$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint4$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintEnvsResponseType> = z
    .nativeEnum(GetProjectEnvContentHintEnvsResponseType);

/** @internal */
export const GetProjectEnvContentHintEnvsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetProjectEnvContentHintEnvsResponseType> =
    GetProjectEnvContentHintEnvsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsResponseType$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvContentHintEnvsResponseType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvContentHintEnvsResponseType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint3$inboundSchema: z.ZodType<
  GetProjectEnvContentHint3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintEnvsResponseType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint3$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint3$outboundSchema: z.ZodType<
  GetProjectEnvContentHint3$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint3
> = z.object({
  type: GetProjectEnvContentHintEnvsResponseType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint3$ {
  /** @deprecated use `GetProjectEnvContentHint3$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint3$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint3$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint3$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint3$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint3$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintEnvsType$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvContentHintEnvsType
> = z.nativeEnum(GetProjectEnvContentHintEnvsType);

/** @internal */
export const GetProjectEnvContentHintEnvsType$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvContentHintEnvsType
> = GetProjectEnvContentHintEnvsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintEnvsType$ {
  /** @deprecated use `GetProjectEnvContentHintEnvsType$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintEnvsType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintEnvsType$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintEnvsType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint2$inboundSchema: z.ZodType<
  GetProjectEnvContentHint2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintEnvsType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint2$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint2$outboundSchema: z.ZodType<
  GetProjectEnvContentHint2$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint2
> = z.object({
  type: GetProjectEnvContentHintEnvsType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint2$ {
  /** @deprecated use `GetProjectEnvContentHint2$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint2$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint2$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint2$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint2$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint2$Outbound;
}

/** @internal */
export const GetProjectEnvContentHintType$inboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvContentHintType
> = z.nativeEnum(GetProjectEnvContentHintType);

/** @internal */
export const GetProjectEnvContentHintType$outboundSchema: z.ZodNativeEnum<
  typeof GetProjectEnvContentHintType
> = GetProjectEnvContentHintType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHintType$ {
  /** @deprecated use `GetProjectEnvContentHintType$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHintType$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHintType$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHintType$outboundSchema;
}

/** @internal */
export const GetProjectEnvContentHint1$inboundSchema: z.ZodType<
  GetProjectEnvContentHint1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetProjectEnvContentHintType$inboundSchema,
  storeId: z.string(),
});

/** @internal */
export type GetProjectEnvContentHint1$Outbound = {
  type: string;
  storeId: string;
};

/** @internal */
export const GetProjectEnvContentHint1$outboundSchema: z.ZodType<
  GetProjectEnvContentHint1$Outbound,
  z.ZodTypeDef,
  GetProjectEnvContentHint1
> = z.object({
  type: GetProjectEnvContentHintType$outboundSchema,
  storeId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvContentHint1$ {
  /** @deprecated use `GetProjectEnvContentHint1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvContentHint1$inboundSchema;
  /** @deprecated use `GetProjectEnvContentHint1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvContentHint1$outboundSchema;
  /** @deprecated use `GetProjectEnvContentHint1$Outbound` instead. */
  export type Outbound = GetProjectEnvContentHint1$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyContentHint$inboundSchema: z.ZodType<
  GetProjectEnvResponseBodyContentHint,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetProjectEnvContentHint1$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint2$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint3$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint4$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint5$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint6$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint7$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint8$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint9$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint10$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint11$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint12$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint13$inboundSchema),
  z.lazy(() => GetProjectEnvContentHint14$inboundSchema),
]);

/** @internal */
export type GetProjectEnvResponseBodyContentHint$Outbound =
  | GetProjectEnvContentHint1$Outbound
  | GetProjectEnvContentHint2$Outbound
  | GetProjectEnvContentHint3$Outbound
  | GetProjectEnvContentHint4$Outbound
  | GetProjectEnvContentHint5$Outbound
  | GetProjectEnvContentHint6$Outbound
  | GetProjectEnvContentHint7$Outbound
  | GetProjectEnvContentHint8$Outbound
  | GetProjectEnvContentHint9$Outbound
  | GetProjectEnvContentHint10$Outbound
  | GetProjectEnvContentHint11$Outbound
  | GetProjectEnvContentHint12$Outbound
  | GetProjectEnvContentHint13$Outbound
  | GetProjectEnvContentHint14$Outbound;

/** @internal */
export const GetProjectEnvResponseBodyContentHint$outboundSchema: z.ZodType<
  GetProjectEnvResponseBodyContentHint$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBodyContentHint
> = z.union([
  z.lazy(() => GetProjectEnvContentHint1$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint2$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint3$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint4$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint5$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint6$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint7$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint8$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint9$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint10$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint11$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint12$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint13$outboundSchema),
  z.lazy(() => GetProjectEnvContentHint14$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyContentHint$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyContentHint$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType
  > = z.nativeEnum(GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType);

/** @internal */
export const GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType
  > = GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetProjectEnvResponseBodyInternalContentHint$inboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyInternalContentHint,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$inboundSchema,
    encryptedValue: z.string(),
  });

/** @internal */
export type GetProjectEnvResponseBodyInternalContentHint$Outbound = {
  type: string;
  encryptedValue: string;
};

/** @internal */
export const GetProjectEnvResponseBodyInternalContentHint$outboundSchema:
  z.ZodType<
    GetProjectEnvResponseBodyInternalContentHint$Outbound,
    z.ZodTypeDef,
    GetProjectEnvResponseBodyInternalContentHint
  > = z.object({
    type:
      GetProjectEnvResponseBodyEnvsResponse200ApplicationJSONType$outboundSchema,
    encryptedValue: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBodyInternalContentHint$ {
  /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$inboundSchema` instead. */
  export const inboundSchema =
    GetProjectEnvResponseBodyInternalContentHint$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$outboundSchema` instead. */
  export const outboundSchema =
    GetProjectEnvResponseBodyInternalContentHint$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBodyInternalContentHint$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBodyInternalContentHint$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBody1$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody1,
  z.ZodTypeDef,
  unknown
> = z.object({
  decrypted: z.boolean(),
  target: z.union([
    z.array(GetProjectEnvTarget1$inboundSchema),
    GetProjectEnvTarget2$inboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyType$inboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHint1$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint2$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint3$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint4$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint5$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint6$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint7$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint8$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint9$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint10$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint11$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint12$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint13$inboundSchema),
      z.lazy(() => GetProjectEnvContentHint14$inboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$inboundSchema),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/** @internal */
export type GetProjectEnvResponseBody1$Outbound = {
  decrypted: boolean;
  target?: Array<string> | string | undefined;
  type: string;
  sunsetSecretId?: string | undefined;
  id?: string | undefined;
  key: string;
  configurationId?: string | null | undefined;
  createdAt?: number | undefined;
  updatedAt?: number | undefined;
  createdBy?: string | null | undefined;
  updatedBy?: string | null | undefined;
  gitBranch?: string | undefined;
  edgeConfigId?: string | null | undefined;
  edgeConfigTokenId?: string | null | undefined;
  contentHint?:
    | GetProjectEnvContentHint1$Outbound
    | GetProjectEnvContentHint2$Outbound
    | GetProjectEnvContentHint3$Outbound
    | GetProjectEnvContentHint4$Outbound
    | GetProjectEnvContentHint5$Outbound
    | GetProjectEnvContentHint6$Outbound
    | GetProjectEnvContentHint7$Outbound
    | GetProjectEnvContentHint8$Outbound
    | GetProjectEnvContentHint9$Outbound
    | GetProjectEnvContentHint10$Outbound
    | GetProjectEnvContentHint11$Outbound
    | GetProjectEnvContentHint12$Outbound
    | GetProjectEnvContentHint13$Outbound
    | GetProjectEnvContentHint14$Outbound
    | null
    | undefined;
  internalContentHint?:
    | GetProjectEnvResponseBodyInternalContentHint$Outbound
    | null
    | undefined;
  comment?: string | undefined;
  customEnvironmentIds?: Array<string> | undefined;
  vsmValue?: string | undefined;
};

/** @internal */
export const GetProjectEnvResponseBody1$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody1$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody1
> = z.object({
  decrypted: z.boolean(),
  target: z.union([
    z.array(GetProjectEnvTarget1$outboundSchema),
    GetProjectEnvTarget2$outboundSchema,
  ]).optional(),
  type: GetProjectEnvResponseBodyType$outboundSchema,
  sunsetSecretId: z.string().optional(),
  id: z.string().optional(),
  key: z.string(),
  configurationId: z.nullable(z.string()).optional(),
  createdAt: z.number().optional(),
  updatedAt: z.number().optional(),
  createdBy: z.nullable(z.string()).optional(),
  updatedBy: z.nullable(z.string()).optional(),
  gitBranch: z.string().optional(),
  edgeConfigId: z.nullable(z.string()).optional(),
  edgeConfigTokenId: z.nullable(z.string()).optional(),
  contentHint: z.nullable(
    z.union([
      z.lazy(() => GetProjectEnvContentHint1$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint2$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint3$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint4$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint5$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint6$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint7$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint8$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint9$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint10$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint11$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint12$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint13$outboundSchema),
      z.lazy(() => GetProjectEnvContentHint14$outboundSchema),
    ]),
  ).optional(),
  internalContentHint: z.nullable(
    z.lazy(() => GetProjectEnvResponseBodyInternalContentHint$outboundSchema),
  ).optional(),
  comment: z.string().optional(),
  customEnvironmentIds: z.array(z.string()).optional(),
  vsmValue: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody1$ {
  /** @deprecated use `GetProjectEnvResponseBody1$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody1$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody1$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody1$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody1$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody1$Outbound;
}

/** @internal */
export const GetProjectEnvResponseBody$inboundSchema: z.ZodType<
  GetProjectEnvResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetProjectEnvResponseBody1$inboundSchema),
  z.lazy(() => GetProjectEnvResponseBody3$inboundSchema),
  z.lazy(() => GetProjectEnvResponseBody2$inboundSchema),
]);

/** @internal */
export type GetProjectEnvResponseBody$Outbound =
  | GetProjectEnvResponseBody1$Outbound
  | GetProjectEnvResponseBody3$Outbound
  | GetProjectEnvResponseBody2$Outbound;

/** @internal */
export const GetProjectEnvResponseBody$outboundSchema: z.ZodType<
  GetProjectEnvResponseBody$Outbound,
  z.ZodTypeDef,
  GetProjectEnvResponseBody
> = z.union([
  z.lazy(() => GetProjectEnvResponseBody1$outboundSchema),
  z.lazy(() => GetProjectEnvResponseBody3$outboundSchema),
  z.lazy(() => GetProjectEnvResponseBody2$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetProjectEnvResponseBody$ {
  /** @deprecated use `GetProjectEnvResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetProjectEnvResponseBody$inboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetProjectEnvResponseBody$outboundSchema;
  /** @deprecated use `GetProjectEnvResponseBody$Outbound` instead. */
  export type Outbound = GetProjectEnvResponseBody$Outbound;
}
