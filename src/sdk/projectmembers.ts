/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { projectMembersCreate } from "../funcs/projectMembersCreate.js";
import { projectMembersDelete } from "../funcs/projectMembersDelete.js";
import { projectMembersList } from "../funcs/projectMembersList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import {
    AddProjectMemberRequestBody,
    AddProjectMemberResponseBody,
} from "../models/addprojectmemberop.js";
import {
    GetProjectMembersRequest,
    GetProjectMembersResponseBody,
} from "../models/getprojectmembersop.js";
import { RemoveProjectMemberResponseBody } from "../models/removeprojectmemberop.js";
import { unwrapAsync } from "../types/fp.js";

export class ProjectMembers extends ClientSDK {
    /**
     * List project members
     *
     * @remarks
     * Lists all members of a project.
     */
    async list(
        request: GetProjectMembersRequest,
        options?: RequestOptions
    ): Promise<GetProjectMembersResponseBody> {
        return unwrapAsync(projectMembersList(this, request, options));
    }

    /**
     * Adds a new member to a project.
     *
     * @remarks
     * Adds a new member to the project.
     */
    async create(
        idOrName: string,
        teamId?: string | undefined,
        slug?: string | undefined,
        requestBody?: AddProjectMemberRequestBody | undefined,
        options?: RequestOptions
    ): Promise<AddProjectMemberResponseBody> {
        return unwrapAsync(
            projectMembersCreate(this, idOrName, teamId, slug, requestBody, options)
        );
    }

    /**
     * Remove a Project Member
     *
     * @remarks
     * Remove a member from a specific project
     */
    async delete(
        idOrName: string,
        uid: string,
        teamId?: string | undefined,
        slug?: string | undefined,
        options?: RequestOptions
    ): Promise<RemoveProjectMemberResponseBody> {
        return unwrapAsync(projectMembersDelete(this, idOrName, uid, teamId, slug, options));
    }
}
