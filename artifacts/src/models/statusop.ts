/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type StatusRequest = {
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};

export enum Status {
    Disabled = "disabled",
    Enabled = "enabled",
    OverLimit = "over_limit",
    Paused = "paused",
}

export type StatusResponseBody = {
    status: Status;
};

/** @internal */
export namespace StatusRequest$ {
    export const inboundSchema: z.ZodType<StatusRequest, z.ZodTypeDef, unknown> = z
        .object({
            teamId: z.string().optional(),
            slug: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.teamId === undefined ? null : { teamId: v.teamId }),
                ...(v.slug === undefined ? null : { slug: v.slug }),
            };
        });

    export type Outbound = {
        teamId?: string | undefined;
        slug?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StatusRequest> = z
        .object({
            teamId: z.string().optional(),
            slug: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.teamId === undefined ? null : { teamId: v.teamId }),
                ...(v.slug === undefined ? null : { slug: v.slug }),
            };
        });
}

/** @internal */
export namespace Status$ {
    export const inboundSchema = z.nativeEnum(Status);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace StatusResponseBody$ {
    export const inboundSchema: z.ZodType<StatusResponseBody, z.ZodTypeDef, unknown> = z
        .object({
            status: Status$.inboundSchema,
        })
        .transform((v) => {
            return {
                status: v.status,
            };
        });

    export type Outbound = {
        status: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, StatusResponseBody> = z
        .object({
            status: Status$.outboundSchema,
        })
        .transform((v) => {
            return {
                status: v.status,
            };
        });
}
